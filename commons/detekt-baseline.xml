<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ComplexCondition:Activity.kt$!isRPlus() &amp;&amp; isPathOnOTG(path) &amp;&amp; (baseConfig.OTGTreeUri.isEmpty() || !hasProperStoredTreeUri(true))</ID>
    <ID>ComplexCondition:Activity.kt$!isRPlus() || (isRPlus() &amp;&amp; (hasProperStoredDocumentUriSdk30(path) || Environment.isExternalStorageManager()))</ID>
    <ID>ComplexCondition:Activity.kt$(!isRPlus() &amp;&amp; isPathOnSD(path) &amp;&amp; !isSDCardSetAsDefaultStorage() &amp;&amp; (baseConfig.sdTreeUri.isEmpty() || !hasProperStoredTreeUri(false)))</ID>
    <ID>ComplexCondition:BaseSimpleActivity.kt$BaseSimpleActivity$isPathOnOTG(source) || isPathOnOTG(destination) || isPathOnSD(source) || isPathOnSD(destination) || isRestrictedSAFOnlyRoot(source) || isRestrictedSAFOnlyRoot(destination) || isAccessibleWithSAFSdk30(source) || isAccessibleWithSAFSdk30(destination) || fileDirItems.first().isDirectory</ID>
    <ID>ComplexCondition:BaseSimpleActivity.kt$BaseSimpleActivity$requestCode == SELECT_EXPORT_SETTINGS_FILE_INTENT &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp; resultData != null &amp;&amp; resultData.data != null</ID>
    <ID>ComplexCondition:Contact.kt$Contact$firstValue.isEmpty() &amp;&amp; firstName.isEmpty() &amp;&amp; middleName.isEmpty() &amp;&amp; surname.isEmpty()</ID>
    <ID>ComplexCondition:Contact.kt$Contact$secondValue.isEmpty() &amp;&amp; other.firstName.isEmpty() &amp;&amp; other.middleName.isEmpty() &amp;&amp; other.surname.isEmpty()</ID>
    <ID>ComplexCondition:CustomizationActivity.kt$CustomizationActivity$curTextColor == getColor(value.textColorId) &amp;&amp; curBackgroundColor == getColor(value.backgroundColorId) &amp;&amp; curPrimaryColor == getColor(value.primaryColorId) &amp;&amp; curAppIconColor == getColor(value.appIconColorId)</ID>
    <ID>ComplexCondition:FilePickerDialog.kt$FilePickerDialog$!containsDirectory(items) &amp;&amp; !mFirstUpdate &amp;&amp; !pickFile &amp;&amp; !showFAB</ID>
    <ID>ComplexCondition:FilePickerDialog.kt$FilePickerDialog$(pickFile &amp;&amp; document.isFile) || (!pickFile &amp;&amp; document.isDirectory)</ID>
    <ID>ComplexCondition:FilePickerDialog.kt$FilePickerDialog$(pickFile &amp;&amp; file.isFile) || (!pickFile &amp;&amp; file.isDirectory)</ID>
    <ID>ComplexCondition:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$(select &amp;&amp; selectedKeys.contains(itemKey)) || (!select &amp;&amp; !selectedKeys.contains(itemKey))</ID>
    <ID>ComplexCondition:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$(select &amp;&amp; selectedKeys.contains(itemKey)) || (!select &amp;&amp; !selectedKeys.contains(itemKey))</ID>
    <ID>ComplexCondition:PropertiesDialog.kt$PropertiesDialog$(isRPlus() &amp;&amp; Environment.isExternalStorageManager()) || (!isRPlus() &amp;&amp; activity.hasPermission(PERMISSION_WRITE_STORAGE))</ID>
    <ID>ComplexCondition:RenamePatternTab.kt$RenamePatternTab$(!newName.contains(".") &amp;&amp; path.contains(".")) || (useMediaFileExtension &amp;&amp; !".${newName.substringAfterLast(".")}".isMediaFile())</ID>
    <ID>ConstructorParameterNaming:Contact.kt$Contact$var IMs: ArrayList&lt;IM&gt; = arrayListOf()</ID>
    <ID>ConstructorParameterNaming:LocalContact.kt$LocalContact$@ColumnInfo(name = "ims") var IMs: ArrayList&lt;IM&gt;</ID>
    <ID>CyclomaticComplexMethod:Activity-themes.kt$fun Activity.getThemeId(color: Int = baseConfig.primaryColor, showTransparentTop: Boolean = false)</ID>
    <ID>CyclomaticComplexMethod:Activity.kt$fun Activity.setupDialogStuff( view: View, dialog: AlertDialog.Builder, titleId: Int = 0, titleText: String = "", cancelOnTouchOutside: Boolean = true, callback: ((alertDialog: AlertDialog) -&gt; Unit)? = null )</ID>
    <ID>CyclomaticComplexMethod:Activity.kt$fun BaseSimpleActivity.deleteFileBg( fileDirItem: FileDirItem, allowDeleteFolder: Boolean = false, isDeletingMultipleFiles: Boolean, callback: ((wasSuccess: Boolean) -&gt; Unit)? = null, )</ID>
    <ID>CyclomaticComplexMethod:Activity.kt$fun BaseSimpleActivity.getFileOutputStream(fileDirItem: FileDirItem, allowCreatingNewFile: Boolean = false, callback: (outputStream: OutputStream?) -&gt; Unit)</ID>
    <ID>CyclomaticComplexMethod:Activity.kt$fun BaseSimpleActivity.renameFile( oldPath: String, newPath: String, isRenamingMultipleFiles: Boolean, callback: ((success: Boolean, android30RenameFormat: Android30RenameFormat) -&gt; Unit)? = null )</ID>
    <ID>CyclomaticComplexMethod:Activity.kt$private fun BaseSimpleActivity.renameCasually( oldPath: String, newPath: String, isRenamingMultipleFiles: Boolean, callback: ((success: Boolean, android30RenameFormat: Android30RenameFormat) -&gt; Unit)? )</ID>
    <ID>CyclomaticComplexMethod:BaseSimpleActivity.kt$BaseSimpleActivity$fun copyMoveFilesTo( fileDirItems: ArrayList&lt;FileDirItem&gt;, source: String, destination: String, isCopyOperation: Boolean, copyPhotoVideoOnly: Boolean, copyHidden: Boolean, callback: (destinationPath: String) -&gt; Unit, )</ID>
    <ID>CyclomaticComplexMethod:BaseSimpleActivity.kt$BaseSimpleActivity$override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?)</ID>
    <ID>CyclomaticComplexMethod:ColorPickerDialog.kt$private fun DialogColorPickerBinding.init( color: Int, backgroundColor: Int, recentColors: List&lt;Int&gt;, hsv: Hsv, currentColorCallback: ((color: Int) -&gt; Unit) )</ID>
    <ID>CyclomaticComplexMethod:Contact.kt$Contact$private fun compareUsingStrings(firstString: String, secondString: String, other: Contact): Int</ID>
    <ID>CyclomaticComplexMethod:ContactsHelper.kt$ContactsHelper$fun insertContact(contact: Contact): Boolean</ID>
    <ID>CyclomaticComplexMethod:ContactsHelper.kt$ContactsHelper$fun updateContact(contact: Contact, photoUpdateStatus: Int): Boolean</ID>
    <ID>CyclomaticComplexMethod:ContactsHelper.kt$ContactsHelper$private fun getDeviceContacts(contacts: SparseArray&lt;Contact&gt;, ignoredContactSources: HashSet&lt;String&gt;?, gettingDuplicates: Boolean)</ID>
    <ID>CyclomaticComplexMethod:ContactsHelper.kt$ContactsHelper$private fun parseContactCursor(selection: String, selectionArgs: Array&lt;String&gt;): Contact?</ID>
    <ID>CyclomaticComplexMethod:Context-contacts.kt$fun Context.getSocialActions(id: Int): ArrayList&lt;SocialAction&gt;</ID>
    <ID>CyclomaticComplexMethod:Context-storage.kt$fun Context.getFileOutputStreamSync(path: String, mimeType: String, parentDocumentFile: DocumentFile? = null): OutputStream?</ID>
    <ID>CyclomaticComplexMethod:Context-storage.kt$fun Context.getOTGItems(path: String, shouldShowHidden: Boolean, getProperFileSize: Boolean, callback: (ArrayList&lt;FileDirItem&gt;) -&gt; Unit)</ID>
    <ID>CyclomaticComplexMethod:Context-styling.kt$fun Context.updateTextColors(viewGroup: ViewGroup)</ID>
    <ID>CyclomaticComplexMethod:Context.kt$fun Context.getFormattedSeconds(seconds: Int, showBefore: Boolean = true)</ID>
    <ID>CyclomaticComplexMethod:Context.kt$fun Context.getPermissionString(id: Int)</ID>
    <ID>CyclomaticComplexMethod:CopyMoveTask.kt$CopyMoveTask$private fun copyDirectory(source: FileDirItem, destinationPath: String)</ID>
    <ID>CyclomaticComplexMethod:CreateNewFolderDialog.kt$CreateNewFolderDialog$private fun createFolder(path: String, alertDialog: AlertDialog)</ID>
    <ID>CyclomaticComplexMethod:DynamicTheme.kt$fun getTheme(context: Context, materialYouTheme: Theme.SystemDefaultMaterialYou): Theme</ID>
    <ID>CyclomaticComplexMethod:FileDirItem.kt$FileDirItem$override fun compareTo(other: FileDirItem): Int</ID>
    <ID>CyclomaticComplexMethod:LineColorPickerDialog.kt$LineColorPickerDialog$private fun getColorsForIndex(index: Int)</ID>
    <ID>CyclomaticComplexMethod:LineColorPickerDialog.kt$private fun Context.getColorsForIndex(index: Int)</ID>
    <ID>CyclomaticComplexMethod:ManageBlockedNumbersScreen.kt$@Composable internal fun ManageBlockedNumbersScreen( goBack: () -&gt; Unit, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, setAsDefault: () -&gt; Unit, isDialer: Boolean, hasGivenPermissionToBlock: Boolean, isBlockUnknownSelected: Boolean, onBlockUnknownSelectedChange: (Boolean) -&gt; Unit, isHiddenSelected: Boolean, onHiddenSelectedChange: (Boolean) -&gt; Unit, blockedNumbers: ImmutableList&lt;BlockedNumber&gt;?, onDelete: (Set&lt;Long&gt;) -&gt; Unit, onEdit: (BlockedNumber) -&gt; Unit, onCopy: (BlockedNumber) -&gt; Unit, )</ID>
    <ID>CyclomaticComplexMethod:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$fun getContacts(context: Context, cursor: Cursor?): ArrayList&lt;Contact&gt;</ID>
    <ID>CyclomaticComplexMethod:MyRecyclerView.kt$MyRecyclerView$override fun dispatchTouchEvent(ev: MotionEvent): Boolean</ID>
    <ID>CyclomaticComplexMethod:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$protected fun selectItemRange(from: Int, to: Int, min: Int, max: Int)</ID>
    <ID>CyclomaticComplexMethod:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$protected fun selectItemRange(from: Int, to: Int, min: Int, max: Int)</ID>
    <ID>CyclomaticComplexMethod:PropertiesDialog.kt$PropertiesDialog$private fun addProperties(path: String)</ID>
    <ID>CyclomaticComplexMethod:RenamePatternTab.kt$RenamePatternTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>CyclomaticComplexMethod:RenameSimpleTab.kt$RenameSimpleTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>CyclomaticComplexMethod:SimpleContactsHelper.kt$SimpleContactsHelper$private fun getContactNames(favoritesOnly: Boolean): List&lt;SimpleContact&gt;</ID>
    <ID>CyclomaticComplexMethod:VcfExporter.kt$VcfExporter$fun exportContacts( activity: BaseSimpleActivity, outputStream: OutputStream?, contacts: ArrayList&lt;Contact&gt;, showExportingToast: Boolean, callback: (result: ExportResult) -&gt; Unit )</ID>
    <ID>EmptyCatchBlock:Context-storage.kt${ }</ID>
    <ID>EmptyCatchBlock:Context-styling.kt${ }</ID>
    <ID>EmptyCatchBlock:Context.kt${ }</ID>
    <ID>EmptyCatchBlock:MyTextInputLayout.kt$MyTextInputLayout${ }</ID>
    <ID>EmptyFunctionBlock:BaseSecurityTab.kt$BaseSecurityTab${}</ID>
    <ID>EmptyFunctionBlock:BiometricIdTab.kt$BiometricIdTab${}</ID>
    <ID>EmptyFunctionBlock:EditText.kt$&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:FilepickerFavoritesAdapter.kt$FilepickerFavoritesAdapter${}</ID>
    <ID>EmptyFunctionBlock:FilepickerItemsAdapter.kt$FilepickerItemsAdapter${}</ID>
    <ID>EmptyFunctionBlock:ItemMoveCallback.kt$ItemMoveCallback${}</ID>
    <ID>EmptyFunctionBlock:MyAppCompatSpinner.kt$MyAppCompatSpinner.&lt;no name provided&gt;${ }</ID>
    <ID>EmptyFunctionBlock:PatternTab.kt$PatternTab.&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:SeekBar.kt$&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:ViewPager.kt$&lt;no name provided&gt;${}</ID>
    <ID>ExplicitItLambdaParameter:ContactsHelper.kt$ContactsHelper${ it -&gt; if (it.size == 1) { resultContacts.add(it.first()) } else { val sorted = it.sortedByDescending { it.getStringToCompare().length } resultContacts.add(sorted.first()) } }</ID>
    <ID>ForEachOnRange:Context-styling.kt$(0 until cnt).map { viewGroup.getChildAt(it) }</ID>
    <ID>ForEachOnRange:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$(min until to).filter { it != from }</ID>
    <ID>ForEachOnRange:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$(min..max).filter { it != from }</ID>
    <ID>ForEachOnRange:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$(to + 1..max).filter { it != from }</ID>
    <ID>ForEachOnRange:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$(min until to).filter { it != from }</ID>
    <ID>ForEachOnRange:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$(min..max).filter { it != from }</ID>
    <ID>ForEachOnRange:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$(to + 1..max).filter { it != from }</ID>
    <ID>ForbiddenComment:Int.kt$// TODO: how to do "bits &amp; ~bit" in kotlin?</ID>
    <ID>ForbiddenComment:String.kt$// TODO: Use KMP search algorithm</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun AboutScreen( goBack: () -&gt; Unit, helpUsSection: @Composable () -&gt; Unit, aboutSection: @Composable () -&gt; Unit, socialSection: @Composable () -&gt; Unit, otherSection: @Composable () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun AboutSection( setupFAQ: Boolean, onFAQClick: () -&gt; Unit, onEmailClick: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun HelpUsSection( onRateUsClick: () -&gt; Unit, onInviteClick: () -&gt; Unit, onContributorsClick: () -&gt; Unit, showRateUs: Boolean, showInvite: Boolean, showDonate: Boolean, onDonateClick: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun OtherSection( showMoreApps: Boolean, onMoreAppsClick: () -&gt; Unit, onWebsiteClick: () -&gt; Unit, showWebsite: Boolean, showPrivacyPolicy: Boolean, onPrivacyPolicyClick: () -&gt; Unit, onLicenseClick: () -&gt; Unit, version: String, onVersionClick: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun SocialSection( onGithubClick: () -&gt; Unit, onRedditClick: () -&gt; Unit, onTelegramClick: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun SocialText( text: String, icon: Int, tint: Color? = null, click: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AboutScreen.kt$@Composable internal fun TwoLinerTextItem(text: String, icon: Int, click: () -&gt; Unit)</ID>
    <ID>FunctionNaming:AboutScreen.kt$@MyDevices @Composable private fun AboutScreenPreview()</ID>
    <ID>FunctionNaming:ActionMenu.kt$@Composable fun ActionMenu( items: ImmutableList&lt;ActionItem&gt;, numIcons: Int = 2, // includes overflow menu icon; may be overridden by NEVER_OVERFLOW isMenuVisible: Boolean, iconsColor: Color? = null, onMenuToggle: (isVisible: Boolean) -&gt; Unit )</ID>
    <ID>FunctionNaming:ActionMenu.kt$@Composable internal fun ActionIconButton( onClick: () -&gt; Unit, modifier: Modifier = Modifier, interactionSource: MutableInteractionSource = rememberMutableInteractionSource(), contentColor: Color, content: @Composable () -&gt; Unit, )</ID>
    <ID>FunctionNaming:ActionMenu.kt$@MyDevices @Composable private fun ActionMenuPreview()</ID>
    <ID>FunctionNaming:AddBlockedNumberDialog.kt$@Composable @MyDevices private fun AddOrEditBlockedNumberAlertDialogPreview()</ID>
    <ID>FunctionNaming:AddBlockedNumberDialog.kt$@Composable fun AddOrEditBlockedNumberAlertDialog( alertDialogState: AlertDialogState, blockedNumber: BlockedNumber?, modifier: Modifier = Modifier, deleteBlockedNumber: (String) -&gt; Unit, addBlockedNumber: (String) -&gt; Unit )</ID>
    <ID>FunctionNaming:AlertDialogState.kt$AlertDialogState$@Composable fun DialogMember( content: @Composable () -&gt; Unit )</ID>
    <ID>FunctionNaming:AlertDialogsExtensions.kt$@Composable fun DialogSurface( modifier: Modifier = Modifier, content: @Composable () -&gt; Unit )</ID>
    <ID>FunctionNaming:AlertDialogsExtensions.kt$@Composable fun ShowKeyboardWhenDialogIsOpenedAndRequestFocus( keyboardController: SoftwareKeyboardController? = LocalSoftwareKeyboardController.current, focusRequester: FocusRequester? )</ID>
    <ID>FunctionNaming:AppSideloadedDialog.kt$@Composable @MyDevices private fun AppSideLoadedAlertDialogPreview()</ID>
    <ID>FunctionNaming:AppSideloadedDialog.kt$@Composable fun AppSideLoadedAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, onDownloadClick: (url: String) -&gt; Unit, onCancelClick: () -&gt; Unit )</ID>
    <ID>FunctionNaming:AppTheme.kt$@Composable fun AppTheme( content: @Composable () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AppTheme.kt$@Composable fun AppThemeSurface( modifier: Modifier = Modifier, content: @Composable () -&gt; Unit, )</ID>
    <ID>FunctionNaming:AppTheme.kt$@Composable private fun OnContentDisplayed()</ID>
    <ID>FunctionNaming:BottomSheetChooserDialog.kt$@Composable fun ChooserBottomSheetDialog( bottomSheetDialogState: BottomSheetDialogState, items: ImmutableList&lt;SimpleListItem&gt;, modifier: Modifier = Modifier, onItemClicked: (SimpleListItem) -&gt; Unit )</ID>
    <ID>FunctionNaming:BottomSheetChooserDialog.kt$@MyDevices @Composable private fun ChooserBottomSheetDialogPreview()</ID>
    <ID>FunctionNaming:BottomSheetDialogState.kt$BottomSheetDialogState$@Composable fun BottomSheetContent( modifier: Modifier = Modifier, content: @Composable () -&gt; Unit )</ID>
    <ID>FunctionNaming:BottomSheetDialogsExtensions.kt$@Composable fun BottomSheetBoxDialogSurface( modifier: Modifier = Modifier, content: @Composable BoxScope.() -&gt; Unit )</ID>
    <ID>FunctionNaming:BottomSheetDialogsExtensions.kt$@Composable fun BottomSheetColumnDialogSurface( modifier: Modifier = Modifier, content: @Composable ColumnScope.() -&gt; Unit )</ID>
    <ID>FunctionNaming:BottomSheetDialogsExtensions.kt$@Composable fun BottomSheetDialogSurface( modifier: Modifier = Modifier, content: @Composable (backgroundColor: Color) -&gt; Unit )</ID>
    <ID>FunctionNaming:BottomSheetDialogsExtensions.kt$@Composable fun BottomSheetSpacerEdgeToEdge()</ID>
    <ID>FunctionNaming:CallConfirmationDialog.kt$@Composable @MyDevices private fun CallConfirmationAlertDialogPreview()</ID>
    <ID>FunctionNaming:CallConfirmationDialog.kt$@Composable fun CallConfirmationAlertDialog( alertDialogState: AlertDialogState, callee: String, modifier: Modifier = Modifier, callback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:ChangeDateTimeFormatDialog.kt$@Composable @MyDevices private fun ChangeDateTimeFormatAlertDialogPreview()</ID>
    <ID>FunctionNaming:ChangeDateTimeFormatDialog.kt$@Composable fun ChangeDateTimeFormatAlertDialog( alertDialogState: AlertDialogState, is24HourChecked: Boolean, modifier: Modifier = Modifier, callback: (selectedFormat: String, is24HourChecked: Boolean) -&gt; Unit )</ID>
    <ID>FunctionNaming:ChangeDateTimeFormatDialog.kt$@Composable internal fun DialogCheckBoxWithRadioAlignmentComponent( modifier: Modifier = Modifier, label: String, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, onChange: ((Boolean) -&gt; Unit)? = null, checkboxColors: CheckboxColors = CheckboxDefaults.colors( checkedColor = SimpleTheme.colorScheme.primary, checkmarkColor = SimpleTheme.colorScheme.surface, ) )</ID>
    <ID>FunctionNaming:ChangeViewTypeDialog.kt$@Composable fun ChangeViewTypeAlertDialog( alertDialogState: AlertDialogState, selectedViewType: Int, modifier: Modifier = Modifier, onTypeChosen: (type: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:ChangeViewTypeDialog.kt$@MyDevices @Composable private fun ChangeViewTypeAlertDialogPreview()</ID>
    <ID>FunctionNaming:ColorPickerDialog.kt$@Composable @MyDevices private fun ColorPickerAlertDialogPreview()</ID>
    <ID>FunctionNaming:ColorPickerDialog.kt$@Composable fun ColorPickerAlertDialog( alertDialogState: AlertDialogState, @ColorInt color: Int, modifier: Modifier = Modifier, removeDimmedBackground: Boolean = false, addDefaultColorButton: Boolean = false, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:ComposeActivityExtensions.kt$@Composable fun CheckAppOnSdCard()</ID>
    <ID>FunctionNaming:ComposeActivityExtensions.kt$@Composable fun FakeVersionCheck()</ID>
    <ID>FunctionNaming:ComposeExtensions.kt$@Composable fun AdjustNavigationBarColors()</ID>
    <ID>FunctionNaming:ComposeExtensions.kt$@Composable internal fun TransparentSystemBars(darkIcons: Boolean = !isSystemInDarkTheme())</ID>
    <ID>FunctionNaming:ConfirmationAdvancedDialog.kt$@Composable @MyDevices private fun ConfirmationAdvancedAlertDialogPreview()</ID>
    <ID>FunctionNaming:ConfirmationAdvancedDialog.kt$@Composable fun ConfirmationAdvancedAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, message: String = "", messageId: Int? = R.string.proceed_with_deletion, positive: Int? = R.string.yes, negative: Int? = R.string.no, cancelOnTouchOutside: Boolean = true, callback: (result: Boolean) -&gt; Unit )</ID>
    <ID>FunctionNaming:ConfirmationDialog.kt$@Composable @MyDevices private fun ConfirmationAlertDialogPreview()</ID>
    <ID>FunctionNaming:ConfirmationDialog.kt$@Composable fun ConfirmationAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, message: String = "", messageId: Int? = R.string.proceed_with_deletion, positive: Int? = R.string.yes, negative: Int? = R.string.no, cancelOnTouchOutside: Boolean = true, dialogTitle: String = "", callback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:ContributorsScreen.kt$@Composable @MyDevices private fun ContributorsScreenPreview()</ID>
    <ID>FunctionNaming:ContributorsScreen.kt$@Composable internal fun ContributorsScreen( goBack: () -&gt; Unit, showContributorsLabel: Boolean, contributors: ImmutableList&lt;LanguageContributor&gt; )</ID>
    <ID>FunctionNaming:ContributorsScreen.kt$@Composable private fun ContributorItem( modifier: Modifier = Modifier, languageContributor: LanguageContributor )</ID>
    <ID>FunctionNaming:CreateNewFolderDialog.kt$@Composable fun CreateNewFolderAlertDialog( alertDialogState: AlertDialogState, path: String, modifier: Modifier = Modifier, callback: (path: String) -&gt; Unit )</ID>
    <ID>FunctionNaming:CreateNewFolderDialog.kt$@MyDevices @Composable private fun CreateNewFolderAlertDialogPreview()</ID>
    <ID>FunctionNaming:CustomIntervalPickerDialog.kt$@Composable @MyDevices private fun CustomIntervalPickerAlertDialogPreview()</ID>
    <ID>FunctionNaming:CustomIntervalPickerDialog.kt$@Composable fun CustomIntervalPickerAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, selectedSeconds: Int = 0, showSeconds: Boolean = false, callback: (minutes: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:DonateDialog.kt$@Composable @MyDevices private fun DonateAlertDialogPreview()</ID>
    <ID>FunctionNaming:DonateDialog.kt$@Composable fun DonateAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier )</ID>
    <ID>FunctionNaming:DonationScreen.kt$@Composable @Preview fun PreviewDonationScreen()</ID>
    <ID>FunctionNaming:DonationScreen.kt$@Composable fun DonationCryptos( options: List&lt;Donation.Crypto&gt;, copyToClipboard: (String) -&gt; Unit, )</ID>
    <ID>FunctionNaming:DonationScreen.kt$@Composable fun DonationListItem( name: String, description: String, @DrawableRes icon: Int, onClick: () -&gt; Unit, onCopyClick: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:DonationScreen.kt$@Composable fun DonationPlatforms( options: List&lt;Donation.Platform&gt;, openWebsite: (String) -&gt; Unit, copyToClipboard: (String) -&gt; Unit, )</ID>
    <ID>FunctionNaming:DonationScreen.kt$@Composable fun DonationScreen( donationOptions: List&lt;Donation.Platform&gt;, cryptoAddresses: List&lt;Donation.Crypto&gt;, goBack: () -&gt; Unit, openWebsite: (String) -&gt; Unit, copyToClipboard: (String) -&gt; Unit, )</ID>
    <ID>FunctionNaming:EnterPasswordDialog.kt$@Composable fun EnterPasswordAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, callback: (password: String) -&gt; Unit, cancelCallback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:EnterPasswordDialog.kt$@MyDevices @Composable private fun EnterPasswordAlertDialogPreview()</ID>
    <ID>FunctionNaming:FAQScreen.kt$@Composable internal fun FAQScreen( goBack: () -&gt; Unit, faqItems: ImmutableList&lt;FAQItem&gt;, )</ID>
    <ID>FunctionNaming:FAQScreen.kt$@MyDevices @Composable private fun FAQScreenPreview()</ID>
    <ID>FunctionNaming:FeatureLockedDialog.kt$@Composable @MyDevices private fun FeatureLockedAlertDialogPreview()</ID>
    <ID>FunctionNaming:FeatureLockedDialog.kt$@Composable fun FeatureLockedAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, cancelCallback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:FileConflictDialog.kt$@Composable fun FileConflictAlertDialog( alertDialogState: AlertDialogState, fileDirItem: FileDirItemReadOnly, showApplyToAll: Boolean, modifier: Modifier = Modifier, callback: (resolution: Int, applyForAll: Boolean) -&gt; Unit )</ID>
    <ID>FunctionNaming:FileConflictDialog.kt$@MyDevices @Composable private fun FileConflictAlertDialogPreview()</ID>
    <ID>FunctionNaming:FolderLockingNoticeDialog.kt$@Composable @MyDevices private fun FolderLockingNoticeAlertDialogPreview()</ID>
    <ID>FunctionNaming:FolderLockingNoticeDialog.kt$@Composable fun FolderLockingNoticeAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, callback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:LicenseScreen.kt$@Composable @MyDevices private fun LicenseScreenPreview()</ID>
    <ID>FunctionNaming:LicenseScreen.kt$@Composable internal fun LicenseScreen( goBack: () -&gt; Unit, thirdPartyLicenses: ImmutableList&lt;License&gt;, onLicenseClick: (urlId: Int) -&gt; Unit, )</ID>
    <ID>FunctionNaming:LicenseScreen.kt$@Composable private fun LicenseItem( license: License, onLicenseClick: (urlId: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:LineColorPickerDialog.kt$@Composable @MyDevices private fun LineColorPickerAlertDialogPreview()</ID>
    <ID>FunctionNaming:LineColorPickerDialog.kt$@Composable fun LineColorPickerAlertDialog( alertDialogState: AlertDialogState, @ColorInt color: Int, isPrimaryColorPicker: Boolean, modifier: Modifier = Modifier, primaryColors: Int = R.array.md_primary_colors, appIconIDs: ArrayList&lt;Int&gt;? = null, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:LinkifyTextComponent.kt$@Composable @MyDevices private fun LinkifyTextComponentPreview()</ID>
    <ID>FunctionNaming:LinkifyTextComponent.kt$@Composable fun LinkifyTextComponent( modifier: Modifier = Modifier, fontSize: TextUnit = 14.sp, removeUnderlines: Boolean = true, textAlignment: Int = TextView.TEXT_ALIGNMENT_TEXT_START, text: () -&gt; Spanned )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable internal fun ManageBlockedNumbersScreen( goBack: () -&gt; Unit, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, setAsDefault: () -&gt; Unit, isDialer: Boolean, hasGivenPermissionToBlock: Boolean, isBlockUnknownSelected: Boolean, onBlockUnknownSelectedChange: (Boolean) -&gt; Unit, isHiddenSelected: Boolean, onHiddenSelectedChange: (Boolean) -&gt; Unit, blockedNumbers: ImmutableList&lt;BlockedNumber&gt;?, onDelete: (Set&lt;Long&gt;) -&gt; Unit, onEdit: (BlockedNumber) -&gt; Unit, onCopy: (BlockedNumber) -&gt; Unit, )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun ActionModeToolbar( modifier: Modifier = Modifier, selectedIdsCount: Int, blockedNumbersCount: Int, onBackClick: () -&gt; Unit, onCopy: () -&gt; Unit, onDelete: () -&gt; Unit, onSelectAll: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun BlockedNumber( modifier: Modifier = Modifier, blockedNumber: BlockedNumber, onDelete: (Set&lt;Long&gt;) -&gt; Unit, onCopy: (BlockedNumber) -&gt; Unit, isSelected: Boolean, )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun BlockedNumberActionMenu( selectedIdsCount: Int, onDelete: () -&gt; Unit, onCopy: () -&gt; Unit, iconColor: Color? = null, )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun BlockedNumberHeadlineContent(modifier: Modifier = Modifier, blockedNumber: BlockedNumber, hasContactName: Boolean)</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun BlockedNumberTrailingContent(modifier: Modifier = Modifier, onDelete: () -&gt; Unit, onCopy: () -&gt; Unit)</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@Composable private fun NonActionModeToolbar( scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, goBack: () -&gt; Unit, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:ManageBlockedNumbersScreen.kt$@MyDevices @Composable private fun ManageBlockedNumbersScreenPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isDialer: Boolean)</ID>
    <ID>FunctionNaming:OpenDeviceSettingsDialog.kt$@Composable @MyDevices private fun OpenDeviceSettingsAlertDialogPreview()</ID>
    <ID>FunctionNaming:OpenDeviceSettingsDialog.kt$@Composable fun OpenDeviceSettingsAlertDialog( alertDialogState: AlertDialogState, message: String, modifier: Modifier = Modifier )</ID>
    <ID>FunctionNaming:PermissionRequiredDialog.kt$@Composable @MyDevices private fun PermissionRequiredAlertDialogPreview()</ID>
    <ID>FunctionNaming:PermissionRequiredDialog.kt$@Composable fun PermissionRequiredAlertDialog( alertDialogState: AlertDialogState, text: String, modifier: Modifier = Modifier, negativeActionCallback: (() -&gt; Unit)? = null, positiveActionCallback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:PurchaseThankYouDialog.kt$@Composable @MyDevices private fun PurchaseThankYouAlertDialogPreview()</ID>
    <ID>FunctionNaming:PurchaseThankYouDialog.kt$@Composable fun PurchaseThankYouAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:RadioButtonDialogComponent.kt$@Composable @MyDevices private fun RadioButtonDialogComponentPreview()</ID>
    <ID>FunctionNaming:RadioButtonDialogComponent.kt$@Composable fun RadioButtonDialogComponent( modifier: Modifier = Modifier, setSelected: (selected: String) -&gt; Unit, item: String, selected: String? )</ID>
    <ID>FunctionNaming:RadioGroupDialog.kt$@Composable @MyDevices private fun RadioGroupDialogAlertDialogPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) showOKButton: Boolean)</ID>
    <ID>FunctionNaming:RadioGroupDialog.kt$@Composable fun RadioGroupAlertDialog( alertDialogState: AlertDialogState, items: ImmutableList&lt;RadioItem&gt;, modifier: Modifier = Modifier, selectedItemId: Int = -1, titleId: Int = 0, showOKButton: Boolean = false, cancelCallback: (() -&gt; Unit)? = null, callback: (newValue: Any) -&gt; Unit )</ID>
    <ID>FunctionNaming:RadioGroupDialogComponent.kt$@Composable @MyDevices private fun RadioGroupDialogComponentPreview()</ID>
    <ID>FunctionNaming:RadioGroupDialogComponent.kt$@Composable fun RadioGroupDialogComponent( modifier: Modifier = Modifier, items: List&lt;String&gt;, selected: String?, verticalPadding: Dp = 10.dp, horizontalPadding: Dp = 20.dp, setSelected: (selected: String) -&gt; Unit, )</ID>
    <ID>FunctionNaming:RateStarsDialog.kt$@Composable @MyDevices private fun RateStarsAlertDialogPreview()</ID>
    <ID>FunctionNaming:RateStarsDialog.kt$@Composable fun RateStarsAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, onRating: (stars: Int) -&gt; Unit )</ID>
    <ID>FunctionNaming:RateStarsDialog.kt$@Composable private fun StarRating( modifier: Modifier = Modifier, maxRating: Int = 5, currentRating: Int, onRatingChanged: (Int) -&gt; Unit, starsColor: Color = SimpleTheme.colorScheme.primary, )</ID>
    <ID>FunctionNaming:SettingsCheckBoxComponent.kt$@Composable fun SettingsCheckBoxComponent( modifier: Modifier = Modifier, label: String, value: String? = null, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, onChange: ((Boolean) -&gt; Unit)? = null, checkboxColors: CheckboxColors = CheckboxDefaults.colors( checkedColor = SimpleTheme.colorScheme.primary, checkmarkColor = SimpleTheme.colorScheme.surface, ) )</ID>
    <ID>FunctionNaming:SettingsCheckBoxComponent.kt$@MyDevices @Composable private fun SettingsCheckBoxComponentPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isChecked: Boolean)</ID>
    <ID>FunctionNaming:SettingsDivider.kt$@Composable @MyDevices private fun SettingsHorizontalDividerPreview()</ID>
    <ID>FunctionNaming:SettingsDivider.kt$@Composable fun SettingsHorizontalDivider( modifier: Modifier = Modifier, color: Color = divider_grey, thickness: Dp = DividerDefaults.Thickness, )</ID>
    <ID>FunctionNaming:SettingsGroup.kt$@Composable fun SettingsGroup( modifier: Modifier = Modifier, title: @Composable (() -&gt; Unit)? = null, content: @Composable ColumnScope.() -&gt; Unit, )</ID>
    <ID>FunctionNaming:SettingsGroup.kt$@Composable fun SettingsGroupTitle( modifier: Modifier = Modifier, title: @Composable () -&gt; Unit )</ID>
    <ID>FunctionNaming:SettingsGroup.kt$@MyDevices @Composable private fun SettingsGroupPreview()</ID>
    <ID>FunctionNaming:SettingsLazyGroup.kt$@Composable fun SettingsLazyGroup( modifier: Modifier = Modifier, title: @Composable (() -&gt; Unit)? = null, state: LazyListState = rememberLazyListState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, content: LazyListScope.() -&gt; Unit )</ID>
    <ID>FunctionNaming:SettingsLazyGroup.kt$@MyDevices @Composable private fun SettingsLazyGroupPreview()</ID>
    <ID>FunctionNaming:SettingsListItem.kt$@Composable fun SettingsListItem( modifier: Modifier = Modifier, text: @Composable () -&gt; Unit, @DrawableRes icon: Int? = null, isImage: Boolean = false, click: (() -&gt; Unit)? = null, tint: Color? = null )</ID>
    <ID>FunctionNaming:SettingsListItem.kt$@Composable fun SettingsListItem( modifier: Modifier = Modifier, text: String, fontSize: TextUnit = TextUnit.Unspecified, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Clip, @DrawableRes icon: Int? = null, isImage: Boolean = false, click: (() -&gt; Unit)? = null, tint: Color? = null )</ID>
    <ID>FunctionNaming:SettingsListItem.kt$@MyDevices @Composable private fun SettingsListItem(@PreviewParameter(BooleanPreviewParameterProvider::class) isImage: Boolean)</ID>
    <ID>FunctionNaming:SettingsPreferenceComponent.kt$@Composable fun SettingsPreferenceComponent( modifier: Modifier = Modifier, label: String, value: String? = null, isPreferenceEnabled: Boolean = true, doOnPreferenceLongClick: (() -&gt; Unit)? = null, doOnPreferenceClick: (() -&gt; Unit)? = null, preferenceValueColor: Color = preferenceValueColor(isEnabled = isPreferenceEnabled), preferenceLabelColor: Color = preferenceLabelColor(isEnabled = isPreferenceEnabled) )</ID>
    <ID>FunctionNaming:SettingsPreferenceComponent.kt$@MyDevices @Composable private fun SettingsPreferencePreview()</ID>
    <ID>FunctionNaming:SettingsScaffoldExtensions.kt$@Composable internal fun ScreenBoxSettingsScaffold(paddingValues: PaddingValues, modifier: Modifier = Modifier, content: @Composable BoxScope.() -&gt; Unit)</ID>
    <ID>FunctionNaming:SettingsScaffoldExtensions.kt$@Composable internal fun SystemUISettingsScaffoldStatusBarColor(scrolledColor: Color)</ID>
    <ID>FunctionNaming:SettingsSwitchComponent.kt$@Composable fun SettingsSwitchComponent( modifier: Modifier = Modifier, label: String, value: String? = null, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, showCheckmark: Boolean = false, onChange: ((Boolean) -&gt; Unit)? = null, switchColors: SwitchColors = SwitchDefaults.colors() )</ID>
    <ID>FunctionNaming:SettingsSwitchComponent.kt$@MyDevices @Composable private fun SettingsSwitchComponentPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isChecked: Boolean)</ID>
    <ID>FunctionNaming:SettingsTitleTextComponent.kt$@Composable fun SettingsTitleTextComponent( modifier: Modifier = Modifier, text: String, color: Color = SimpleTheme.colorScheme.primary, maxLines: Int = 1, overflow: TextOverflow = TextOverflow.Ellipsis )</ID>
    <ID>FunctionNaming:SettingsTitleTextComponent.kt$@MyDevices @Composable private fun SettingsTitleTextComponentPreview()</ID>
    <ID>FunctionNaming:SimpleColumnScaffold.kt$@Composable fun SimpleColumnScaffold( modifier: Modifier = Modifier, customTopBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit, goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable() (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>FunctionNaming:SimpleColumnScaffold.kt$@Composable fun SimpleColumnScaffold( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable() (RowScope.() -&gt; Unit), goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>FunctionNaming:SimpleColumnScaffold.kt$@Composable fun SimpleColumnScaffold( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>FunctionNaming:SimpleColumnScaffold.kt$@Composable fun SimpleColumnScaffold( title: String, goBack: () -&gt; Unit, modifier: Modifier = Modifier, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>FunctionNaming:SimpleColumnScaffold.kt$@MyDevices @Composable private fun SimpleColumnScaffoldPreview()</ID>
    <ID>FunctionNaming:SimpleDropDownMenuItem.kt$@Composable fun SimpleDropDownMenuItem( modifier: Modifier = Modifier, interactionSource: MutableInteractionSource = rememberMutableInteractionSource(), indication: Indication? = LocalIndication.current, @StringRes text: Int, onClick: () -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleDropDownMenuItem.kt$@Composable fun SimpleDropDownMenuItem( modifier: Modifier = Modifier, interactionSource: MutableInteractionSource = rememberMutableInteractionSource(), indication: Indication? = LocalIndication.current, text: @Composable BoxScope.() -&gt; Unit, onClick: () -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleDropDownMenuItem.kt$@Composable fun SimpleDropDownMenuItem( modifier: Modifier = Modifier, text: String, interactionSource: MutableInteractionSource = rememberMutableInteractionSource(), indication: Indication? = LocalIndication.current, onClick: () -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleDropDownMenuItem.kt$@MyDevices @Composable private fun SimpleDropDownMenuItemPreview()</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@Composable fun SimpleLazyListScaffold( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable() (RowScope.() -&gt; Unit), goBack: () -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@Composable fun SimpleLazyListScaffold( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, goBack: () -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@Composable fun SimpleLazyListScaffold( modifier: Modifier = Modifier, topBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@Composable fun SimpleLazyListScaffold( title: String, goBack: () -&gt; Unit, modifier: Modifier = Modifier, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@Composable fun SimpleScaffold( modifier: Modifier = Modifier, darkStatusBarIcons: Boolean = true, customTopBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit, customContent: @Composable (BoxScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>FunctionNaming:SimpleLazyListScaffold.kt$@MyDevices @Composable private fun SimpleLazyListScaffoldPreview()</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable @MyDevices private fun SimpleScaffoldTopBarPreview()</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable fun SimpleBackIcon(iconColor: Color?)</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable fun SimpleNavigationIcon( modifier: Modifier = Modifier, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), goBack: () -&gt; Unit, iconColor: Color? = null )</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable fun SimpleScaffoldTopBar( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable RowScope.() -&gt; Unit, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable fun SimpleScaffoldTopBar( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:SimpleScaffoldTopBar.kt$@Composable fun SimpleScaffoldTopBar( modifier: Modifier = Modifier, title: String, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:Theme.kt$@Composable internal fun Theme( theme: Theme = systemDefaultMaterialYou(), content: @Composable () -&gt; Unit, )</ID>
    <ID>FunctionNaming:UpgradeToProDialog.kt$@Composable fun UpgradeToProAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, onMoreInfoClick: () -&gt; Unit, onUpgradeClick: () -&gt; Unit )</ID>
    <ID>FunctionNaming:UpgradeToProDialog.kt$@MyDevices @Composable private fun UpgradeToProAlertDialogPreview()</ID>
    <ID>FunctionNaming:WhatsNewDialog.kt$@Composable fun WhatsNewAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, releases: ImmutableList&lt;Release&gt; )</ID>
    <ID>FunctionNaming:WhatsNewDialog.kt$@MyDevices @Composable private fun WhatsNewAlertDialogPreview()</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable @MyDevices private fun WritePermissionAlertDialogPreview(@PreviewParameter(WritePermissionDialogModePreviewParameter::class) mode: WritePermissionDialog.WritePermissionDialogMode)</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable fun WritePermissionAlertDialog( alertDialogState: AlertDialogState, writePermissionDialogMode: WritePermissionDialog.WritePermissionDialogMode, modifier: Modifier = Modifier, callback: () -&gt; Unit, onCancelCallback: () -&gt; Unit )</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun CreateDocumentSDK30(crossFadeTransition: DrawableTransitionOptions, onImageClick: () -&gt; Unit)</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun OTG( crossFadeTransition: DrawableTransitionOptions )</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun OpenDocumentTreeSDK30(crossFadeTransition: DrawableTransitionOptions, onImageClick: () -&gt; Unit, path: String)</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun SDCard(crossFadeTransition: DrawableTransitionOptions)</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun WritePermissionImage( modifier: Modifier = Modifier, crossFadeTransition: DrawableTransitionOptions, @DrawableRes drawable: Int )</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun WritePermissionText(@StringRes text: Int)</ID>
    <ID>FunctionNaming:WritePermissionDialog.kt$@Composable private fun WritePermissionText(text: Spanned)</ID>
    <ID>ImplicitDefaultLocale:BaseSimpleActivity.kt$BaseSimpleActivity$String.format("%s(%d).%s", file.nameWithoutExtension, fileIndex, file.extension)</ID>
    <ID>ImplicitDefaultLocale:Int.kt$String.format("#%06X", 0xFFFFFF and this)</ID>
    <ID>ImplicitDefaultLocale:RenamePatternTab.kt$RenamePatternTab$String.format("%0${numbersCnt}d", currentIncrementalNumber)</ID>
    <ID>InstanceOfCheckForException:Activity.kt$e is SecurityException</ID>
    <ID>InstanceOfCheckForException:Activity.kt$exception is IOException</ID>
    <ID>InstanceOfCheckForException:Activity.kt$exception is java.nio.file.FileSystemException</ID>
    <ID>LargeClass:BaseSimpleActivity.kt$BaseSimpleActivity : AppCompatActivity</ID>
    <ID>LargeClass:ContactsHelper.kt$ContactsHelper</ID>
    <ID>LongMethod:AboutActivity.kt$AboutActivity$override fun onCreate(savedInstanceState: Bundle?)</ID>
    <ID>LongMethod:ActionMenu.kt$@Composable fun ActionMenu( items: ImmutableList&lt;ActionItem&gt;, numIcons: Int = 2, // includes overflow menu icon; may be overridden by NEVER_OVERFLOW isMenuVisible: Boolean, iconsColor: Color? = null, onMenuToggle: (isVisible: Boolean) -&gt; Unit )</ID>
    <ID>LongMethod:Activity-themes.kt$fun Activity.getThemeId(color: Int = baseConfig.primaryColor, showTransparentTop: Boolean = false)</ID>
    <ID>LongMethod:Activity.kt$fun Activity.setupDialogStuff( view: View, dialog: AlertDialog.Builder, titleId: Int = 0, titleText: String = "", cancelOnTouchOutside: Boolean = true, callback: ((alertDialog: AlertDialog) -&gt; Unit)? = null )</ID>
    <ID>LongMethod:Activity.kt$fun BaseSimpleActivity.getFileOutputStream(fileDirItem: FileDirItem, allowCreatingNewFile: Boolean = false, callback: (outputStream: OutputStream?) -&gt; Unit)</ID>
    <ID>LongMethod:Activity.kt$fun BaseSimpleActivity.renameFile( oldPath: String, newPath: String, isRenamingMultipleFiles: Boolean, callback: ((success: Boolean, android30RenameFormat: Android30RenameFormat) -&gt; Unit)? = null )</ID>
    <ID>LongMethod:Activity.kt$private fun BaseSimpleActivity.renameCasually( oldPath: String, newPath: String, isRenamingMultipleFiles: Boolean, callback: ((success: Boolean, android30RenameFormat: Android30RenameFormat) -&gt; Unit)? )</ID>
    <ID>LongMethod:AddBlockedNumberDialog.kt$@Composable fun AddOrEditBlockedNumberAlertDialog( alertDialogState: AlertDialogState, blockedNumber: BlockedNumber?, modifier: Modifier = Modifier, deleteBlockedNumber: (String) -&gt; Unit, addBlockedNumber: (String) -&gt; Unit )</ID>
    <ID>LongMethod:BaseSimpleActivity.kt$BaseSimpleActivity$fun copyMoveFilesTo( fileDirItems: ArrayList&lt;FileDirItem&gt;, source: String, destination: String, isCopyOperation: Boolean, copyPhotoVideoOnly: Boolean, copyHidden: Boolean, callback: (destinationPath: String) -&gt; Unit, )</ID>
    <ID>LongMethod:BaseSimpleActivity.kt$BaseSimpleActivity$override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?)</ID>
    <ID>LongMethod:CallConfirmationDialog.kt$@Composable fun CallConfirmationAlertDialog( alertDialogState: AlertDialogState, callee: String, modifier: Modifier = Modifier, callback: () -&gt; Unit )</ID>
    <ID>LongMethod:ChangeDateTimeFormatDialog.kt$@Composable fun ChangeDateTimeFormatAlertDialog( alertDialogState: AlertDialogState, is24HourChecked: Boolean, modifier: Modifier = Modifier, callback: (selectedFormat: String, is24HourChecked: Boolean) -&gt; Unit )</ID>
    <ID>LongMethod:ColorPickerDialog.kt$@Composable fun ColorPickerAlertDialog( alertDialogState: AlertDialogState, @ColorInt color: Int, modifier: Modifier = Modifier, removeDimmedBackground: Boolean = false, addDefaultColorButton: Boolean = false, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>LongMethod:ColorPickerDialog.kt$private fun DialogColorPickerBinding.init( color: Int, backgroundColor: Int, recentColors: List&lt;Int&gt;, hsv: Hsv, currentColorCallback: ((color: Int) -&gt; Unit) )</ID>
    <ID>LongMethod:ContactsHelper.kt$ContactsHelper$fun insertContact(contact: Contact): Boolean</ID>
    <ID>LongMethod:ContactsHelper.kt$ContactsHelper$fun updateContact(contact: Contact, photoUpdateStatus: Int): Boolean</ID>
    <ID>LongMethod:ContactsHelper.kt$ContactsHelper$private fun getDeviceContacts(contacts: SparseArray&lt;Contact&gt;, ignoredContactSources: HashSet&lt;String&gt;?, gettingDuplicates: Boolean)</ID>
    <ID>LongMethod:ContributorsScreen.kt$@Composable internal fun ContributorsScreen( goBack: () -&gt; Unit, showContributorsLabel: Boolean, contributors: ImmutableList&lt;LanguageContributor&gt; )</ID>
    <ID>LongMethod:CopyMoveTask.kt$CopyMoveTask$private fun copyDirectory(source: FileDirItem, destinationPath: String)</ID>
    <ID>LongMethod:CreateNewFolderDialog.kt$@Composable fun CreateNewFolderAlertDialog( alertDialogState: AlertDialogState, path: String, modifier: Modifier = Modifier, callback: (path: String) -&gt; Unit )</ID>
    <ID>LongMethod:CustomIntervalPickerDialog.kt$@Composable fun CustomIntervalPickerAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, selectedSeconds: Int = 0, showSeconds: Boolean = false, callback: (minutes: Int) -&gt; Unit )</ID>
    <ID>LongMethod:CustomizationActivity.kt$CustomizationActivity$private fun setupThemes()</ID>
    <ID>LongMethod:DonateDialog.kt$@Composable fun DonateAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier )</ID>
    <ID>LongMethod:DynamicTheme.kt$fun getTheme(context: Context, materialYouTheme: Theme.SystemDefaultMaterialYou): Theme</ID>
    <ID>LongMethod:EnterPasswordDialog.kt$@Composable fun EnterPasswordAlertDialog( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, callback: (password: String) -&gt; Unit, cancelCallback: () -&gt; Unit )</ID>
    <ID>LongMethod:ExternalStorageProviderHack.kt$ExternalStorageProviderHack$fun transformQueryResult(rootDocId: String, uri: Uri, cursor: Cursor): Cursor</ID>
    <ID>LongMethod:FileConflictDialog.kt$@Composable fun FileConflictAlertDialog( alertDialogState: AlertDialogState, fileDirItem: FileDirItemReadOnly, showApplyToAll: Boolean, modifier: Modifier = Modifier, callback: (resolution: Int, applyForAll: Boolean) -&gt; Unit )</ID>
    <ID>LongMethod:LineColorPickerDialog.kt$@Composable fun LineColorPickerAlertDialog( alertDialogState: AlertDialogState, @ColorInt color: Int, isPrimaryColorPicker: Boolean, modifier: Modifier = Modifier, primaryColors: Int = R.array.md_primary_colors, appIconIDs: ArrayList&lt;Int&gt;? = null, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>LongMethod:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$override fun onCreate(savedInstanceState: Bundle?)</ID>
    <ID>LongMethod:ManageBlockedNumbersScreen.kt$@Composable internal fun ManageBlockedNumbersScreen( goBack: () -&gt; Unit, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, setAsDefault: () -&gt; Unit, isDialer: Boolean, hasGivenPermissionToBlock: Boolean, isBlockUnknownSelected: Boolean, onBlockUnknownSelectedChange: (Boolean) -&gt; Unit, isHiddenSelected: Boolean, onHiddenSelectedChange: (Boolean) -&gt; Unit, blockedNumbers: ImmutableList&lt;BlockedNumber&gt;?, onDelete: (Set&lt;Long&gt;) -&gt; Unit, onEdit: (BlockedNumber) -&gt; Unit, onCopy: (BlockedNumber) -&gt; Unit, )</ID>
    <ID>LongMethod:MyRecyclerView.kt$MyRecyclerView$override fun dispatchTouchEvent(ev: MotionEvent): Boolean</ID>
    <ID>LongMethod:PropertiesDialog.kt$PropertiesDialog$private fun addProperties(path: String)</ID>
    <ID>LongMethod:RadioGroupDialog.kt$@Composable fun RadioGroupAlertDialog( alertDialogState: AlertDialogState, items: ImmutableList&lt;RadioItem&gt;, modifier: Modifier = Modifier, selectedItemId: Int = -1, titleId: Int = 0, showOKButton: Boolean = false, cancelCallback: (() -&gt; Unit)? = null, callback: (newValue: Any) -&gt; Unit )</ID>
    <ID>LongMethod:RenamePatternTab.kt$RenamePatternTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>LongMethod:RenameSimpleTab.kt$RenameSimpleTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>LongMethod:RenameSimpleTab.kt$RenameSimpleTab$private fun renameAllFiles( paths: List&lt;String&gt;, appendString: Boolean, stringToAdd: String, android30Format: Android30RenameFormat, callback: (success: Boolean) -&gt; Unit )</ID>
    <ID>LongMethod:SimpleContactsHelper.kt$SimpleContactsHelper$private fun getContactNames(favoritesOnly: Boolean): List&lt;SimpleContact&gt;</ID>
    <ID>LongMethod:StoragePickerDialog.kt$StoragePickerDialog$private fun initDialog()</ID>
    <ID>LongMethod:String.kt$fun String.getMimeType(): String</ID>
    <ID>LongMethod:Theme.kt$@Composable internal fun Theme( theme: Theme = systemDefaultMaterialYou(), content: @Composable () -&gt; Unit, )</ID>
    <ID>LongMethod:VcfExporter.kt$VcfExporter$fun exportContacts( activity: BaseSimpleActivity, outputStream: OutputStream?, contacts: ArrayList&lt;Contact&gt;, showExportingToast: Boolean, callback: (result: ExportResult) -&gt; Unit )</ID>
    <ID>LongMethod:WritePermissionDialog.kt$@Composable fun WritePermissionAlertDialog( alertDialogState: AlertDialogState, writePermissionDialogMode: WritePermissionDialog.WritePermissionDialogMode, modifier: Modifier = Modifier, callback: () -&gt; Unit, onCancelCallback: () -&gt; Unit )</ID>
    <ID>LongParameterList:AboutScreen.kt$( onRateUsClick: () -&gt; Unit, onInviteClick: () -&gt; Unit, onContributorsClick: () -&gt; Unit, showRateUs: Boolean, showInvite: Boolean, showDonate: Boolean, onDonateClick: () -&gt; Unit, )</ID>
    <ID>LongParameterList:AboutScreen.kt$( showMoreApps: Boolean, onMoreAppsClick: () -&gt; Unit, onWebsiteClick: () -&gt; Unit, showWebsite: Boolean, showPrivacyPolicy: Boolean, onPrivacyPolicyClick: () -&gt; Unit, onLicenseClick: () -&gt; Unit, version: String, onVersionClick: () -&gt; Unit, )</ID>
    <ID>LongParameterList:Activity.kt$( curMinutes: Int, isSnoozePicker: Boolean = false, showSecondsAtCustomDialog: Boolean = false, showDuringDayOption: Boolean = false, cancelCallback: (() -&gt; Unit)? = null, callback: (seconds: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:Activity.kt$( curSeconds: Int, isSnoozePicker: Boolean = false, showSecondsAtCustomDialog: Boolean = false, showDuringDayOption: Boolean = false, cancelCallback: (() -&gt; Unit)? = null, callback: (seconds: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:Activity.kt$( view: View, dialog: AlertDialog.Builder, titleId: Int = 0, titleText: String = "", cancelOnTouchOutside: Boolean = true, callback: ((alertDialog: AlertDialog) -&gt; Unit)? = null )</ID>
    <ID>LongParameterList:AppLockAdapter.kt$AppLockAdapter$( private val context: Context, private val requiredHash: String, private val hashListener: HashListener, private val viewPager: ViewPager2, private val biometricPromptHost: AuthPromptHost, private val showBiometricIdTab: Boolean, private val showBiometricAuthentication: Boolean )</ID>
    <ID>LongParameterList:BaseSimpleActivity.kt$BaseSimpleActivity$( fileDirItems: ArrayList&lt;FileDirItem&gt;, source: String, destination: String, isCopyOperation: Boolean, copyPhotoVideoOnly: Boolean, copyHidden: Boolean, callback: (destinationPath: String) -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeDateTimeFormatDialog.kt$( modifier: Modifier = Modifier, label: String, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, onChange: ((Boolean) -&gt; Unit)? = null, checkboxColors: CheckboxColors = CheckboxDefaults.colors( checkedColor = SimpleTheme.colorScheme.primary, checkmarkColor = SimpleTheme.colorScheme.surface, ) )</ID>
    <ID>LongParameterList:ColorPickerDialog.kt$( alertDialogState: AlertDialogState, @ColorInt color: Int, modifier: Modifier = Modifier, removeDimmedBackground: Boolean = false, addDefaultColorButton: Boolean = false, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:ConfirmationAdvancedDialog.kt$( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, message: String = "", messageId: Int? = R.string.proceed_with_deletion, positive: Int? = R.string.yes, negative: Int? = R.string.no, cancelOnTouchOutside: Boolean = true, callback: (result: Boolean) -&gt; Unit )</ID>
    <ID>LongParameterList:ConfirmationAdvancedDialog.kt$ConfirmationAdvancedDialog$( activity: Activity, message: String = "", messageId: Int = R.string.proceed_with_deletion, positive: Int = R.string.yes, negative: Int = R.string.no, val cancelOnTouchOutside: Boolean = true, val callback: (result: Boolean) -&gt; Unit )</ID>
    <ID>LongParameterList:ConfirmationDialog.kt$( alertDialogState: AlertDialogState, modifier: Modifier = Modifier, message: String = "", messageId: Int? = R.string.proceed_with_deletion, positive: Int? = R.string.yes, negative: Int? = R.string.no, cancelOnTouchOutside: Boolean = true, dialogTitle: String = "", callback: () -&gt; Unit )</ID>
    <ID>LongParameterList:ConfirmationDialog.kt$ConfirmationDialog$( activity: Activity, message: String = "", messageId: Int = R.string.proceed_with_deletion, positive: Int = R.string.yes, negative: Int = R.string.no, val cancelOnTouchOutside: Boolean = true, dialogTitle: String = "", val callback: () -&gt; Unit )</ID>
    <ID>LongParameterList:Context.kt$( uri: Uri, projection: Array&lt;String&gt;, selection: String? = null, selectionArgs: Array&lt;String&gt;? = null, sortOrder: String? = null, showErrors: Boolean = false, callback: (cursor: Cursor) -&gt; Unit )</ID>
    <ID>LongParameterList:DragHandler.kt$( lazyListState: LazyListState, haptics: HapticFeedback, selectedIds: MutableState&lt;Set&lt;Long&gt;&gt;, autoScrollSpeed: MutableState&lt;Float&gt;, autoScrollThreshold: Float, dragUpdate: (Boolean) -&gt; Unit, ids: List&lt;Long&gt;, isScrollingUp: Boolean )</ID>
    <ID>LongParameterList:FileDirItem.kt$FileDirItem$( val path: String, val name: String = "", var isDirectory: Boolean = false, var children: Int = 0, var size: Long = 0L, var modified: Long = 0L, var mediaStoreId: Long = 0L )</ID>
    <ID>LongParameterList:FileDirItem.kt$FileDirItemReadOnly$( path: String, name: String = "", isDirectory: Boolean = false, children: Int = 0, size: Long = 0L, modified: Long = 0L, mediaStoreId: Long = 0L )</ID>
    <ID>LongParameterList:FilePickerDialog.kt$FilePickerDialog$( val activity: BaseSimpleActivity, var currPath: String = Environment.getExternalStorageDirectory().toString(), val pickFile: Boolean = true, var showHidden: Boolean = false, val showFAB: Boolean = false, val canAddShowHiddenButton: Boolean = false, val forceShowRoot: Boolean = false, val showFavoritesButton: Boolean = false, private val enforceStorageRestrictions: Boolean = true, val callback: (pickedPath: String) -&gt; Unit )</ID>
    <ID>LongParameterList:LineColorPickerDialog.kt$( alertDialogState: AlertDialogState, @ColorInt color: Int, isPrimaryColorPicker: Boolean, modifier: Modifier = Modifier, primaryColors: Int = R.array.md_primary_colors, appIconIDs: ArrayList&lt;Int&gt;? = null, onActiveColorChange: (color: Int) -&gt; Unit, onButtonPressed: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:LineColorPickerDialog.kt$LineColorPickerDialog$( val activity: BaseSimpleActivity, val color: Int, val isPrimaryColorPicker: Boolean, val primaryColors: Int = R.array.md_primary_colors, val appIconIDs: ArrayList&lt;Int&gt;? = null, val toolbar: MaterialToolbar? = null, val callback: (wasPositivePressed: Boolean, color: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:ManageBlockedNumbersScreen.kt$( goBack: () -&gt; Unit, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, setAsDefault: () -&gt; Unit, isDialer: Boolean, hasGivenPermissionToBlock: Boolean, isBlockUnknownSelected: Boolean, onBlockUnknownSelectedChange: (Boolean) -&gt; Unit, isHiddenSelected: Boolean, onHiddenSelectedChange: (Boolean) -&gt; Unit, blockedNumbers: ImmutableList&lt;BlockedNumber&gt;?, onDelete: (Set&lt;Long&gt;) -&gt; Unit, onEdit: (BlockedNumber) -&gt; Unit, onCopy: (BlockedNumber) -&gt; Unit, )</ID>
    <ID>LongParameterList:ManageBlockedNumbersScreen.kt$( modifier: Modifier = Modifier, selectedIdsCount: Int, blockedNumbersCount: Int, onBackClick: () -&gt; Unit, onCopy: () -&gt; Unit, onDelete: () -&gt; Unit, onSelectAll: () -&gt; Unit, )</ID>
    <ID>LongParameterList:ManageBlockedNumbersScreen.kt$( scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, goBack: () -&gt; Unit, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, onAdd: () -&gt; Unit, onImportBlockedNumbers: () -&gt; Unit, onExportBlockedNumbers: () -&gt; Unit, )</ID>
    <ID>LongParameterList:PasswordTypesAdapter.kt$PasswordTypesAdapter$( private val context: Context, private val requiredHash: String, private val hashListener: HashListener, private val scrollView: MyScrollView, private val biometricPromptHost: AuthPromptHost, private val showBiometricIdTab: Boolean, private val showBiometricAuthentication: Boolean )</ID>
    <ID>LongParameterList:RadioGroupDialog.kt$( alertDialogState: AlertDialogState, items: ImmutableList&lt;RadioItem&gt;, modifier: Modifier = Modifier, selectedItemId: Int = -1, titleId: Int = 0, showOKButton: Boolean = false, cancelCallback: (() -&gt; Unit)? = null, callback: (newValue: Any) -&gt; Unit )</ID>
    <ID>LongParameterList:RadioGroupDialog.kt$RadioGroupDialog$( val activity: Activity, val items: ArrayList&lt;RadioItem&gt;, val checkedItemId: Int = -1, val titleId: Int = 0, showOKButton: Boolean = false, val cancelCallback: (() -&gt; Unit)? = null, val callback: (newValue: Any) -&gt; Unit )</ID>
    <ID>LongParameterList:RadioGroupDialogComponent.kt$( modifier: Modifier = Modifier, items: List&lt;String&gt;, selected: String?, verticalPadding: Dp = 10.dp, horizontalPadding: Dp = 20.dp, setSelected: (selected: String) -&gt; Unit, )</ID>
    <ID>LongParameterList:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$( val activity: BaseSimpleActivity, val currentUri: String, val audioStream: Int, val pickAudioIntentId: Int, val type: Int, val loopAudio: Boolean, val onAlarmPicked: (alarmSound: AlarmSound?) -&gt; Unit, val onAlarmSoundDeleted: (alarmSound: AlarmSound) -&gt; Unit )</ID>
    <ID>LongParameterList:SettingsCheckBoxComponent.kt$( modifier: Modifier = Modifier, label: String, value: String? = null, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, onChange: ((Boolean) -&gt; Unit)? = null, checkboxColors: CheckboxColors = CheckboxDefaults.colors( checkedColor = SimpleTheme.colorScheme.primary, checkmarkColor = SimpleTheme.colorScheme.surface, ) )</ID>
    <ID>LongParameterList:SettingsLazyGroup.kt$( modifier: Modifier = Modifier, title: @Composable (() -&gt; Unit)? = null, state: LazyListState = rememberLazyListState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, content: LazyListScope.() -&gt; Unit )</ID>
    <ID>LongParameterList:SettingsListItem.kt$( modifier: Modifier = Modifier, text: @Composable () -&gt; Unit, @DrawableRes icon: Int? = null, isImage: Boolean = false, click: (() -&gt; Unit)? = null, tint: Color? = null )</ID>
    <ID>LongParameterList:SettingsListItem.kt$( modifier: Modifier = Modifier, text: String, fontSize: TextUnit = TextUnit.Unspecified, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Clip, @DrawableRes icon: Int? = null, isImage: Boolean = false, click: (() -&gt; Unit)? = null, tint: Color? = null )</ID>
    <ID>LongParameterList:SettingsPreferenceComponent.kt$( modifier: Modifier = Modifier, label: String, value: String? = null, isPreferenceEnabled: Boolean = true, doOnPreferenceLongClick: (() -&gt; Unit)? = null, doOnPreferenceClick: (() -&gt; Unit)? = null, preferenceValueColor: Color = preferenceValueColor(isEnabled = isPreferenceEnabled), preferenceLabelColor: Color = preferenceLabelColor(isEnabled = isPreferenceEnabled) )</ID>
    <ID>LongParameterList:SettingsSwitchComponent.kt$( modifier: Modifier = Modifier, label: String, value: String? = null, initialValue: Boolean = false, isPreferenceEnabled: Boolean = true, showCheckmark: Boolean = false, onChange: ((Boolean) -&gt; Unit)? = null, switchColors: SwitchColors = SwitchDefaults.colors() )</ID>
    <ID>LongParameterList:SimpleColumnScaffold.kt$( modifier: Modifier = Modifier, customTopBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit, goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable() (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>LongParameterList:SimpleColumnScaffold.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable() (RowScope.() -&gt; Unit), goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>LongParameterList:SimpleColumnScaffold.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, goBack: () -&gt; Unit, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>LongParameterList:SimpleColumnScaffold.kt$( title: String, goBack: () -&gt; Unit, modifier: Modifier = Modifier, reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, scrollState: ScrollState = rememberScrollState(), content: @Composable (ColumnScope.(PaddingValues) -&gt; Unit) )</ID>
    <ID>LongParameterList:SimpleLazyListScaffold.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable() (RowScope.() -&gt; Unit), goBack: () -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>LongParameterList:SimpleLazyListScaffold.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, goBack: () -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>LongParameterList:SimpleLazyListScaffold.kt$( modifier: Modifier = Modifier, topBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>LongParameterList:SimpleLazyListScaffold.kt$( title: String, goBack: () -&gt; Unit, modifier: Modifier = Modifier, contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalAlignment: Alignment.Horizontal = Alignment.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, state: LazyListState = rememberLazyListState(), lazyContent: LazyListScope.(PaddingValues) -&gt; Unit )</ID>
    <ID>LongParameterList:SimpleScaffoldTopBar.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, actions: @Composable RowScope.() -&gt; Unit, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>LongParameterList:SimpleScaffoldTopBar.kt$( modifier: Modifier = Modifier, title: @Composable (scrolledColor: Color) -&gt; Unit, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>LongParameterList:SimpleScaffoldTopBar.kt$( modifier: Modifier = Modifier, title: String, scrolledColor: Color, navigationIconInteractionSource: MutableInteractionSource = rememberMutableInteractionSource(), scrollBehavior: TopAppBarScrollBehavior = TopAppBarDefaults.pinnedScrollBehavior(rememberTopAppBarState()), statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color, goBack: () -&gt; Unit, )</ID>
    <ID>LoopWithTooManyJumpStatements:Context-contacts.kt$for</ID>
    <ID>LoopWithTooManyJumpStatements:Context-storage.kt$for</ID>
    <ID>LoopWithTooManyJumpStatements:File.kt$while</ID>
    <ID>MagicNumber:ActionMenu.kt$50</ID>
    <ID>MagicNumber:Activity-themes.kt$10011977</ID>
    <ID>MagicNumber:Activity-themes.kt$10176442</ID>
    <ID>MagicNumber:Activity-themes.kt$10177034</ID>
    <ID>MagicNumber:Activity-themes.kt$1023342</ID>
    <ID>MagicNumber:Activity-themes.kt$10395295</ID>
    <ID>MagicNumber:Activity-themes.kt$10453621</ID>
    <ID>MagicNumber:Activity-themes.kt$10603087</ID>
    <ID>MagicNumber:Activity-themes.kt$10665929</ID>
    <ID>MagicNumber:Activity-themes.kt$10720320</ID>
    <ID>MagicNumber:Activity-themes.kt$1074534</ID>
    <ID>MagicNumber:Activity-themes.kt$1086464</ID>
    <ID>MagicNumber:Activity-themes.kt$1092784</ID>
    <ID>MagicNumber:Activity-themes.kt$10929</ID>
    <ID>MagicNumber:Activity-themes.kt$11171025</ID>
    <ID>MagicNumber:Activity-themes.kt$1118482</ID>
    <ID>MagicNumber:Activity-themes.kt$11243910</ID>
    <ID>MagicNumber:Activity-themes.kt$11457112</ID>
    <ID>MagicNumber:Activity-themes.kt$11492293</ID>
    <ID>MagicNumber:Activity-themes.kt$11549705</ID>
    <ID>MagicNumber:Activity-themes.kt$11652050</ID>
    <ID>MagicNumber:Activity-themes.kt$11677471</ID>
    <ID>MagicNumber:Activity-themes.kt$11684180</ID>
    <ID>MagicNumber:Activity-themes.kt$11922292</ID>
    <ID>MagicNumber:Activity-themes.kt$12232092</ID>
    <ID>MagicNumber:Activity-themes.kt$12245088</ID>
    <ID>MagicNumber:Activity-themes.kt$12409355</ID>
    <ID>MagicNumber:Activity-themes.kt$12434878</ID>
    <ID>MagicNumber:Activity-themes.kt$12627531</ID>
    <ID>MagicNumber:Activity-themes.kt$12703965</ID>
    <ID>MagicNumber:Activity-themes.kt$12808398</ID>
    <ID>MagicNumber:Activity-themes.kt$12846</ID>
    <ID>MagicNumber:Activity-themes.kt$1294214</ID>
    <ID>MagicNumber:Activity-themes.kt$13022805</ID>
    <ID>MagicNumber:Activity-themes.kt$13124</ID>
    <ID>MagicNumber:Activity-themes.kt$13154481</ID>
    <ID>MagicNumber:Activity-themes.kt$13184</ID>
    <ID>MagicNumber:Activity-themes.kt$13407970</ID>
    <ID>MagicNumber:Activity-themes.kt$13558894</ID>
    <ID>MagicNumber:Activity-themes.kt$13615201</ID>
    <ID>MagicNumber:Activity-themes.kt$13784</ID>
    <ID>MagicNumber:Activity-themes.kt$14043396</ID>
    <ID>MagicNumber:Activity-themes.kt$141259</ID>
    <ID>MagicNumber:Activity-themes.kt$14142061</ID>
    <ID>MagicNumber:Activity-themes.kt$14235942</ID>
    <ID>MagicNumber:Activity-themes.kt$14244198</ID>
    <ID>MagicNumber:Activity-themes.kt$14273992</ID>
    <ID>MagicNumber:Activity-themes.kt$14575885</ID>
    <ID>MagicNumber:Activity-themes.kt$14776091</ID>
    <ID>MagicNumber:Activity-themes.kt$1499549</ID>
    <ID>MagicNumber:Activity-themes.kt$15064194</ID>
    <ID>MagicNumber:Activity-themes.kt$15108398</ID>
    <ID>MagicNumber:Activity-themes.kt$15374912</ID>
    <ID>MagicNumber:Activity-themes.kt$15700705</ID>
    <ID>MagicNumber:Activity-themes.kt$15906911</ID>
    <ID>MagicNumber:Activity-themes.kt$1596</ID>
    <ID>MagicNumber:Activity-themes.kt$16121</ID>
    <ID>MagicNumber:Activity-themes.kt$1642852</ID>
    <ID>MagicNumber:Activity-themes.kt$16537100</ID>
    <ID>MagicNumber:Activity-themes.kt$16540699</ID>
    <ID>MagicNumber:Activity-themes.kt$16611119</ID>
    <ID>MagicNumber:Activity-themes.kt$16615491</ID>
    <ID>MagicNumber:Activity-themes.kt$16689253</ID>
    <ID>MagicNumber:Activity-themes.kt$16728876</ID>
    <ID>MagicNumber:Activity-themes.kt$16732991</ID>
    <ID>MagicNumber:Activity-themes.kt$16738393</ID>
    <ID>MagicNumber:Activity-themes.kt$16738680</ID>
    <ID>MagicNumber:Activity-themes.kt$16742021</ID>
    <ID>MagicNumber:Activity-themes.kt$16743537</ID>
    <ID>MagicNumber:Activity-themes.kt$16746133</ID>
    <ID>MagicNumber:Activity-themes.kt$16750244</ID>
    <ID>MagicNumber:Activity-themes.kt$16752540</ID>
    <ID>MagicNumber:Activity-themes.kt$16757440</ID>
    <ID>MagicNumber:Activity-themes.kt$16777216</ID>
    <ID>MagicNumber:Activity-themes.kt$1683200</ID>
    <ID>MagicNumber:Activity-themes.kt$1684967</ID>
    <ID>MagicNumber:Activity-themes.kt$1739917</ID>
    <ID>MagicNumber:Activity-themes.kt$1754827</ID>
    <ID>MagicNumber:Activity-themes.kt$18611</ID>
    <ID>MagicNumber:Activity-themes.kt$19712</ID>
    <ID>MagicNumber:Activity-themes.kt$1982745</ID>
    <ID>MagicNumber:Activity-themes.kt$2039584</ID>
    <ID>MagicNumber:Activity-themes.kt$21615</ID>
    <ID>MagicNumber:Activity-themes.kt$22746</ID>
    <ID>MagicNumber:Activity-themes.kt$2298424</ID>
    <ID>MagicNumber:Activity-themes.kt$2300043</ID>
    <ID>MagicNumber:Activity-themes.kt$24576</ID>
    <ID>MagicNumber:Activity-themes.kt$2604267</ID>
    <ID>MagicNumber:Activity-themes.kt$2614432</ID>
    <ID>MagicNumber:Activity-themes.kt$2634552</ID>
    <ID>MagicNumber:Activity-themes.kt$26624</ID>
    <ID>MagicNumber:Activity-themes.kt$2672</ID>
    <ID>MagicNumber:Activity-themes.kt$2691126</ID>
    <ID>MagicNumber:Activity-themes.kt$278483</ID>
    <ID>MagicNumber:Activity-themes.kt$2825897</ID>
    <ID>MagicNumber:Activity-themes.kt$28928</ID>
    <ID>MagicNumber:Activity-themes.kt$291840</ID>
    <ID>MagicNumber:Activity-themes.kt$2937041</ID>
    <ID>MagicNumber:Activity-themes.kt$30107</ID>
    <ID>MagicNumber:Activity-themes.kt$3029783</ID>
    <ID>MagicNumber:Activity-themes.kt$3155748</ID>
    <ID>MagicNumber:Activity-themes.kt$3238952</ID>
    <ID>MagicNumber:Activity-themes.kt$3285959</ID>
    <ID>MagicNumber:Activity-themes.kt$36797</ID>
    <ID>MagicNumber:Activity-themes.kt$37120</ID>
    <ID>MagicNumber:Activity-themes.kt$3722</ID>
    <ID>MagicNumber:Activity-themes.kt$3790808</ID>
    <ID>MagicNumber:Activity-themes.kt$3808859</ID>
    <ID>MagicNumber:Activity-themes.kt$3814679</ID>
    <ID>MagicNumber:Activity-themes.kt$4056997</ID>
    <ID>MagicNumber:Activity-themes.kt$4142541</ID>
    <ID>MagicNumber:Activity-themes.kt$415707</ID>
    <ID>MagicNumber:Activity-themes.kt$4246004</ID>
    <ID>MagicNumber:Activity-themes.kt$43230</ID>
    <ID>MagicNumber:Activity-themes.kt$4342339</ID>
    <ID>MagicNumber:Activity-themes.kt$4412764</ID>
    <ID>MagicNumber:Activity-themes.kt$4464901</ID>
    <ID>MagicNumber:Activity-themes.kt$4520</ID>
    <ID>MagicNumber:Activity-themes.kt$4528984</ID>
    <ID>MagicNumber:Activity-themes.kt$4560696</ID>
    <ID>MagicNumber:Activity-themes.kt$476208</ID>
    <ID>MagicNumber:Activity-themes.kt$4776932</ID>
    <ID>MagicNumber:Activity-themes.kt$4941</ID>
    <ID>MagicNumber:Activity-themes.kt$4987396</ID>
    <ID>MagicNumber:Activity-themes.kt$5005861</ID>
    <ID>MagicNumber:Activity-themes.kt$5051406</ID>
    <ID>MagicNumber:Activity-themes.kt$5054501</ID>
    <ID>MagicNumber:Activity-themes.kt$5194811</ID>
    <ID>MagicNumber:Activity-themes.kt$5317</ID>
    <ID>MagicNumber:Activity-themes.kt$5319295</ID>
    <ID>MagicNumber:Activity-themes.kt$5434281</ID>
    <ID>MagicNumber:Activity-themes.kt$5552196</ID>
    <ID>MagicNumber:Activity-themes.kt$5983189</ID>
    <ID>MagicNumber:Activity-themes.kt$6190977</ID>
    <ID>MagicNumber:Activity-themes.kt$6313766</ID>
    <ID>MagicNumber:Activity-themes.kt$6366844</ID>
    <ID>MagicNumber:Activity-themes.kt$6381922</ID>
    <ID>MagicNumber:Activity-themes.kt$6382300</ID>
    <ID>MagicNumber:Activity-themes.kt$6501275</ID>
    <ID>MagicNumber:Activity-themes.kt$6543440</ID>
    <ID>MagicNumber:Activity-themes.kt$688361</ID>
    <ID>MagicNumber:Activity-themes.kt$689152</ID>
    <ID>MagicNumber:Activity-themes.kt$6982195</ID>
    <ID>MagicNumber:Activity-themes.kt$7288071</ID>
    <ID>MagicNumber:Activity-themes.kt$7297874</ID>
    <ID>MagicNumber:Activity-themes.kt$7461718</ID>
    <ID>MagicNumber:Activity-themes.kt$749647</ID>
    <ID>MagicNumber:Activity-themes.kt$7508381</ID>
    <ID>MagicNumber:Activity-themes.kt$7617718</ID>
    <ID>MagicNumber:Activity-themes.kt$765666</ID>
    <ID>MagicNumber:Activity-themes.kt$769226</ID>
    <ID>MagicNumber:Activity-themes.kt$7810712</ID>
    <ID>MagicNumber:Activity-themes.kt$7860657</ID>
    <ID>MagicNumber:Activity-themes.kt$8014</ID>
    <ID>MagicNumber:Activity-themes.kt$8062</ID>
    <ID>MagicNumber:Activity-themes.kt$8227049</ID>
    <ID>MagicNumber:Activity-themes.kt$8268550</ID>
    <ID>MagicNumber:Activity-themes.kt$8331542</ID>
    <ID>MagicNumber:Activity-themes.kt$8336444</ID>
    <ID>MagicNumber:Activity-themes.kt$8497214</ID>
    <ID>MagicNumber:Activity-themes.kt$8604862</ID>
    <ID>MagicNumber:Activity-themes.kt$8708190</ID>
    <ID>MagicNumber:Activity-themes.kt$8812853</ID>
    <ID>MagicNumber:Activity-themes.kt$8825528</ID>
    <ID>MagicNumber:Activity-themes.kt$8875876</ID>
    <ID>MagicNumber:Activity-themes.kt$9079435</ID>
    <ID>MagicNumber:Activity-themes.kt$9254834</ID>
    <ID>MagicNumber:Activity-themes.kt$9614271</ID>
    <ID>MagicNumber:Activity-themes.kt$9823334</ID>
    <ID>MagicNumber:Activity-themes.kt$985917</ID>
    <ID>MagicNumber:Activity-themes.kt$9920712</ID>
    <ID>MagicNumber:Activity.kt$10</ID>
    <ID>MagicNumber:Activity.kt$1000</ID>
    <ID>MagicNumber:Activity.kt$2</ID>
    <ID>MagicNumber:Activity.kt$3</ID>
    <ID>MagicNumber:Activity.kt$30</ID>
    <ID>MagicNumber:Activity.kt$3600</ID>
    <ID>MagicNumber:Activity.kt$40</ID>
    <ID>MagicNumber:Activity.kt$5</ID>
    <ID>MagicNumber:Activity.kt$60</ID>
    <ID>MagicNumber:ActivityExtensions.kt$10</ID>
    <ID>MagicNumber:ActivityExtensions.kt$100</ID>
    <ID>MagicNumber:ActivityExtensions.kt$30</ID>
    <ID>MagicNumber:ActivityExtensions.kt$40</ID>
    <ID>MagicNumber:ActivityExtensions.kt$50</ID>
    <ID>MagicNumber:AppLockAdapter.kt$AppLockAdapter$3</ID>
    <ID>MagicNumber:BaseConfig.kt$BaseConfig$10</ID>
    <ID>MagicNumber:BaseSecurityTab.kt$BaseSecurityTab$1000L</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$10</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$100</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$18</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$300</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$301</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$302</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$303</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$304</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$50</ID>
    <ID>MagicNumber:BaseSimpleActivity.kt$BaseSimpleActivity$9</ID>
    <ID>MagicNumber:Bitmap.kt$80</ID>
    <ID>MagicNumber:BottomActionMenuItemPopup.kt$BottomActionMenuItemPopup$0.8</ID>
    <ID>MagicNumber:BottomActionMenuItemPopup.kt$BottomActionMenuItemPopup$3f</ID>
    <ID>MagicNumber:BottomSheetChooserDialog.kt$4</ID>
    <ID>MagicNumber:Breadcrumbs.kt$Breadcrumbs$0.6f</ID>
    <ID>MagicNumber:CallConfirmationDialog.kt$1000</ID>
    <ID>MagicNumber:CallConfirmationDialog.kt$200</ID>
    <ID>MagicNumber:CallConfirmationDialog.kt$50</ID>
    <ID>MagicNumber:CallConfirmationDialog.kt$500</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$0.001f</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$0.95f</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$3</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$360f</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$6</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$ColorPickerDialog$3</ID>
    <ID>MagicNumber:ColorPickerDialog.kt$ColorPickerDialog$6</ID>
    <ID>MagicNumber:Colors.kt$0x00FFFFFF</ID>
    <ID>MagicNumber:Colors.kt$0x08000000</ID>
    <ID>MagicNumber:Colors.kt$0x1f000000</ID>
    <ID>MagicNumber:Colors.kt$0x33ffffff</ID>
    <ID>MagicNumber:Colors.kt$0x40FFFFFF</ID>
    <ID>MagicNumber:Colors.kt$0x44888888</ID>
    <ID>MagicNumber:Colors.kt$0x55808080</ID>
    <ID>MagicNumber:Colors.kt$0x66000000</ID>
    <ID>MagicNumber:Colors.kt$0x99FFFFFF</ID>
    <ID>MagicNumber:Colors.kt$0xAA000000</ID>
    <ID>MagicNumber:Colors.kt$0xCC000000</ID>
    <ID>MagicNumber:Colors.kt$0xFF000000</ID>
    <ID>MagicNumber:Colors.kt$0xFF00241E</ID>
    <ID>MagicNumber:Colors.kt$0xFF00393B</ID>
    <ID>MagicNumber:Colors.kt$0xFF004038</ID>
    <ID>MagicNumber:Colors.kt$0xFF004072</ID>
    <ID>MagicNumber:Colors.kt$0xFF004D40</ID>
    <ID>MagicNumber:Colors.kt$0xFF005047</ID>
    <ID>MagicNumber:Colors.kt$0xFF005E66</ID>
    <ID>MagicNumber:Colors.kt$0xFF006056</ID>
    <ID>MagicNumber:Colors.kt$0xFF006064</ID>
    <ID>MagicNumber:Colors.kt$0xFF00695C</ID>
    <ID>MagicNumber:Colors.kt$0xFF006D63</ID>
    <ID>MagicNumber:Colors.kt$0xFF00727E</ID>
    <ID>MagicNumber:Colors.kt$0xFF00796B</ID>
    <ID>MagicNumber:Colors.kt$0xFF00838F</ID>
    <ID>MagicNumber:Colors.kt$0xFF008898</ID>
    <ID>MagicNumber:Colors.kt$0xFF00897B</ID>
    <ID>MagicNumber:Colors.kt$0xFF009688</ID>
    <ID>MagicNumber:Colors.kt$0xFF0097A7</ID>
    <ID>MagicNumber:Colors.kt$0xFF0098AB</ID>
    <ID>MagicNumber:Colors.kt$0xFF00ACC1</ID>
    <ID>MagicNumber:Colors.kt$0xFF00BCD4</ID>
    <ID>MagicNumber:Colors.kt$0xFF01579B</ID>
    <ID>MagicNumber:Colors.kt$0xFF015E95</ID>
    <ID>MagicNumber:Colors.kt$0xFF016EA9</ID>
    <ID>MagicNumber:Colors.kt$0xFF0277BD</ID>
    <ID>MagicNumber:Colors.kt$0xFF0280BD</ID>
    <ID>MagicNumber:Colors.kt$0xFF0288D1</ID>
    <ID>MagicNumber:Colors.kt$0xFF028DCC</ID>
    <ID>MagicNumber:Colors.kt$0xFF02A7F9</ID>
    <ID>MagicNumber:Colors.kt$0xFF039BE5</ID>
    <ID>MagicNumber:Colors.kt$0xFF03A9F4</ID>
    <ID>MagicNumber:Colors.kt$0xFF09367B</ID>
    <ID>MagicNumber:Colors.kt$0xFF0B82E0</ID>
    <ID>MagicNumber:Colors.kt$0xFF0D47A1</ID>
    <ID>MagicNumber:Colors.kt$0xFF106D1F</ID>
    <ID>MagicNumber:Colors.kt$0xFF113E15</ID>
    <ID>MagicNumber:Colors.kt$0xFF11529B</ID>
    <ID>MagicNumber:Colors.kt$0xFF12195C</ID>
    <ID>MagicNumber:Colors.kt$0xFF1462AE</ID>
    <ID>MagicNumber:Colors.kt$0xFF151C1F</ID>
    <ID>MagicNumber:Colors.kt$0xFF1565C0</ID>
    <ID>MagicNumber:Colors.kt$0xFF1673C4</ID>
    <ID>MagicNumber:Colors.kt$0xFF1976D2</ID>
    <ID>MagicNumber:Colors.kt$0xFF1A237E</ID>
    <ID>MagicNumber:Colors.kt$0xFF1A92F3</ID>
    <ID>MagicNumber:Colors.kt$0xFF1E857C</ID>
    <ID>MagicNumber:Colors.kt$0xFF1E88E5</ID>
    <ID>MagicNumber:Colors.kt$0xFF1F2973</ID>
    <ID>MagicNumber:Colors.kt$0xFF1FA7B8</ID>
    <ID>MagicNumber:Colors.kt$0xFF2196F3</ID>
    <ID>MagicNumber:Colors.kt$0xFF234915</ID>
    <ID>MagicNumber:Colors.kt$0xFF235F26</ID>
    <ID>MagicNumber:Colors.kt$0xFF241714</ID>
    <ID>MagicNumber:Colors.kt$0xFF251470</ID>
    <ID>MagicNumber:Colors.kt$0xFF263237</ID>
    <ID>MagicNumber:Colors.kt$0xFF263238</ID>
    <ID>MagicNumber:Colors.kt$0xFF263380</ID>
    <ID>MagicNumber:Colors.kt$0xFF26A69A</ID>
    <ID>MagicNumber:Colors.kt$0xFF26C6DA</ID>
    <ID>MagicNumber:Colors.kt$0xFF27B6F6</ID>
    <ID>MagicNumber:Colors.kt$0xFF283593</ID>
    <ID>MagicNumber:Colors.kt$0xFF29B6FC</ID>
    <ID>MagicNumber:Colors.kt$0xFF2AC7DB</ID>
    <ID>MagicNumber:Colors.kt$0xFF2C7130</ID>
    <ID>MagicNumber:Colors.kt$0xFF2D231D</ID>
    <ID>MagicNumber:Colors.kt$0xFF2D2D2D</ID>
    <ID>MagicNumber:Colors.kt$0xFF2E3C8C</ID>
    <ID>MagicNumber:Colors.kt$0xFF303F9F</ID>
    <ID>MagicNumber:Colors.kt$0xFF311B92</ID>
    <ID>MagicNumber:Colors.kt$0xFF333333</ID>
    <ID>MagicNumber:Colors.kt$0xFF33691E</ID>
    <ID>MagicNumber:Colors.kt$0xFF34231F</ID>
    <ID>MagicNumber:Colors.kt$0xFF344497</ID>
    <ID>MagicNumber:Colors.kt$0xFF34454C</ID>
    <ID>MagicNumber:Colors.kt$0xFF370E68</ID>
    <ID>MagicNumber:Colors.kt$0xFF371F7F</ID>
    <ID>MagicNumber:Colors.kt$0xFF37474F</ID>
    <ID>MagicNumber:Colors.kt$0xFF37833A</ID>
    <ID>MagicNumber:Colors.kt$0xFF3949AB</ID>
    <ID>MagicNumber:Colors.kt$0xFF3C8F32</ID>
    <ID>MagicNumber:Colors.kt$0xFF3DA2F4</ID>
    <ID>MagicNumber:Colors.kt$0xFF3E2723</ID>
    <ID>MagicNumber:Colors.kt$0xFF3F51B5</ID>
    <ID>MagicNumber:Colors.kt$0xFF3F9B92</ID>
    <ID>MagicNumber:Colors.kt$0xFF409343</ID>
    <ID>MagicNumber:Colors.kt$0xFF412488</ID>
    <ID>MagicNumber:Colors.kt$0xFF424242</ID>
    <ID>MagicNumber:Colors.kt$0xFF426C24</ID>
    <ID>MagicNumber:Colors.kt$0xFF42A5F5</ID>
    <ID>MagicNumber:Colors.kt$0xFF432E28</ID>
    <ID>MagicNumber:Colors.kt$0xFF4354B0</ID>
    <ID>MagicNumber:Colors.kt$0xFF445962</ID>
    <ID>MagicNumber:Colors.kt$0xFF4527A0</ID>
    <ID>MagicNumber:Colors.kt$0xFF455A64</ID>
    <ID>MagicNumber:Colors.kt$0xFF4A148C</ID>
    <ID>MagicNumber:Colors.kt$0xFF4C4C4C</ID>
    <ID>MagicNumber:Colors.kt$0xFF4CAC51</ID>
    <ID>MagicNumber:Colors.kt$0xFF4CAF50</ID>
    <ID>MagicNumber:Colors.kt$0xFF4DB6AC</ID>
    <ID>MagicNumber:Colors.kt$0xFF4DD0E1</ID>
    <ID>MagicNumber:Colors.kt$0xFF4E2B92</ID>
    <ID>MagicNumber:Colors.kt$0xFF4E342E</ID>
    <ID>MagicNumber:Colors.kt$0xFF4F6873</ID>
    <ID>MagicNumber:Colors.kt$0xFF4fC3F7</ID>
    <ID>MagicNumber:Colors.kt$0xFF50A43B</ID>
    <ID>MagicNumber:Colors.kt$0xFF512DA8</ID>
    <ID>MagicNumber:Colors.kt$0xFF521477</ID>
    <ID>MagicNumber:Colors.kt$0xFF533A31</ID>
    <ID>MagicNumber:Colors.kt$0xFF546E7A</ID>
    <ID>MagicNumber:Colors.kt$0xFF54812D</ID>
    <ID>MagicNumber:Colors.kt$0xFF558B2F</ID>
    <ID>MagicNumber:Colors.kt$0xFF563098</ID>
    <ID>MagicNumber:Colors.kt$0xFF59C7F9</ID>
    <ID>MagicNumber:Colors.kt$0xFF5B6CC0</ID>
    <ID>MagicNumber:Colors.kt$0xFF5C6BC0</ID>
    <ID>MagicNumber:Colors.kt$0xFF5D4037</ID>
    <ID>MagicNumber:Colors.kt$0xFF5DD5E5</ID>
    <ID>MagicNumber:Colors.kt$0xFF5E35B1</ID>
    <ID>MagicNumber:Colors.kt$0xFF5F4339</ID>
    <ID>MagicNumber:Colors.kt$0xFF5F5710</ID>
    <ID>MagicNumber:Colors.kt$0xFF606060</ID>
    <ID>MagicNumber:Colors.kt$0xFF607D8B</ID>
    <ID>MagicNumber:Colors.kt$0xFF611880</ID>
    <ID>MagicNumber:Colors.kt$0xFF616161</ID>
    <ID>MagicNumber:Colors.kt$0xFF630A3A</ID>
    <ID>MagicNumber:Colors.kt$0xFF63BFB7</ID>
    <ID>MagicNumber:Colors.kt$0xFF647C88</ID>
    <ID>MagicNumber:Colors.kt$0xFF64B5F6</ID>
    <ID>MagicNumber:Colors.kt$0xFF64B846</ID>
    <ID>MagicNumber:Colors.kt$0xFF65BB69</ID>
    <ID>MagicNumber:Colors.kt$0xFF673AB7</ID>
    <ID>MagicNumber:Colors.kt$0xFF679537</ID>
    <ID>MagicNumber:Colors.kt$0xFF689F38</ID>
    <ID>MagicNumber:Colors.kt$0xFF693FB0</ID>
    <ID>MagicNumber:Colors.kt$0xFF69B8F7</ID>
    <ID>MagicNumber:Colors.kt$0xFF6A1B9A</ID>
    <ID>MagicNumber:Colors.kt$0xFF6D4C41</ID>
    <ID>MagicNumber:Colors.kt$0xFF711C88</ID>
    <ID>MagicNumber:Colors.kt$0xFF72C84E</ID>
    <ID>MagicNumber:Colors.kt$0xFF755B52</ID>
    <ID>MagicNumber:Colors.kt$0xFF757575</ID>
    <ID>MagicNumber:Colors.kt$0xFF76AC38</ID>
    <ID>MagicNumber:Colors.kt$0xFF78909C</ID>
    <ID>MagicNumber:Colors.kt$0xFF78919D</ID>
    <ID>MagicNumber:Colors.kt$0xFF795548</ID>
    <ID>MagicNumber:Colors.kt$0xFF7986CB</ID>
    <ID>MagicNumber:Colors.kt$0xFF7B1FA2</ID>
    <ID>MagicNumber:Colors.kt$0xFF7CB342</ID>
    <ID>MagicNumber:Colors.kt$0xFF7D7D1C</ID>
    <ID>MagicNumber:Colors.kt$0xFF7E56C2</ID>
    <ID>MagicNumber:Colors.kt$0xFF7E57C2</ID>
    <ID>MagicNumber:Colors.kt$0xFF7F1F8F</ID>
    <ID>MagicNumber:Colors.kt$0xFF80CBC4</ID>
    <ID>MagicNumber:Colors.kt$0xFF80DEEA</ID>
    <ID>MagicNumber:Colors.kt$0xFF81D4fA</ID>
    <ID>MagicNumber:Colors.kt$0xFF827717</ID>
    <ID>MagicNumber:Colors.kt$0xFF828ECF</ID>
    <ID>MagicNumber:Colors.kt$0xFF869323</ID>
    <ID>MagicNumber:Colors.kt$0xFF880E4F</ID>
    <ID>MagicNumber:Colors.kt$0xFF880F44</ID>
    <ID>MagicNumber:Colors.kt$0xFF88D168</ID>
    <ID>MagicNumber:Colors.kt$0xFF89C246</ID>
    <ID>MagicNumber:Colors.kt$0xFF89CA8D</ID>
    <ID>MagicNumber:Colors.kt$0xFF8A8A8A</ID>
    <ID>MagicNumber:Colors.kt$0xFF8BC34A</ID>
    <ID>MagicNumber:Colors.kt$0xFF8BD8FB</ID>
    <ID>MagicNumber:Colors.kt$0xFF8D6E63</ID>
    <ID>MagicNumber:Colors.kt$0xFF8E24AA</ID>
    <ID>MagicNumber:Colors.kt$0xFF8F7369</ID>
    <ID>MagicNumber:Colors.kt$0xFF90A4AE</ID>
    <ID>MagicNumber:Colors.kt$0xFF90CAF9</ID>
    <ID>MagicNumber:Colors.kt$0xFF90E3ED</ID>
    <ID>MagicNumber:Colors.kt$0xFF913AA0</ID>
    <ID>MagicNumber:Colors.kt$0xFF941616</ID>
    <ID>MagicNumber:Colors.kt$0xFF94CCF9</ID>
    <ID>MagicNumber:Colors.kt$0xFF9575CD</ID>
    <ID>MagicNumber:Colors.kt$0xFF95D3CE</ID>
    <ID>MagicNumber:Colors.kt$0xFF992B09</ID>
    <ID>MagicNumber:Colors.kt$0xFF99A7B4</ID>
    <ID>MagicNumber:Colors.kt$0xFF9BCB62</ID>
    <ID>MagicNumber:Colors.kt$0xFF9C27B0</ID>
    <ID>MagicNumber:Colors.kt$0xFF9C7FD0</ID>
    <ID>MagicNumber:Colors.kt$0xFF9CCC65</ID>
    <ID>MagicNumber:Colors.kt$0xFF9E134A</ID>
    <ID>MagicNumber:Colors.kt$0xFF9E9D24</ID>
    <ID>MagicNumber:Colors.kt$0xFF9E9E9E</ID>
    <ID>MagicNumber:Colors.kt$0xFF9ED984</ID>
    <ID>MagicNumber:Colors.kt$0xFF9FA8DA</ID>
    <ID>MagicNumber:Colors.kt$0xFFA1887F</ID>
    <ID>MagicNumber:Colors.kt$0xFFA2AA2A</ID>
    <ID>MagicNumber:Colors.kt$0xFFA42020</ID>
    <ID>MagicNumber:Colors.kt$0xFFA4B42B</ID>
    <ID>MagicNumber:Colors.kt$0xFFA8AFDE</ID>
    <ID>MagicNumber:Colors.kt$0xFFA9A9A9</ID>
    <ID>MagicNumber:Colors.kt$0xFFAB47BC</ID>
    <ID>MagicNumber:Colors.kt$0xFFAB958D</ID>
    <ID>MagicNumber:Colors.kt$0xFFAC4ABD</ID>
    <ID>MagicNumber:Colors.kt$0xFFACDAAE</ID>
    <ID>MagicNumber:Colors.kt$0xFFAD1457</ID>
    <ID>MagicNumber:Colors.kt$0xFFAED581</ID>
    <ID>MagicNumber:Colors.kt$0xFFB0BBC5</ID>
    <ID>MagicNumber:Colors.kt$0xFFB2B2B2</ID>
    <ID>MagicNumber:Colors.kt$0xFFB2D787</ID>
    <ID>MagicNumber:Colors.kt$0xFFB2DFDB</ID>
    <ID>MagicNumber:Colors.kt$0xFFB2EBF2</ID>
    <ID>MagicNumber:Colors.kt$0xFFB32525</ID>
    <ID>MagicNumber:Colors.kt$0xFFB33710</ID>
    <ID>MagicNumber:Colors.kt$0xFFB39DDB</ID>
    <ID>MagicNumber:Colors.kt$0xFFB3E5FC</ID>
    <ID>MagicNumber:Colors.kt$0xFFB4154F</ID>
    <ID>MagicNumber:Colors.kt$0xFFB71C1C</ID>
    <ID>MagicNumber:Colors.kt$0xFFB8C5CB</ID>
    <ID>MagicNumber:Colors.kt$0xFFBA68C8</ID>
    <ID>MagicNumber:Colors.kt$0xFFBAA6DE</ID>
    <ID>MagicNumber:Colors.kt$0xFFBAC923</ID>
    <ID>MagicNumber:Colors.kt$0xFFBAE4A8</ID>
    <ID>MagicNumber:Colors.kt$0xFFBBDEFB</ID>
    <ID>MagicNumber:Colors.kt$0xFFBCAAA4</ID>
    <ID>MagicNumber:Colors.kt$0xFFBD4200</ID>
    <ID>MagicNumber:Colors.kt$0xFFBDBDBD</ID>
    <ID>MagicNumber:Colors.kt$0xFFBF360C</ID>
    <ID>MagicNumber:Colors.kt$0xFFC0CA33</ID>
    <ID>MagicNumber:Colors.kt$0xFFC13E14</ID>
    <ID>MagicNumber:Colors.kt$0xFFC175CD</ID>
    <ID>MagicNumber:Colors.kt$0xFFC2185B</ID>
    <ID>MagicNumber:Colors.kt$0xFFC5CAE9</ID>
    <ID>MagicNumber:Colors.kt$0xFFC5E1A5</ID>
    <ID>MagicNumber:Colors.kt$0xFFC62828</ID>
    <ID>MagicNumber:Colors.kt$0xFFC65A00</ID>
    <ID>MagicNumber:Colors.kt$0xFFC6B7B1</ID>
    <ID>MagicNumber:Colors.kt$0xFFC9E3A9</ID>
    <ID>MagicNumber:Colors.kt$0xFFCB1352</ID>
    <ID>MagicNumber:Colors.kt$0xFFCBDB34</ID>
    <ID>MagicNumber:Colors.kt$0xFFCCCCCC</ID>
    <ID>MagicNumber:Colors.kt$0xFFCD6800</ID>
    <ID>MagicNumber:Colors.kt$0xFFCDDC39</ID>
    <ID>MagicNumber:Colors.kt$0xFFCE93D8</ID>
    <ID>MagicNumber:Colors.kt$0xFFCFD8DC</ID>
    <ID>MagicNumber:Colors.kt$0xFFD1C4E9</ID>
    <ID>MagicNumber:Colors.kt$0xFFD32F2F</ID>
    <ID>MagicNumber:Colors.kt$0xFFD37600</ID>
    <ID>MagicNumber:Colors.kt$0xFFD3A0DC</ID>
    <ID>MagicNumber:Colors.kt$0xFFD3E152</ID>
    <ID>MagicNumber:Colors.kt$0xFFD4E157</ID>
    <ID>MagicNumber:Colors.kt$0xFFD61F1A</ID>
    <ID>MagicNumber:Colors.kt$0xFFD6EFCA</ID>
    <ID>MagicNumber:Colors.kt$0xFFD75D00</ID>
    <ID>MagicNumber:Colors.kt$0xFFD77800</ID>
    <ID>MagicNumber:Colors.kt$0xFFD78000</ID>
    <ID>MagicNumber:Colors.kt$0xFFD78700</ID>
    <ID>MagicNumber:Colors.kt$0xFFD79700</ID>
    <ID>MagicNumber:Colors.kt$0xFFD7CCC8</ID>
    <ID>MagicNumber:Colors.kt$0xFFD81B60</ID>
    <ID>MagicNumber:Colors.kt$0xFFD84315</ID>
    <ID>MagicNumber:Colors.kt$0xFFDA6B09</ID>
    <ID>MagicNumber:Colors.kt$0xFFDADADA</ID>
    <ID>MagicNumber:Colors.kt$0xFFDCE775</ID>
    <ID>MagicNumber:Colors.kt$0xFFDCEDC8</ID>
    <ID>MagicNumber:Colors.kt$0xFFDEA700</ID>
    <ID>MagicNumber:Colors.kt$0xFFDEE879</ID>
    <ID>MagicNumber:Colors.kt$0xFFDF3D0A</ID>
    <ID>MagicNumber:Colors.kt$0xFFDF5050</ID>
    <ID>MagicNumber:Colors.kt$0xFFDFDFDF</ID>
    <ID>MagicNumber:Colors.kt$0xFFE0E0E0</ID>
    <ID>MagicNumber:Colors.kt$0xFFE1BEE7</ID>
    <ID>MagicNumber:Colors.kt$0xFFE53935</ID>
    <ID>MagicNumber:Colors.kt$0xFFE57373</ID>
    <ID>MagicNumber:Colors.kt$0xFFE64A19</ID>
    <ID>MagicNumber:Colors.kt$0xFFE65100</ID>
    <ID>MagicNumber:Colors.kt$0xFFE6EE9C</ID>
    <ID>MagicNumber:Colors.kt$0xFFE8EEA0</ID>
    <ID>MagicNumber:Colors.kt$0xFFE91A60</ID>
    <ID>MagicNumber:Colors.kt$0xFFE91E63</ID>
    <ID>MagicNumber:Colors.kt$0xFFEA7777</ID>
    <ID>MagicNumber:Colors.kt$0xFFEC2E2A</ID>
    <ID>MagicNumber:Colors.kt$0xFFEC407A</ID>
    <ID>MagicNumber:Colors.kt$0xFFECECEC</ID>
    <ID>MagicNumber:Colors.kt$0xFFED3C78</ID>
    <ID>MagicNumber:Colors.kt$0xFFEEEEEE</ID>
    <ID>MagicNumber:Colors.kt$0xFFEF5350</ID>
    <ID>MagicNumber:Colors.kt$0xFFEF6C00</ID>
    <ID>MagicNumber:Colors.kt$0xFFEF9606</ID>
    <ID>MagicNumber:Colors.kt$0xFFEF9A9A</ID>
    <ID>MagicNumber:Colors.kt$0xFFF06292</ID>
    <ID>MagicNumber:Colors.kt$0xFFF0F4C3</ID>
    <ID>MagicNumber:Colors.kt$0xFFF16998</ID>
    <ID>MagicNumber:Colors.kt$0xFFF1F1F1</ID>
    <ID>MagicNumber:Colors.kt$0xFFF21F0F</ID>
    <ID>MagicNumber:Colors.kt$0xFFF44336</ID>
    <ID>MagicNumber:Colors.kt$0xFFF4511E</ID>
    <ID>MagicNumber:Colors.kt$0xFFF48FB1</ID>
    <ID>MagicNumber:Colors.kt$0xFFF57C00</ID>
    <ID>MagicNumber:Colors.kt$0xFFF57F17</ID>
    <ID>MagicNumber:Colors.kt$0xFFF596B7</ID>
    <ID>MagicNumber:Colors.kt$0xFFF8BBD0</ID>
    <ID>MagicNumber:Colors.kt$0xFFF93C00</ID>
    <ID>MagicNumber:Colors.kt$0xFFF9A825</ID>
    <ID>MagicNumber:Colors.kt$0xFFFB8C00</ID>
    <ID>MagicNumber:Colors.kt$0xFFFBB504</ID>
    <ID>MagicNumber:Colors.kt$0xFFFBC02D</ID>
    <ID>MagicNumber:Colors.kt$0xFFFD9600</ID>
    <ID>MagicNumber:Colors.kt$0xFFFDD10B</ID>
    <ID>MagicNumber:Colors.kt$0xFFFDD835</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF511A</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF5722</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF6B3C</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF6F00</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF7043</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF8A65</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF8C68</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF8F00</ID>
    <ID>MagicNumber:Colors.kt$0xFFFF9800</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFA000</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFA4AE</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFA724</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFA726</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFAB91</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFAD93</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFB300</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFB74D</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFBC57</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFC100</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFC107</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFCA28</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFCC26</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFCC80</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFCCBC</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFCDD2</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFD089</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFD54F</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFD659</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFE082</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFE0B2</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFE28A</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFE712</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFEA2F</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFEB3B</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFECB3</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFED4D</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFEE58</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFF176</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFF267</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFF590</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFF59B</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFF9C4</ID>
    <ID>MagicNumber:Colors.kt$0xFFFFFFFF</ID>
    <ID>MagicNumber:ColorsExtensions.kt$0.6f</ID>
    <ID>MagicNumber:Constants.kt$0xCC00796B</ID>
    <ID>MagicNumber:Constants.kt$0xCC0097A7</ID>
    <ID>MagicNumber:Constants.kt$0xCC0288D1</ID>
    <ID>MagicNumber:Constants.kt$0xCC1976D2</ID>
    <ID>MagicNumber:Constants.kt$0xCC388E3C</ID>
    <ID>MagicNumber:Constants.kt$0xCC689F38</ID>
    <ID>MagicNumber:Constants.kt$0xCCC2185B</ID>
    <ID>MagicNumber:Constants.kt$0xCCD32F2F</ID>
    <ID>MagicNumber:Constants.kt$0xCCE64A19</ID>
    <ID>MagicNumber:Constants.kt$0xCCF57C00</ID>
    <ID>MagicNumber:ContactsDatabase.kt$ContactsDatabase.Companion.&lt;no name provided&gt;$3</ID>
    <ID>MagicNumber:ContactsHelper.kt$ContactsHelper$50</ID>
    <ID>MagicNumber:Context-contacts.kt$3</ID>
    <ID>MagicNumber:Context-storage.kt$1000</ID>
    <ID>MagicNumber:Context-storage.kt$1000L</ID>
    <ID>MagicNumber:Context-styling.kt$4</ID>
    <ID>MagicNumber:Context.kt$1000</ID>
    <ID>MagicNumber:Context.kt$1000f</ID>
    <ID>MagicNumber:Context.kt$24</ID>
    <ID>MagicNumber:Context.kt$360</ID>
    <ID>MagicNumber:Context.kt$60</ID>
    <ID>MagicNumber:ContextComposeExtensions.kt$5</ID>
    <ID>MagicNumber:CopyMoveTask.kt$CopyMoveTask$1000</ID>
    <ID>MagicNumber:CopyMoveTask.kt$CopyMoveTask$3000L</ID>
    <ID>MagicNumber:CopyMoveTask.kt$CopyMoveTask$500L</ID>
    <ID>MagicNumber:CustomIntervalPickerDialog.kt$0.95f</ID>
    <ID>MagicNumber:CustomizationActivity.kt$CustomizationActivity$50</ID>
    <ID>MagicNumber:DynamicTheme.kt$10011977</ID>
    <ID>MagicNumber:DynamicTheme.kt$10176442</ID>
    <ID>MagicNumber:DynamicTheme.kt$10177034</ID>
    <ID>MagicNumber:DynamicTheme.kt$1023342</ID>
    <ID>MagicNumber:DynamicTheme.kt$10395295</ID>
    <ID>MagicNumber:DynamicTheme.kt$10453621</ID>
    <ID>MagicNumber:DynamicTheme.kt$10603087</ID>
    <ID>MagicNumber:DynamicTheme.kt$10665929</ID>
    <ID>MagicNumber:DynamicTheme.kt$10720320</ID>
    <ID>MagicNumber:DynamicTheme.kt$1074534</ID>
    <ID>MagicNumber:DynamicTheme.kt$1086464</ID>
    <ID>MagicNumber:DynamicTheme.kt$1092784</ID>
    <ID>MagicNumber:DynamicTheme.kt$10929</ID>
    <ID>MagicNumber:DynamicTheme.kt$11171025</ID>
    <ID>MagicNumber:DynamicTheme.kt$1118482</ID>
    <ID>MagicNumber:DynamicTheme.kt$11243910</ID>
    <ID>MagicNumber:DynamicTheme.kt$11457112</ID>
    <ID>MagicNumber:DynamicTheme.kt$11492293</ID>
    <ID>MagicNumber:DynamicTheme.kt$11549705</ID>
    <ID>MagicNumber:DynamicTheme.kt$11652050</ID>
    <ID>MagicNumber:DynamicTheme.kt$11677471</ID>
    <ID>MagicNumber:DynamicTheme.kt$11684180</ID>
    <ID>MagicNumber:DynamicTheme.kt$11922292</ID>
    <ID>MagicNumber:DynamicTheme.kt$12232092</ID>
    <ID>MagicNumber:DynamicTheme.kt$12245088</ID>
    <ID>MagicNumber:DynamicTheme.kt$12409355</ID>
    <ID>MagicNumber:DynamicTheme.kt$12434878</ID>
    <ID>MagicNumber:DynamicTheme.kt$12627531</ID>
    <ID>MagicNumber:DynamicTheme.kt$12703965</ID>
    <ID>MagicNumber:DynamicTheme.kt$12808398</ID>
    <ID>MagicNumber:DynamicTheme.kt$12846</ID>
    <ID>MagicNumber:DynamicTheme.kt$1294214</ID>
    <ID>MagicNumber:DynamicTheme.kt$13022805</ID>
    <ID>MagicNumber:DynamicTheme.kt$13124</ID>
    <ID>MagicNumber:DynamicTheme.kt$13154481</ID>
    <ID>MagicNumber:DynamicTheme.kt$13184</ID>
    <ID>MagicNumber:DynamicTheme.kt$13407970</ID>
    <ID>MagicNumber:DynamicTheme.kt$13558894</ID>
    <ID>MagicNumber:DynamicTheme.kt$13615201</ID>
    <ID>MagicNumber:DynamicTheme.kt$13784</ID>
    <ID>MagicNumber:DynamicTheme.kt$14043396</ID>
    <ID>MagicNumber:DynamicTheme.kt$141259</ID>
    <ID>MagicNumber:DynamicTheme.kt$14142061</ID>
    <ID>MagicNumber:DynamicTheme.kt$14235942</ID>
    <ID>MagicNumber:DynamicTheme.kt$14244198</ID>
    <ID>MagicNumber:DynamicTheme.kt$14273992</ID>
    <ID>MagicNumber:DynamicTheme.kt$14575885</ID>
    <ID>MagicNumber:DynamicTheme.kt$14776091</ID>
    <ID>MagicNumber:DynamicTheme.kt$1499549</ID>
    <ID>MagicNumber:DynamicTheme.kt$15064194</ID>
    <ID>MagicNumber:DynamicTheme.kt$15108398</ID>
    <ID>MagicNumber:DynamicTheme.kt$15374912</ID>
    <ID>MagicNumber:DynamicTheme.kt$15700705</ID>
    <ID>MagicNumber:DynamicTheme.kt$15906911</ID>
    <ID>MagicNumber:DynamicTheme.kt$1596</ID>
    <ID>MagicNumber:DynamicTheme.kt$16121</ID>
    <ID>MagicNumber:DynamicTheme.kt$1642852</ID>
    <ID>MagicNumber:DynamicTheme.kt$16537100</ID>
    <ID>MagicNumber:DynamicTheme.kt$16540699</ID>
    <ID>MagicNumber:DynamicTheme.kt$16611119</ID>
    <ID>MagicNumber:DynamicTheme.kt$16615491</ID>
    <ID>MagicNumber:DynamicTheme.kt$16689253</ID>
    <ID>MagicNumber:DynamicTheme.kt$16728876</ID>
    <ID>MagicNumber:DynamicTheme.kt$16732991</ID>
    <ID>MagicNumber:DynamicTheme.kt$16738393</ID>
    <ID>MagicNumber:DynamicTheme.kt$16738680</ID>
    <ID>MagicNumber:DynamicTheme.kt$16742021</ID>
    <ID>MagicNumber:DynamicTheme.kt$16743537</ID>
    <ID>MagicNumber:DynamicTheme.kt$16746133</ID>
    <ID>MagicNumber:DynamicTheme.kt$16750244</ID>
    <ID>MagicNumber:DynamicTheme.kt$16752540</ID>
    <ID>MagicNumber:DynamicTheme.kt$16757440</ID>
    <ID>MagicNumber:DynamicTheme.kt$16777216</ID>
    <ID>MagicNumber:DynamicTheme.kt$1683200</ID>
    <ID>MagicNumber:DynamicTheme.kt$1684967</ID>
    <ID>MagicNumber:DynamicTheme.kt$1739917</ID>
    <ID>MagicNumber:DynamicTheme.kt$1754827</ID>
    <ID>MagicNumber:DynamicTheme.kt$18611</ID>
    <ID>MagicNumber:DynamicTheme.kt$19712</ID>
    <ID>MagicNumber:DynamicTheme.kt$1982745</ID>
    <ID>MagicNumber:DynamicTheme.kt$2039584</ID>
    <ID>MagicNumber:DynamicTheme.kt$21615</ID>
    <ID>MagicNumber:DynamicTheme.kt$22746</ID>
    <ID>MagicNumber:DynamicTheme.kt$2298424</ID>
    <ID>MagicNumber:DynamicTheme.kt$2300043</ID>
    <ID>MagicNumber:DynamicTheme.kt$24576</ID>
    <ID>MagicNumber:DynamicTheme.kt$2604267</ID>
    <ID>MagicNumber:DynamicTheme.kt$2614432</ID>
    <ID>MagicNumber:DynamicTheme.kt$2634552</ID>
    <ID>MagicNumber:DynamicTheme.kt$26624</ID>
    <ID>MagicNumber:DynamicTheme.kt$2672</ID>
    <ID>MagicNumber:DynamicTheme.kt$2691126</ID>
    <ID>MagicNumber:DynamicTheme.kt$278483</ID>
    <ID>MagicNumber:DynamicTheme.kt$2825897</ID>
    <ID>MagicNumber:DynamicTheme.kt$28928</ID>
    <ID>MagicNumber:DynamicTheme.kt$291840</ID>
    <ID>MagicNumber:DynamicTheme.kt$2937041</ID>
    <ID>MagicNumber:DynamicTheme.kt$30107</ID>
    <ID>MagicNumber:DynamicTheme.kt$3029783</ID>
    <ID>MagicNumber:DynamicTheme.kt$3155748</ID>
    <ID>MagicNumber:DynamicTheme.kt$3238952</ID>
    <ID>MagicNumber:DynamicTheme.kt$3285959</ID>
    <ID>MagicNumber:DynamicTheme.kt$36797</ID>
    <ID>MagicNumber:DynamicTheme.kt$37120</ID>
    <ID>MagicNumber:DynamicTheme.kt$3722</ID>
    <ID>MagicNumber:DynamicTheme.kt$3790808</ID>
    <ID>MagicNumber:DynamicTheme.kt$3808859</ID>
    <ID>MagicNumber:DynamicTheme.kt$3814679</ID>
    <ID>MagicNumber:DynamicTheme.kt$4056997</ID>
    <ID>MagicNumber:DynamicTheme.kt$4142541</ID>
    <ID>MagicNumber:DynamicTheme.kt$415707</ID>
    <ID>MagicNumber:DynamicTheme.kt$4246004</ID>
    <ID>MagicNumber:DynamicTheme.kt$43230</ID>
    <ID>MagicNumber:DynamicTheme.kt$4342339</ID>
    <ID>MagicNumber:DynamicTheme.kt$4412764</ID>
    <ID>MagicNumber:DynamicTheme.kt$4464901</ID>
    <ID>MagicNumber:DynamicTheme.kt$4520</ID>
    <ID>MagicNumber:DynamicTheme.kt$4528984</ID>
    <ID>MagicNumber:DynamicTheme.kt$4560696</ID>
    <ID>MagicNumber:DynamicTheme.kt$476208</ID>
    <ID>MagicNumber:DynamicTheme.kt$4776932</ID>
    <ID>MagicNumber:DynamicTheme.kt$4941</ID>
    <ID>MagicNumber:DynamicTheme.kt$4987396</ID>
    <ID>MagicNumber:DynamicTheme.kt$5005861</ID>
    <ID>MagicNumber:DynamicTheme.kt$5051406</ID>
    <ID>MagicNumber:DynamicTheme.kt$5054501</ID>
    <ID>MagicNumber:DynamicTheme.kt$5194811</ID>
    <ID>MagicNumber:DynamicTheme.kt$5317</ID>
    <ID>MagicNumber:DynamicTheme.kt$5319295</ID>
    <ID>MagicNumber:DynamicTheme.kt$5434281</ID>
    <ID>MagicNumber:DynamicTheme.kt$5552196</ID>
    <ID>MagicNumber:DynamicTheme.kt$5983189</ID>
    <ID>MagicNumber:DynamicTheme.kt$6190977</ID>
    <ID>MagicNumber:DynamicTheme.kt$6313766</ID>
    <ID>MagicNumber:DynamicTheme.kt$6366844</ID>
    <ID>MagicNumber:DynamicTheme.kt$6381922</ID>
    <ID>MagicNumber:DynamicTheme.kt$6382300</ID>
    <ID>MagicNumber:DynamicTheme.kt$6501275</ID>
    <ID>MagicNumber:DynamicTheme.kt$6543440</ID>
    <ID>MagicNumber:DynamicTheme.kt$688361</ID>
    <ID>MagicNumber:DynamicTheme.kt$689152</ID>
    <ID>MagicNumber:DynamicTheme.kt$6982195</ID>
    <ID>MagicNumber:DynamicTheme.kt$7288071</ID>
    <ID>MagicNumber:DynamicTheme.kt$7297874</ID>
    <ID>MagicNumber:DynamicTheme.kt$7461718</ID>
    <ID>MagicNumber:DynamicTheme.kt$749647</ID>
    <ID>MagicNumber:DynamicTheme.kt$7508381</ID>
    <ID>MagicNumber:DynamicTheme.kt$7617718</ID>
    <ID>MagicNumber:DynamicTheme.kt$765666</ID>
    <ID>MagicNumber:DynamicTheme.kt$769226</ID>
    <ID>MagicNumber:DynamicTheme.kt$7810712</ID>
    <ID>MagicNumber:DynamicTheme.kt$7860657</ID>
    <ID>MagicNumber:DynamicTheme.kt$8014</ID>
    <ID>MagicNumber:DynamicTheme.kt$8062</ID>
    <ID>MagicNumber:DynamicTheme.kt$8227049</ID>
    <ID>MagicNumber:DynamicTheme.kt$8268550</ID>
    <ID>MagicNumber:DynamicTheme.kt$8331542</ID>
    <ID>MagicNumber:DynamicTheme.kt$8336444</ID>
    <ID>MagicNumber:DynamicTheme.kt$8497214</ID>
    <ID>MagicNumber:DynamicTheme.kt$8604862</ID>
    <ID>MagicNumber:DynamicTheme.kt$8708190</ID>
    <ID>MagicNumber:DynamicTheme.kt$8812853</ID>
    <ID>MagicNumber:DynamicTheme.kt$8825528</ID>
    <ID>MagicNumber:DynamicTheme.kt$8875876</ID>
    <ID>MagicNumber:DynamicTheme.kt$9079435</ID>
    <ID>MagicNumber:DynamicTheme.kt$9254834</ID>
    <ID>MagicNumber:DynamicTheme.kt$9614271</ID>
    <ID>MagicNumber:DynamicTheme.kt$9823334</ID>
    <ID>MagicNumber:DynamicTheme.kt$985917</ID>
    <ID>MagicNumber:DynamicTheme.kt$9920712</ID>
    <ID>MagicNumber:EditText.kt$128</ID>
    <ID>MagicNumber:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$180</ID>
    <ID>MagicNumber:FingerprintTab.kt$FingerprintTab$3000L</ID>
    <ID>MagicNumber:ImageView.kt$0.5f</ID>
    <ID>MagicNumber:ImageView.kt$2</ID>
    <ID>MagicNumber:InputStream.kt$8192</ID>
    <ID>MagicNumber:Int.kt$.5</ID>
    <ID>MagicNumber:Int.kt$0xFFFFFF</ID>
    <ID>MagicNumber:Int.kt$1000</ID>
    <ID>MagicNumber:Int.kt$1000L</ID>
    <ID>MagicNumber:Int.kt$100f</ID>
    <ID>MagicNumber:Int.kt$1024.0</ID>
    <ID>MagicNumber:Int.kt$114</ID>
    <ID>MagicNumber:Int.kt$149</ID>
    <ID>MagicNumber:Int.kt$180</ID>
    <ID>MagicNumber:Int.kt$270</ID>
    <ID>MagicNumber:Int.kt$299</ID>
    <ID>MagicNumber:Int.kt$3</ID>
    <ID>MagicNumber:Int.kt$3600</ID>
    <ID>MagicNumber:Int.kt$587</ID>
    <ID>MagicNumber:Int.kt$60</ID>
    <ID>MagicNumber:Int.kt$8</ID>
    <ID>MagicNumber:Int.kt$90</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$0.95f</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$10</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$11</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$12</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$13</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$14</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$15</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$16</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$17</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$18</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$3</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$4</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$5</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$6</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$7</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$8</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$9</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$10</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$11</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$12</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$13</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$14</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$15</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$16</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$17</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$18</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$19</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$3</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$4</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$5</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$6</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$7</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$8</ID>
    <ID>MagicNumber:LineColorPickerDialog.kt$LineColorPickerDialog$9</ID>
    <ID>MagicNumber:LocalContactsHelper.kt$LocalContactsHelper$30</ID>
    <ID>MagicNumber:Long.kt$1024.0</ID>
    <ID>MagicNumber:ManageBlockedNumbersScreen.kt$10</ID>
    <ID>MagicNumber:MyAppCompatCheckbox.kt$MyAppCompatCheckbox$0.6f</ID>
    <ID>MagicNumber:MyAutoCompleteTextView.kt$MyAutoCompleteTextView$0.5f</ID>
    <ID>MagicNumber:MyCompatRadioButton.kt$MyCompatRadioButton$0.6f</ID>
    <ID>MagicNumber:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$3</ID>
    <ID>MagicNumber:MyMaterialSwitch.kt$MyMaterialSwitch$0.2f</ID>
    <ID>MagicNumber:MyMaterialSwitch.kt$MyMaterialSwitch$0.4f</ID>
    <ID>MagicNumber:MyRecyclerView.kt$MyRecyclerView$25L</ID>
    <ID>MagicNumber:MyRecyclerView.kt$MyRecyclerView.GestureListener$0.15f</ID>
    <ID>MagicNumber:MyRecyclerView.kt$MyRecyclerView.GestureListener$0.4f</ID>
    <ID>MagicNumber:MyRecyclerView.kt$MyRecyclerView.GestureListener$1000</ID>
    <ID>MagicNumber:PasswordTypesAdapter.kt$PasswordTypesAdapter$3</ID>
    <ID>MagicNumber:PinTab.kt$PinTab$10</ID>
    <ID>MagicNumber:Point.kt$10</ID>
    <ID>MagicNumber:Point.kt$1000000f</ID>
    <ID>MagicNumber:Point.kt$10f</ID>
    <ID>MagicNumber:PropertiesDialog.kt$PropertiesDialog$1000L</ID>
    <ID>MagicNumber:RadioGroupDialog.kt$3</ID>
    <ID>MagicNumber:RateStarsDialog.kt$500L</ID>
    <ID>MagicNumber:RenamePatternTab.kt$RenamePatternTab$4</ID>
    <ID>MagicNumber:RenamePatternTab.kt$RenamePatternTab$5</ID>
    <ID>MagicNumber:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$2</ID>
    <ID>MagicNumber:SimpleContactsHelper.kt$SimpleContactsHelper$30</ID>
    <ID>MagicNumber:SimpleContactsHelper.kt$SimpleContactsHelper$9</ID>
    <ID>MagicNumber:SimpleScaffoldTopBar.kt$50</ID>
    <ID>MagicNumber:StoragePickerDialog.kt$StoragePickerDialog$3</ID>
    <ID>MagicNumber:StoragePickerDialog.kt$StoragePickerDialog$4</ID>
    <ID>MagicNumber:String.kt$9</ID>
    <ID>MagicNumber:SystemUIController.kt$0.3f</ID>
    <ID>MagicNumber:SystemUIController.kt$AndroidSystemUiController$29</ID>
    <ID>MagicNumber:SystemUIController.kt$SystemUiController$0.5f</ID>
    <ID>MagicNumber:UpgradeToProDialog.kt$0.2f</ID>
    <ID>MagicNumber:VcfExporter.kt$VcfExporter$1900</ID>
    <ID>MagicNumber:WhatsNewDialog.kt$14</ID>
    <ID>MagicNumber:WhatsNewDialog.kt$3</ID>
    <ID>MagicNumber:WritePermissionDialog.kt$0.9f</ID>
    <ID>MagicNumber:WritePermissionDialog.kt$350</ID>
    <ID>MatchingDeclarationName:DonationData.kt$Donation</ID>
    <ID>MatchingDeclarationName:RecyclerViewPayloads.kt$RecyclerSelectionPayload</ID>
    <ID>MaxLineLength:AboutActivity.kt$AboutActivity$message = "${getString(R.string.before_asking_question_read_faq)}\n\n${getString(R.string.make_sure_latest)}"</ID>
    <ID>MaxLineLength:AboutActivity.kt$AboutActivity$private</ID>
    <ID>MaxLineLength:AboutScreen.kt$TwoLinerTextItem(text = stringResource(id = R.string.invite_friends), icon = R.drawable.ic_add_person_vector, click = onInviteClick)</ID>
    <ID>MaxLineLength:AboutScreen.kt$TwoLinerTextItem(text = stringResource(id = R.string.rate_us), icon = R.drawable.ic_star_vector, click = onRateUsClick)</ID>
    <ID>MaxLineLength:ActionMenu.kt$ActionItem(R.string.export_blocked_numbers, doAction = { }, overflowMode = OverflowMode.ALWAYS_OVERFLOW)</ID>
    <ID>MaxLineLength:ActionMenu.kt$ActionMenu(items = actionMenus, numIcons = 2, isMenuVisible = true, onMenuToggle = { }, iconsColor = Color.Black)</ID>
    <ID>MaxLineLength:ActionMenu.kt$Icon(imageVector = Icons.Default.MoreVert, contentDescription = stringResource(id = R.string.more_options))</ID>
    <ID>MaxLineLength:ActionMenu.kt$positionProvider = TooltipDefaults.rememberPlainTooltipPositionProvider(spacingBetweenTooltipAndAnchor = 18.dp)</ID>
    <ID>MaxLineLength:Activity.kt$// if we are renaming multiple files at once, we should give the Android 30+ permission dialog all uris together, not one by one</ID>
    <ID>MaxLineLength:Activity.kt$&lt;no name provided&gt;$override</ID>
    <ID>MaxLineLength:Activity.kt$&lt;no name provided&gt;$val isCanceledByUser = errorCode == BiometricPrompt.ERROR_NEGATIVE_BUTTON || errorCode == BiometricPrompt.ERROR_USER_CANCELED</ID>
    <ID>MaxLineLength:Activity.kt$ConfirmationAdvancedDialog</ID>
    <ID>MaxLineLength:Activity.kt$DocumentsContract.renameDocument(applicationContext.contentResolver, document.uri, newPath.getFilenameFromPath())</ID>
    <ID>MaxLineLength:Activity.kt$SecurityDialog</ID>
    <ID>MaxLineLength:Activity.kt$WritePermissionDialog</ID>
    <ID>MaxLineLength:Activity.kt$curMinutes: Int</ID>
    <ID>MaxLineLength:Activity.kt$curSeconds: Int</ID>
    <ID>MaxLineLength:Activity.kt$deleteFileBg(file.toFileDirItem(applicationContext), allowDeleteFolder = false, isDeletingMultipleFiles = false) { }</ID>
    <ID>MaxLineLength:Activity.kt$fun</ID>
    <ID>MaxLineLength:Activity.kt$grantUriPermission(packageName, outputUri, Intent.FLAG_GRANT_WRITE_URI_PERMISSION or Intent.FLAG_GRANT_READ_URI_PERMISSION)</ID>
    <ID>MaxLineLength:Activity.kt$if</ID>
    <ID>MaxLineLength:Activity.kt$return</ID>
    <ID>MaxLineLength:Activity.kt$showPickSecondsDialog(seconds, isSnoozePicker, showSecondsAtCustomDialog, showDuringDayOption, cancelCallback, callback)</ID>
    <ID>MaxLineLength:Activity.kt$val packageName = if (baseConfig.appId.contains(".debug", true)) "org.fossify.phone.debug" else "org.fossify.phone"</ID>
    <ID>MaxLineLength:ActivityExtensions.kt$"You are using a fake version of the app. For your own safety download the original one from www.fossify.org. Thanks"</ID>
    <ID>MaxLineLength:ActivityExtensions.kt$fun</ID>
    <ID>MaxLineLength:AlertDialog.kt$// in dialogs, lets use findViewById, because while some dialogs use MyEditText, material theme dialogs use TextInputEditText so the system takes care of it</ID>
    <ID>MaxLineLength:AlertDialogsExtensions.kt$is Theme.SystemDefaultMaterialYou -&gt; if (isSPlus()) colorResource(R.color.you_dialog_background_color) else SimpleTheme.colorScheme.surface</ID>
    <ID>MaxLineLength:AppLockAdapter.kt$AppLockAdapter$val viewHolder = (viewPager.getChildAt(0) as? RecyclerView)?.findViewHolderForAdapterPosition(position) as? ViewHolder</ID>
    <ID>MaxLineLength:AppLockAdapter.kt$AppLockAdapter$view.layoutParams = ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)</ID>
    <ID>MaxLineLength:AutoStaggeredGridLayoutManager.kt$AutoStaggeredGridLayoutManager$*</ID>
    <ID>MaxLineLength:BaseBottomSheetDialogFragment.kt$BaseBottomSheetDialogFragment$(this as LayerDrawable).findDrawableByLayerId(R.id.bottom_sheet_background).applyColorFilter(context.getProperBackgroundColor())</ID>
    <ID>MaxLineLength:BaseBottomSheetDialogFragment.kt$BaseBottomSheetDialogFragment$view.root.background</ID>
    <ID>MaxLineLength:BaseBottomSheetDialogFragment.kt$BaseBottomSheetDialogFragment$view.root.background = ResourcesCompat.getDrawable(context.resources, R.drawable.bottom_sheet_bg_black, context.theme)</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$SHOW_ADDRESSES_FIELD</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$get() = prefs.getString(AUTO_BACKUP_FOLDER, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).absolutePath)!!</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$private fun getDefaultInternalPath()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$protected fun &lt;T&gt; KProperty0&lt;T&gt;.asFlowNonNull(emitOnCollect: Boolean = false): Flow&lt;T&gt;</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$return LinkedList(prefs.getString(COLOR_PICKER_RECENT_COLORS, null)?.lines()?.map { it.toInt() } ?: defaultList)</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(ignoreContactSources) = prefs.edit().remove(IGNORED_CONTACT_SOURCES).putStringSet(IGNORED_CONTACT_SOURCES, ignoreContactSources).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(isAppPasswordProtectionOn) = prefs.edit().putBoolean(APP_PASSWORD_PROTECTION, isAppPasswordProtectionOn).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(isDeletePasswordProtectionOn) = prefs.edit().putBoolean(DELETE_PASSWORD_PROTECTION, isDeletePasswordProtectionOn).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(isHiddenPasswordProtectionOn) = prefs.edit().putBoolean(PASSWORD_PROTECTION, isHiddenPasswordProtectionOn).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(isUsingModifiedAppIcon) = prefs.edit().putBoolean(IS_USING_MODIFIED_APP_ICON, isUsingModifiedAppIcon).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(lastBlockedNumbersExportPath) = prefs.edit().putString(LAST_BLOCKED_NUMBERS_EXPORT_PATH, lastBlockedNumbersExportPath).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(lastConflictApplyToAll) = prefs.edit().putBoolean(LAST_CONFLICT_APPLY_TO_ALL, lastConflictApplyToAll).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(lastExportedSettingsFolder) = prefs.edit().putString(LAST_EXPORTED_SETTINGS_FOLDER, lastExportedSettingsFolder).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(lastHandledShortcutColor) = prefs.edit().putInt(LAST_HANDLED_SHORTCUT_COLOR, lastHandledShortcutColor).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(passwordCountdownStartMs) = prefs.edit().putLong(PASSWORD_COUNTDOWN_START_MS, passwordCountdownStartMs).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(preventPhoneFromSleeping) = prefs.edit().putBoolean(PREVENT_PHONE_FROM_SLEEPING, preventPhoneFromSleeping).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(recentColors) = prefs.edit().putString(COLOR_PICKER_RECENT_COLORS, recentColors.joinToString(separator = "\n")).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(showCheckmarksOnSwitches) = prefs.edit().putBoolean(SHOW_CHECKMARKS_ON_SWITCHES, showCheckmarksOnSwitches).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(showOnlyContactsWithNumbers) = prefs.edit().putBoolean(SHOW_ONLY_CONTACTS_WITH_NUMBERS, showOnlyContactsWithNumbers).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasFolderLockingNoticeShown) = prefs.edit().putBoolean(WAS_FOLDER_LOCKING_NOTICE_SHOWN, wasFolderLockingNoticeShown).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasInitialUpgradeToProShown) = prefs.edit().putBoolean(WAS_INITIAL_UPGRADE_TO_PRO_SHOWN, wasInitialUpgradeToProShown).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasLocalAccountInitialized) = prefs.edit().putBoolean(WAS_LOCAL_ACCOUNT_INITIALIZED, wasLocalAccountInitialized).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasMessengerRecorderShown) = prefs.edit().putBoolean(WAS_MESSENGER_RECORDER_SHOWN, wasMessengerRecorderShown).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasReminderWarningShown) = prefs.edit().putBoolean(WAS_REMINDER_WARNING_SHOWN, wasReminderWarningShown).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasSortingByNumericValueAdded) = prefs.edit().putBoolean(WAS_SORTING_BY_NUMERIC_VALUE_ADDED, wasSortingByNumericValueAdded).apply()</ID>
    <ID>MaxLineLength:BaseConfig.kt$BaseConfig$set(wasUpgradedFromFreeShown) = prefs.edit().putBoolean(WAS_UPGRADED_FROM_FREE_SHOWN, wasUpgradedFromFreeShown).apply()</ID>
    <ID>MaxLineLength:BaseSecurityTab.kt$BaseSecurityTab$updateTitle(context.getString(R.string.too_many_incorrect_attempts, count), context.getColor(R.color.md_red))</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$// synchronous return value determines only if we are showing the SAF dialog, callback result tells if the SD or OTG permission has been granted</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$// this file is guaranteed to be on the internal storage, so just delete it this way</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$ActivityCompat.requestPermissions(this, permissionIds.map { getPermissionString(it) }.toTypedArray(), GENERIC_PERM_HANDLER)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$CopyMoveTask(this, isCopyOperation, copyPhotoVideoOnly, it, copyMoveListener, copyHidden).execute(pair)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER).putExtra(TelecomManager.EXTRA_CHANGE_DEFAULT_DIALER_PACKAGE_NAME, packageName)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$PermissionRequiredDialog(this, R.string.allow_notifications_files, { openNotificationSettings() })</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$baseConfig.OTGPartition = baseConfig.OTGTreeUri.removeSuffix("%3A").substringAfterLast('/').trimEnd('/')</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$copyMoveListener.copySucceeded(false, fileCountToCopy &lt;= updatedPaths.size, destination, updatedPaths.size == 1)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$copyMoveListener.copySucceeded(false, fileCountToCopy == 0, destination, false)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$fileDirItems: ArrayList&lt;FileDirItem&gt;</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$files: ArrayList&lt;FileDirItem&gt;</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$fun</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$getConflictResolution(it, newFile.absolutePath) == CONFLICT_KEEP_BOTH -&gt; newFile = getAlternativeFile(newFile)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$getConflictResolution(it, newFile.absolutePath) == CONFLICT_SKIP -&gt; fileCountToCopy--</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$if</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$private fun isAndroidDir(uri: Uri)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$private fun isInternalStorage(uri: Uri)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$private fun isProperOTGRootFolder(uri: Uri)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$private fun isProperSDRootFolder(uri: Uri)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$putExtra(DocumentsContract.EXTRA_INITIAL_URI, createAndroidDataOrObbUri(checkedDocumentPath))</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$return</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$startCopyMove(fileDirItems, destination, isCopyOperation, copyPhotoVideoOnly, copyHidden)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$val</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$val drawableId = if (toolbarNavigationIcon == NavigationIcon.Cross) R.drawable.ic_cross_vector else R.drawable.ic_arrow_left_vector</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$val label = "You are using a fake version of the app. For your own safety download the original one from www.fossify.org. Thanks"</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$val recoverableSecurityException = securityException as? RecoverableSecurityException ?: throw securityException</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$var isMaterialActivity = false // by material activity we mean translucent navigation bar and opaque status and action bars</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$window.decorView.systemUiVisibility = window.decorView.systemUiVisibility.addBit(View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$window.decorView.systemUiVisibility = window.decorView.systemUiVisibility.removeBit(View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$window.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION, WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION)</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity$}</ID>
    <ID>MaxLineLength:BaseSimpleActivity.kt$BaseSimpleActivity.&lt;no name provided&gt;$override</ID>
    <ID>MaxLineLength:BaseSplashActivity.kt$BaseSplashActivity$resources.getColor(if (isUsingSystemDarkTheme) R.color.theme_dark_background_color else R.color.theme_light_background_color)</ID>
    <ID>MaxLineLength:BaseSplashActivity.kt$BaseSplashActivity$textColor = resources.getColor(if (isUsingSystemDarkTheme) R.color.theme_dark_text_color else R.color.theme_light_text_color)</ID>
    <ID>MaxLineLength:BlockedNumber.kt$BlockedNumber$data</ID>
    <ID>MaxLineLength:BottomActionMenuItemPopup.kt$BottomActionMenuItemPopup$childLayoutParams = ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)</ID>
    <ID>MaxLineLength:BottomActionMenuItemPopup.kt$BottomActionMenuItemPopup$private</ID>
    <ID>MaxLineLength:BottomActionMenuPopup.kt$BottomActionMenuPopup$constructor(activity: BaseSimpleActivity, @MenuRes menuResId: Int) : this(activity, BottomActionMenuParser(activity).inflate(menuResId))</ID>
    <ID>MaxLineLength:BottomSheetChooserDialog.kt$ChooserBottomSheetDialog(bottomSheetDialogState = rememberBottomSheetDialogState(), items = list, onItemClicked = {})</ID>
    <ID>MaxLineLength:ChangeDateTimeFormatDialog.kt$ChangeDateTimeFormatAlertDialog(alertDialogState = rememberAlertDialogState(), is24HourChecked = true) { _, _ -&gt; }</ID>
    <ID>MaxLineLength:ColorPickerDialog.kt$if</ID>
    <ID>MaxLineLength:ColorPickerDialog.kt$val currentColorHsv by remember { derivedStateOf { Hsv(FloatArray(3)).apply { Color.colorToHSV(color, this.value) } } }</ID>
    <ID>MaxLineLength:ComposeExtensions.kt$fun</ID>
    <ID>MaxLineLength:ConfirmationAdvancedDialog.kt$ConfirmationAdvancedDialog$activity: Activity</ID>
    <ID>MaxLineLength:ConfirmationDialog.kt$ConfirmationDialog$activity</ID>
    <ID>MaxLineLength:Constants.kt$const val EVERY_DAY_BIT = MONDAY_BIT or TUESDAY_BIT or WEDNESDAY_BIT or THURSDAY_BIT or FRIDAY_BIT or SATURDAY_BIT or SUNDAY_BIT</ID>
    <ID>MaxLineLength:Constants.kt$const val SORT_FOLDER_PREFIX = "sort_folder_" // storing folder specific values at using "Use for this folder only"</ID>
    <ID>MaxLineLength:Constants.kt$val audioExtensions: Array&lt;String&gt; get() = arrayOf(".mp3", ".wav", ".wma", ".ogg", ".m4a", ".opus", ".flac", ".aac", ".m4b")</ID>
    <ID>MaxLineLength:Constants.kt$val photoExtensions: Array&lt;String&gt; get() = arrayOf(".jpg", ".png", ".jpeg", ".bmp", ".webp", ".heic", ".heif", ".apng", ".avif", ".jxl")</ID>
    <ID>MaxLineLength:Contact.kt$Contact$// photos stored locally always have different hashcodes. Avoid constantly refreshing the contact lists as the app thinks something changed.</ID>
    <ID>MaxLineLength:Contact.kt$Contact$events.filter { it.type == ContactsContract.CommonDataKinds.Event.TYPE_ANNIVERSARY }.map { it.value }.toMutableList() as ArrayList&lt;String&gt;</ID>
    <ID>MaxLineLength:Contact.kt$Contact$if</ID>
    <ID>MaxLineLength:Contact.kt$Contact$prefix.isEmpty() &amp;&amp; firstName.isEmpty() &amp;&amp; middleName.isEmpty() &amp;&amp; surname.isEmpty() &amp;&amp; suffix.isEmpty() &amp;&amp; organization.isNotEmpty()</ID>
    <ID>MaxLineLength:Contact.kt$Contact$var birthdays = events.filter { it.type == ContactsContract.CommonDataKinds.Event.TYPE_BIRTHDAY }.map { it.value }.toMutableList() as ArrayList&lt;String&gt;</ID>
    <ID>MaxLineLength:ContactsDatabase.kt$ContactsDatabase.Companion$db</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$// storing contacts on some devices seems to be messed up and they move on Phone instead, or disappear completely</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$// try storing a lighter contact version with this oldschool version too just so it wont disappear, future edits work well</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$accountName</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$arrayOf(CommonDataKinds.Organization.CONTENT_ITEM_TYPE, CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE)</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$contacts.filter { it.id != contact.id &amp;&amp; it.getHashToCompare() == contact.getHashToCompare() }.toMutableList() as ArrayList&lt;Contact&gt;</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$events</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$id</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$if</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$private</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$private fun getContactSourceType(accountName: String)</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val address = cursor.getStringValue(CommonDataKinds.StructuredPostal.FORMATTED_ADDRESS) ?: return@queryCursor</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val filteredSources = contactSources.filter { !ignoredTypes.contains(it.type) }.toMutableList() as ArrayList&lt;ContactSource&gt;</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val normalizedNumber = cursor.getStringValue(CommonDataKinds.Phone.NORMALIZED_NUMBER) ?: number.normalizePhoneNumber()</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val selectionArgs = arrayOf(CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE, CommonDataKinds.Organization.CONTENT_ITEM_TYPE, id.toString())</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val selectionArgs = arrayOf(CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE, CommonDataKinds.Organization.CONTENT_ITEM_TYPE, key)</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val selectionArgs = arrayOf(contact.contactId.toString(), CommonDataKinds.GroupMembership.CONTENT_ITEM_TYPE)</ID>
    <ID>MaxLineLength:ContactsHelper.kt$ContactsHelper$val selectionArgs = arrayOf(it.contactId.toString(), CommonDataKinds.GroupMembership.CONTENT_ITEM_TYPE, groupId.toString())</ID>
    <ID>MaxLineLength:Context-contacts.kt$0</ID>
    <ID>MaxLineLength:Context-contacts.kt$fun Context.getPrivateContactSource()</ID>
    <ID>MaxLineLength:Context-contacts.kt$fun Context.hasContactPermissions()</ID>
    <ID>MaxLineLength:Context-contacts.kt$items.add(RadioItem(index, "${phoneNumber.value} (${getPhoneNumberTypeText(phoneNumber.type, phoneNumber.label)})", phoneNumber.value))</ID>
    <ID>MaxLineLength:Context-storage-sdk30.kt$DocumentsContract.createDocument(contentResolver, parentUri, DocumentsContract.Document.MIME_TYPE_DIR, path.getFilenameFromPath()) != null</ID>
    <ID>MaxLineLength:Context-storage-sdk30.kt$DocumentsContract.createDocument(contentResolver, parentUri, path.getMimeType(), path.getFilenameFromPath()) != null</ID>
    <ID>MaxLineLength:Context-storage-sdk30.kt$fun</ID>
    <ID>MaxLineLength:Context-storage.kt$// on some devices no method retrieved any SD card path, so test if its not sdcard1 by any chance. It happened on an Android 5.1</ID>
    <ID>MaxLineLength:Context-storage.kt$// these functions update the mediastore instantly, MediaScannerConnection.scanFileRecursively takes some time to really get applied</ID>
    <ID>MaxLineLength:Context-storage.kt$DocumentsContract.createDocument(contentResolver, parentUri, Document.MIME_TYPE_DIR, path.getFilenameFromPath()) != null</ID>
    <ID>MaxLineLength:Context-storage.kt$DocumentsContract.createDocument(contentResolver, parentUri, path.getMimeType(), path.getFilenameFromPath()) != null</ID>
    <ID>MaxLineLength:Context-storage.kt$documentFile = documentFile!!.createDirectory(targetFile.parentFile.name) ?: getDocumentFile(targetFile.parentFile.absolutePath)</ID>
    <ID>MaxLineLength:Context-storage.kt$else -&gt; if (isAndroidDataDir(path)) baseConfig.primaryAndroidDataTreeUri = treeUri else baseConfig.primaryAndroidObbTreeUri = treeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$else -&gt; if (isAndroidDataDir(path)) baseConfig.primaryAndroidDataTreeUri else baseConfig.primaryAndroidObbTreeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$fileDeleted = (document.isFile || allowDeleteFolder) &amp;&amp; DocumentsContract.deleteDocument(applicationContext.contentResolver, document.uri)</ID>
    <ID>MaxLineLength:Context-storage.kt$fun</ID>
    <ID>MaxLineLength:Context-storage.kt$fun Context.getSomeAndroidSAFDocument(path: String): DocumentFile?</ID>
    <ID>MaxLineLength:Context-storage.kt$fun Context.isPathOnInternalStorage(path: String)</ID>
    <ID>MaxLineLength:Context-storage.kt$fun Context.isSDCardSetAsDefaultStorage()</ID>
    <ID>MaxLineLength:Context-storage.kt$getAndroidTreeUri(path).removeSuffix(if (isAndroidDataDir(path)) "%3AAndroid%2Fdata" else "%3AAndroid%2Fobb").substringAfterLast('/').trimEnd('/')</ID>
    <ID>MaxLineLength:Context-storage.kt$if (File("/storage/emulated/0").exists()) "/storage/emulated/0" else Environment.getExternalStorageDirectory().absolutePath.trimEnd('/')</ID>
    <ID>MaxLineLength:Context-storage.kt$isPathOnOTG(path) -&gt; if (isAndroidDataDir(path)) baseConfig.otgAndroidDataTreeUri = treeUri else baseConfig.otgAndroidObbTreeUri = treeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$isPathOnOTG(path) -&gt; if (isAndroidDataDir(path)) baseConfig.otgAndroidDataTreeUri else baseConfig.otgAndroidObbTreeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$isPathOnSD(path) -&gt; if (isAndroidDataDir(path)) baseConfig.sdAndroidDataTreeUri = treeUri else baseConfig.sdAndroidObbTreeUri = treeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$isPathOnSD(path) -&gt; if (isAndroidDataDir(path)) baseConfig.sdAndroidDataTreeUri else baseConfig.sdAndroidObbTreeUri</ID>
    <ID>MaxLineLength:Context-storage.kt$return trimmed.isEmpty() || trimmed.equals(internalStoragePath, true) || trimmed.equals(sdCardPath, true) || trimmed.equals(otgPath, true)</ID>
    <ID>MaxLineLength:Context-storage.kt$val fileDeleted = (document!!.isFile || allowDeleteFolder) &amp;&amp; DocumentsContract.deleteDocument(applicationContext.contentResolver, document.uri)</ID>
    <ID>MaxLineLength:Context-storage.kt$val projection = arrayOf(Document.COLUMN_DOCUMENT_ID, Document.COLUMN_DISPLAY_NAME, Document.COLUMN_MIME_TYPE, Document.COLUMN_LAST_MODIFIED)</ID>
    <ID>MaxLineLength:Context-storage.kt$val rawSecondaryStorages = rawSecondaryStoragesStr!!.split(File.pathSeparator.toRegex()).dropLastWhile(String::isEmpty).toTypedArray()</ID>
    <ID>MaxLineLength:Context-storage.kt$val selection = "${Images.Media.DATA} LIKE ? AND ${Images.Media.DATA} NOT LIKE ? AND ${Images.Media.MIME_TYPE} IS NOT NULL" // avoid selecting folders</ID>
    <ID>MaxLineLength:Context-styling.kt$fun Context.isBlackAndWhiteTheme()</ID>
    <ID>MaxLineLength:Context-styling.kt$fun Context.isWhiteTheme()</ID>
    <ID>MaxLineLength:Context-styling.kt$showCheckmarksOnSwitches = cursor.getIntValue(MyContentProvider.COL_SHOW_CHECKMARKS_ON_SWITCHES) != 0</ID>
    <ID>MaxLineLength:Context-styling.kt$val state = if (enable) PackageManager.COMPONENT_ENABLED_STATE_ENABLED else PackageManager.COMPONENT_ENABLED_STATE_DISABLED</ID>
    <ID>MaxLineLength:Context.kt$// if media content uri is null, get our custom uri like content://org.fossify.gallery.provider/external_files/emulated/0/DCIM/IMG_20171104_233915.jpg</ID>
    <ID>MaxLineLength:Context.kt$fun</ID>
    <ID>MaxLineLength:Context.kt$fun Context.getCanAppBeUpgraded()</ID>
    <ID>MaxLineLength:Context.kt$fun Context.getDefaultAlarmSound(type: Int)</ID>
    <ID>MaxLineLength:Context.kt$fun Context.getFormattedMinutes(minutes: Int, showBefore: Boolean = true)</ID>
    <ID>MaxLineLength:Context.kt$fun Context.getMyContentProviderCursorLoader()</ID>
    <ID>MaxLineLength:Context.kt$fun Context.hasPermission(permId: Int)</ID>
    <ID>MaxLineLength:Context.kt$val Context.areSystemAnimationsEnabled: Boolean get() = Settings.Global.getFloat(contentResolver, Settings.Global.ANIMATOR_DURATION_SCALE, 0f) &gt; 0f</ID>
    <ID>MaxLineLength:Context.kt$val Context.navigationBarHeight: Int get() = if (navigationBarOnBottom &amp;&amp; navigationBarSize.y != usableScreenSize.y) navigationBarSize.y else 0</ID>
    <ID>MaxLineLength:Context.kt$val Context.navigationBarOnSide: Boolean get() = usableScreenSize.x &lt; realScreenSize.x &amp;&amp; usableScreenSize.x &gt; usableScreenSize.y</ID>
    <ID>MaxLineLength:Context.kt$val Context.notificationManager: NotificationManager get() = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager</ID>
    <ID>MaxLineLength:Context.kt$val dayBits = arrayListOf(MONDAY_BIT, TUESDAY_BIT, WEDNESDAY_BIT, THURSDAY_BIT, FRIDAY_BIT, SATURDAY_BIT, SUNDAY_BIT)</ID>
    <ID>MaxLineLength:Context.kt$}</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_azerbaijani_vector, R.string.translation_azerbaijani, R.string.translators_azerbaijani)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_bengali_vector, R.string.translation_bengali, R.string.translators_bengali)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_catalan_vector, R.string.translation_catalan, R.string.translators_catalan)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_chinese_cn_vector, R.string.translation_chinese_cn, R.string.translators_chinese_cn)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_chinese_hk_vector, R.string.translation_chinese_hk, R.string.translators_chinese_hk)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_chinese_tw_vector, R.string.translation_chinese_tw, R.string.translators_chinese_tw)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_croatian_vector, R.string.translation_croatian, R.string.translators_croatian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_finnish_vector, R.string.translation_finnish, R.string.translators_finnish)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_galician_vector, R.string.translation_galician, R.string.translators_galician)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_hungarian_vector, R.string.translation_hungarian, R.string.translators_hungarian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_indonesian_vector, R.string.translation_indonesian, R.string.translators_indonesian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_italian_vector, R.string.translation_italian, R.string.translators_italian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_japanese_vector, R.string.translation_japanese, R.string.translators_japanese)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_lithuanian_vector, R.string.translation_lithuanian, R.string.translators_lithuanian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_norwegian_vector, R.string.translation_norwegian, R.string.translators_norwegian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_persian_vector, R.string.translation_persian, R.string.translators_persian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_portuguese_vector, R.string.translation_portuguese, R.string.translators_portuguese)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_romanian_vector, R.string.translation_romanian, R.string.translators_romanian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_russian_vector, R.string.translation_russian, R.string.translators_russian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_slovenian_vector, R.string.translation_slovenian, R.string.translators_slovenian)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_spanish_vector, R.string.translation_spanish, R.string.translators_spanish)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_swedish_vector, R.string.translation_swedish, R.string.translators_swedish)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_turkish_vector, R.string.translation_turkish, R.string.translators_turkish)</ID>
    <ID>MaxLineLength:ContributorsActivity.kt$ContributorsActivity$LanguageContributor(R.drawable.ic_flag_ukrainian_vector, R.string.translation_ukrainian, R.string.translators_ukrainian)</ID>
    <ID>MaxLineLength:ContributorsScreen.kt$LanguageContributor(R.drawable.ic_flag_arabic_vector, R.string.translation_arabic, R.string.translators_arabic)</ID>
    <ID>MaxLineLength:ContributorsScreen.kt$LanguageContributor(R.drawable.ic_flag_azerbaijani_vector, R.string.translation_azerbaijani, R.string.translators_azerbaijani)</ID>
    <ID>MaxLineLength:ContributorsScreen.kt$LanguageContributor(R.drawable.ic_flag_bengali_vector, R.string.translation_bengali, R.string.translators_bengali)</ID>
    <ID>MaxLineLength:ContributorsScreen.kt$LanguageContributor(R.drawable.ic_flag_catalan_vector, R.string.translation_catalan, R.string.translators_catalan)</ID>
    <ID>MaxLineLength:Converters.kt$Converters$// convert [{"a":"678910","b":2,"c":"","d":"678910","e":false}] to PhoneNumber(value=678910, type=2, label=, normalizedNumber=678910, isPrimary=false)</ID>
    <ID>MaxLineLength:Converters.kt$Converters$// some hacky converting is needed since PhoneNumber model has been added to proguard rules, but obfuscated json was stored in database</ID>
    <ID>MaxLineLength:CopyMoveTask.kt$CopyMoveTask$// if we delete multiple files from Downloads folder on Android 11 or 12 without being a Media Management app, show the confirmation dialog just once</ID>
    <ID>MaxLineLength:CopyMoveTask.kt$CopyMoveTask$listener.copySucceeded(copyOnly, mTransferredFiles.size &gt;= mFileCountToCopy, mDestinationPath, mTransferredFiles.size == 1)</ID>
    <ID>MaxLineLength:CopyMoveTask.kt$CopyMoveTask$private var mFileDirItemsToDelete = ArrayList&lt;FileDirItem&gt;() // confirm the deletion of files on Android 11 from Downloads and Android at once</ID>
    <ID>MaxLineLength:CopyMoveTask.kt$CopyMoveTask$val activity: BaseSimpleActivity</ID>
    <ID>MaxLineLength:CreateNewFolderDialog.kt$CreateNewFolderDialog$activity.isRestrictedSAFOnlyRoot(path) &amp;&amp; activity.createAndroidSAFDirectory(path) -&gt; sendSuccess(alertDialog, path)</ID>
    <ID>MaxLineLength:CreateNewFolderDialog.kt$CreateNewFolderDialog$isRPlus() &amp;&amp; activity.isAStorageRootFolder(path.getParentPath())</ID>
    <ID>MaxLineLength:CreateNewFolderDialog.kt$CreateNewFolderDialog$val newDir = documentFile?.createDirectory(path.getFilenameFromPath()) ?: activity.getDocumentFile(path)</ID>
    <ID>MaxLineLength:CustomIntervalPickerDialog.kt$CustomIntervalPickerDialog$class</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$// doesn't really matter what colors we use here, everything will be taken from the system. Use the default dark theme values here.</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$LineColorPickerDialog</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$binding.customizationAccentColorHolder.beVisibleIf(curSelectedThemeId == THEME_WHITE || isCurrentWhiteTheme() || curSelectedThemeId == THEME_BLACK_WHITE || isCurrentBlackAndWhiteTheme())</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$curPrimaryLineColorPicker</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$private fun isCurrentBlackAndWhiteTheme()</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$private fun isCurrentWhiteTheme()</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$updateMaterialActivityViews(binding.customizationCoordinator, binding.customizationHolder, useTransparentNavigation = true, useTopSearchMenu = false)</ID>
    <ID>MaxLineLength:CustomizationActivity.kt$CustomizationActivity$val backgroundColor = if (isDarkTheme) R.color.theme_dark_background_color else R.color.theme_light_background_color</ID>
    <ID>MaxLineLength:EditText.kt$fun</ID>
    <ID>MaxLineLength:EnterPasswordDialog.kt$EnterPasswordDialog$private val view: DialogEnterPasswordBinding = DialogEnterPasswordBinding.inflate(activity.layoutInflater, null, false)</ID>
    <ID>MaxLineLength:ExifInterface.kt$// ExifInterface.TAG_ORIENTATION, // do not remove the orientation, it could lead to unexpected behaviour at displaying the file</ID>
    <ID>MaxLineLength:ExportBlockedNumbersDialog.kt$ExportBlockedNumbersDialog$exportBlockedNumbersFilename.setText("${activity.getString(R.string.blocked_numbers)}_${activity.getCurrentFormattedDateTime()}")</ID>
    <ID>MaxLineLength:ExportSettingsDialog.kt$ExportSettingsDialog$val title = String.format(activity.getString(R.string.file_already_exists_overwrite), newPath.getFilenameFromPath())</ID>
    <ID>MaxLineLength:File.kt$fun File.toFileDirItem(context: Context)</ID>
    <ID>MaxLineLength:FileConflictDialog.kt$FileConflictDialog$val stringBase = if (fileDirItem.isDirectory) R.string.folder_already_exists else R.string.file_already_exists</ID>
    <ID>MaxLineLength:FileConflictDialog.kt$stringResource(id = if (fileDirItem.isDirectory) R.string.folder_already_exists else R.string.file_already_exists)</ID>
    <ID>MaxLineLength:FileDirItem.kt$FileDirItem$"FileDirItem(path=$path, name=$name, isDirectory=$isDirectory, children=$children, size=$size, modified=$modified, mediaStoreId=$mediaStoreId)"</ID>
    <ID>MaxLineLength:FileDirItem.kt$FileDirItem$AlphanumericComparator().compare(name.normalizeString().lowercase(), other.name.normalizeString().lowercase())</ID>
    <ID>MaxLineLength:FileDirItem.kt$FileDirItem$context.isPathOnOTG(path)</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$FilepickerFavoritesAdapter</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$lastModified = 0</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$private</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$val drawable = activity.resources.getColoredDrawableWithColor(R.drawable.ic_folder_vector, activity.getProperPrimaryColor().getContrastColor())</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$val drawable = activity.resources.getColoredDrawableWithColor(R.drawable.ic_star_vector, activity.getProperPrimaryColor().getContrastColor())</ID>
    <ID>MaxLineLength:FilePickerDialog.kt$FilePickerDialog$val secondaryFabBottomMargin = activity.resources.getDimension(if (showFAB) R.dimen.secondary_fab_bottom_margin else R.dimen.activity_margin).toInt()</ID>
    <ID>MaxLineLength:FilepickerFavoritesAdapter.kt$FilepickerFavoritesAdapter$override fun onCreateViewHolder(parent: ViewGroup, viewType: Int)</ID>
    <ID>MaxLineLength:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$override fun onChange(position: Int)</ID>
    <ID>MaxLineLength:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$override fun onCreateViewHolder(parent: ViewGroup, viewType: Int)</ID>
    <ID>MaxLineLength:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$val packageInfo = root.context.packageManager.getPackageArchiveInfo(path, PackageManager.GET_ACTIVITIES)</ID>
    <ID>MaxLineLength:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$val placeholder = fileDrawables.getOrElse(fileDirItem.name.substringAfterLast(".").lowercase(Locale.getDefault())) { fileDrawable }</ID>
    <ID>MaxLineLength:FingerprintTab.kt$FingerprintTab$binding.fingerprintLabel.text = context.getString(if (hasFingerprints) R.string.place_finger else R.string.no_fingerprints_registered)</ID>
    <ID>MaxLineLength:FingerprintTab.kt$FingerprintTab.&lt;no name provided&gt;$override</ID>
    <ID>MaxLineLength:Int.kt$message = "Broken due to the Year 2038 problem. Use Long.formatDate() instead (but note that it uses milliseconds, not seconds)."</ID>
    <ID>MaxLineLength:Int.kt$message = "Broken due to the Year 2038 problem. Use Long.formatDateOrTime() instead (but note that it uses milliseconds, not seconds)."</ID>
    <ID>MaxLineLength:Int.kt$message = "Broken due to the Year 2038 problem. Use Long.isThisYear() instead (but note that it uses milliseconds, not seconds)."</ID>
    <ID>MaxLineLength:ItemMoveCallback.kt$ItemMoveCallback$open</ID>
    <ID>MaxLineLength:ItemMoveCallback.kt$ItemMoveCallback$override</ID>
    <ID>MaxLineLength:LanguageContributor.kt$LanguageContributor$data</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_ANDROID_LAME, R.string.android_lame_title, R.string.android_lame_text, R.string.android_lame_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_AUDIO_RECORD_VIEW, R.string.audio_record_view_title, R.string.audio_record_view_text, R.string.audio_record_view_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_AUTOFITTEXTVIEW, R.string.autofittextview_title, R.string.autofittextview_text, R.string.autofittextview_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_GESTURE_VIEWS, R.string.gesture_views_title, R.string.gesture_views_text, R.string.gesture_views_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_GIF_DRAWABLE, R.string.gif_drawable_title, R.string.gif_drawable_text, R.string.gif_drawable_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_INDICATOR_FAST_SCROLL, R.string.indicator_fast_scroll_title, R.string.indicator_fast_scroll_text, R.string.indicator_fast_scroll_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_NUMBER_PICKER, R.string.number_picker_title, R.string.number_picker_text, R.string.number_picker_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$License(LICENSE_PDF_VIEW_PAGER, R.string.pdf_view_pager_title, R.string.pdf_view_pager_text, R.string.pdf_view_pager_url)</ID>
    <ID>MaxLineLength:LicenseActivity.kt$LicenseActivity$val thirdPartyLicenses by remember { derivedStateOf { initLicenses().filter { licenseMask and it.id != 0L }.toImmutableList() } }</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_ANDROID_LAME, R.string.android_lame_title, R.string.android_lame_text, R.string.android_lame_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_AUDIO_RECORD_VIEW, R.string.audio_record_view_title, R.string.audio_record_view_text, R.string.audio_record_view_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_AUTOFITTEXTVIEW, R.string.autofittextview_title, R.string.autofittextview_text, R.string.autofittextview_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_GESTURE_VIEWS, R.string.gesture_views_title, R.string.gesture_views_text, R.string.gesture_views_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_GIF_DRAWABLE, R.string.gif_drawable_title, R.string.gif_drawable_text, R.string.gif_drawable_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_LEAK_CANARY, R.string.leak_canary_title, R.string.leakcanary_text, R.string.leakcanary_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_M3U_PARSER, R.string.m3u_parser_title, R.string.m3u_parser_text, R.string.m3u_parser_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_NUMBER_PICKER, R.string.number_picker_title, R.string.number_picker_text, R.string.number_picker_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_PDF_VIEWER, R.string.pdf_viewer_title, R.string.pdf_viewer_text, R.string.pdf_viewer_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_PDF_VIEW_PAGER, R.string.pdf_view_pager_title, R.string.pdf_view_pager_text, R.string.pdf_view_pager_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_ROBOLECTRIC, R.string.robolectric_title, R.string.robolectric_text, R.string.robolectric_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_RTL, R.string.rtl_viewpager_title, R.string.rtl_viewpager_text, R.string.rtl_viewpager_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$License(LICENSE_SUBSAMPLING, R.string.subsampling_title, R.string.subsampling_text, R.string.subsampling_url)</ID>
    <ID>MaxLineLength:LicenseScreen.kt$}</ID>
    <ID>MaxLineLength:LineColorPickerDialog.kt$LineColorPickerDialog$val activity: BaseSimpleActivity</ID>
    <ID>MaxLineLength:LineColorPickerDialog.kt$LineColorPickerDialog$val appIconIDs: ArrayList&lt;Int&gt;? = null</ID>
    <ID>MaxLineLength:LineColorPickerDialog.kt$if (isPrimaryColorPicker) dialogLineColorPickerBinding!!.secondaryLineColorPicker else dialogLineColorPickerBinding!!.primaryLineColorPicker</ID>
    <ID>MaxLineLength:LocalContactsHelper.kt$LocalContactsHelper$fun</ID>
    <ID>MaxLineLength:LocalContactsHelper.kt$LocalContactsHelper$return (contacts.map { convertLocalContactToContact(it, storedGroups) }.toMutableList() as? ArrayList&lt;Contact&gt;) ?: arrayListOf()</ID>
    <ID>MaxLineLength:LocalContactsHelper.kt$LocalContactsHelper.Companion$SimpleContact(contact.id, contact.id, contact.getNameToDisplay(), contact.photoUri, contact.phoneNumbers, birthdays, anniversaries)</ID>
    <ID>MaxLineLength:LocalContactsHelper.kt$LocalContactsHelper.Companion$val anniversaries = contact.events.filter { it.type == Event.TYPE_ANNIVERSARY }.map { it.value }.toMutableList() as ArrayList&lt;String&gt;</ID>
    <ID>MaxLineLength:LocalContactsHelper.kt$LocalContactsHelper.Companion$val birthdays = contact.events.filter { it.type == Event.TYPE_BIRTHDAY }.map { it.value }.toMutableList() as ArrayList&lt;String&gt;</ID>
    <ID>MaxLineLength:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$requestCode == PICK_EXPORT_FILE_INTENT &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp; resultData != null &amp;&amp; resultData.data != null</ID>
    <ID>MaxLineLength:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$requestCode == PICK_IMPORT_SOURCE_INTENT &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp; resultData != null &amp;&amp; resultData.data != null</ID>
    <ID>MaxLineLength:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$val isBlockingHiddenNumbers by config.isBlockingHiddenNumbers.collectAsStateWithLifecycle(initialValue = config.blockHiddenNumbers)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$val isBlockingUnknownNumbers by config.isBlockingUnknownNumbers.collectAsStateWithLifecycle(initialValue = config.blockUnknownNumbers)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$//https://github.com/JetBrains/compose-multiplatform/issues/1878 same in M3, remove the top and bottom margin blocker</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$ActionItem(R.string.add_a_blocked_number, icon = Icons.Filled.Add, doAction = onAdd, overflowMode = OverflowMode.ALWAYS_OVERFLOW)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$ActionItem(R.string.export_blocked_numbers, doAction = onExportBlockedNumbers, overflowMode = OverflowMode.ALWAYS_OVERFLOW)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$ActionItem(R.string.import_blocked_numbers, doAction = onImportBlockedNumbers, overflowMode = OverflowMode.ALWAYS_OVERFLOW)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$ActionMenu(items = actionMenus, numIcons = 2, isMenuVisible = isMenuVisible, onMenuToggle = { isMenuVisible = it }, iconsColor = scrolledColor)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$ActionMenu(items = actionMenus, numIcons = if (selectedIdsCount == 1) 2 else 1, isMenuVisible = true, onMenuToggle = { }, iconsColor = iconColor)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 1, number = "000000000", normalizedNumber = "000000000", numberToCompare = "000000000", contactName = "Test")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 2, number = "111111111", normalizedNumber = "111111111", numberToCompare = "111111111")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 3, number = "5555555555", normalizedNumber = "5555555555", numberToCompare = "5555555555")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 4, number = "1234567890", normalizedNumber = "1234567890", numberToCompare = "1234567890")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 5, number = "9876543210", normalizedNumber = "9876543210", numberToCompare = "9876543210", contactName = "Test")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 6, number = "9998887777", normalizedNumber = "9998887777", numberToCompare = "9998887777")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 7, number = "2223334444", normalizedNumber = "2223334444", numberToCompare = "2223334444")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumber(id = 8, number = "5552221111", normalizedNumber = "5552221111", numberToCompare = "5552221111")</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$BlockedNumberActionMenu(selectedIdsCount = selectedIdsCount, onDelete = onDelete, onCopy = onCopy, iconColor = textColor)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$Crossfade</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$SimpleNavigationIcon(navigationIconInteractionSource = navigationIconInteractionSource, goBack = onBackClick, iconColor = textColor)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$Text(text = "$selectedIdsCount / $blockedNumbersCount", color = textColor, maxLines = 1, overflow = TextOverflow.Ellipsis)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$itemsIndexed</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$label = if (isDialer) stringResource(id = R.string.block_hidden_calls) else stringResource(id = R.string.block_hidden_messages)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$label = if (isDialer) stringResource(id = R.string.block_unknown_calls) else stringResource(id = R.string.block_unknown_messages)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$modifier = modifier.padding(horizontal = SimpleTheme.dimens.padding.medium, vertical = SimpleTheme.dimens.padding.extraSmall)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$onCopy(blockedNumbers.first { blockedNumber -&gt; blockedNumber.id == selectedIds.value.first() })</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$private</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$style = TextStyle(fontStyle = FontStyle.Italic, textAlign = TextAlign.Center, color = SimpleTheme.colorScheme.onSurface)</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$val</ID>
    <ID>MaxLineLength:ManageBlockedNumbersScreen.kt$val indexOfLastValueInSelection = blockedNumbers.indexOfFirst { selectedIds.value.last() == it.id }</ID>
    <ID>MaxLineLength:MyAppCompatSpinner.kt$MyAppCompatSpinner$adapter = MyArrayAdapter(context, android.R.layout.simple_spinner_item, items, textColor, backgroundColor, padding)</ID>
    <ID>MaxLineLength:MyArrayAdapter.kt$MyArrayAdapter$class</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider$// used for sharing privately stored contacts in Simple Contacts with Simple Dialer, Simple SMS Messenger and Simple Calendar Pro</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$if</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$val anniversaries = Gson().fromJson&lt;ArrayList&lt;String&gt;&gt;(anniversariesJson, stringsToken) ?: ArrayList()</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$val birthdays = Gson().fromJson&lt;ArrayList&lt;String&gt;&gt;(birthdaysJson, stringsToken) ?: ArrayList()</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$val contact = SimpleContact(rawId, contactId, name, photoUri, phoneNumbers, birthdays, anniversaries)</ID>
    <ID>MaxLineLength:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$val phoneNumbers = Gson().fromJson&lt;ArrayList&lt;PhoneNumber&gt;&gt;(phoneNumbersJson, phoneNumbersToken) ?: ArrayList()</ID>
    <ID>MaxLineLength:MyGridLayoutManager.kt$MyGridLayoutManager$constructor(context: Context, attrs: AttributeSet, defStyleAttr: Int, defStyleRes: Int) : super(context, attrs, defStyleAttr, defStyleRes)</ID>
    <ID>MaxLineLength:MyGridLayoutManager.kt$MyGridLayoutManager$constructor(context: Context, spanCount: Int, orientation: Int, reverseLayout: Boolean) : super(context, spanCount, orientation, reverseLayout)</ID>
    <ID>MaxLineLength:MyLinearLayoutManager.kt$MyLinearLayoutManager$constructor(context: Context, attrs: AttributeSet, defStyleAttr: Int, defStyleRes: Int) : super(context, attrs, defStyleAttr, defStyleRes)</ID>
    <ID>MaxLineLength:MyRecyclerView.kt$MyRecyclerView$throw IllegalStateException("Make sure your adapter makes a call to super.onBindViewHolder(), and doesn't override itemView tags.")</ID>
    <ID>MaxLineLength:MyRecyclerView.kt$MyRecyclerView.GestureListener$class</ID>
    <ID>MaxLineLength:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$abstract</ID>
    <ID>MaxLineLength:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter.&lt;no name provided&gt;$actBarTextView!!.layoutParams = ActionBar.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT)</ID>
    <ID>MaxLineLength:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter.&lt;no name provided&gt;$override</ID>
    <ID>MaxLineLength:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter.&lt;no name provided&gt;$val backArrow = activity.findViewById&lt;ImageView&gt;(androidx.appcompat.R.id.action_mode_close_button)</ID>
    <ID>MaxLineLength:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter.ViewHolder$fun</ID>
    <ID>MaxLineLength:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter.&lt;no name provided&gt;$actBarTextView!!.layoutParams = ActionBar.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT)</ID>
    <ID>MaxLineLength:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter.&lt;no name provided&gt;$override</ID>
    <ID>MaxLineLength:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter.&lt;no name provided&gt;$val backArrow = activity.findViewById&lt;ImageView&gt;(androidx.appcompat.R.id.action_mode_close_button)</ID>
    <ID>MaxLineLength:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter.ViewHolder$fun</ID>
    <ID>MaxLineLength:MySearchMenu.kt$MySearchMenu$params.scrollFlags = params.scrollFlags.removeBit(LayoutParams.SCROLL_FLAG_SCROLL or LayoutParams.SCROLL_FLAG_ENTER_ALWAYS)</ID>
    <ID>MaxLineLength:PasswordTypesAdapter.kt$PasswordTypesAdapter$(view as SecurityTab).initTab(requiredHash, hashListener, scrollView, biometricPromptHost, showBiometricAuthentication)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.PIXEL_2, name = "5.0 inches dark", group = DARK)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.PIXEL_2_XL, name = "6.0 inches dark", group = DARK)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.PIXEL_4, name = "5.7 inches dark", group = DARK)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.PIXEL_4_XL, name = "5.5 inches dark", group = DARK)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.PIXEL_4_XL, name = "6.3 inches dark", group = DARK)</ID>
    <ID>MaxLineLength:PreviewExtensions.kt$MyDevicesDarkOnly$@Preview(showBackground = true, uiMode = Configuration.UI_MODE_NIGHT_YES, device = Devices.TABLET, name = "Tablet", group = DARK)</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$(mDialogView.propertiesHolder.findViewById&lt;LinearLayout&gt;(R.id.properties_file_count).findViewById&lt;MyTextView&gt;(R.id.property_value)).text</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$(mDialogView.propertiesHolder.findViewById&lt;LinearLayout&gt;(R.id.properties_md5).findViewById&lt;MyTextView&gt;(R.id.property_value)).text</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$(mDialogView.propertiesHolder.findViewById&lt;LinearLayout&gt;(R.id.properties_size).findViewById&lt;MyTextView&gt;(R.id.property_value)).text = size</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$(view.findViewById&lt;LinearLayout&gt;(R.id.properties_last_modified).findViewById&lt;MyTextView&gt;(R.id.property_value)).text = timestamp.formatDate(activity)</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$*</ID>
    <ID>MaxLineLength:PropertiesDialog.kt$PropertiesDialog$if</ID>
    <ID>MaxLineLength:RadioGroupDialog.kt$RadioGroupDialog$addView(radioButton, RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT))</ID>
    <ID>MaxLineLength:RadioGroupDialog.kt$private</ID>
    <ID>MaxLineLength:RateStarsDialog.kt$.</ID>
    <ID>MaxLineLength:RenameDialog.kt$RenameDialog$alertDialog.window?.clearFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE or WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM)</ID>
    <ID>MaxLineLength:RenameDialog.kt$RenameDialog$class</ID>
    <ID>MaxLineLength:RenameDialog.kt$RenameDialog$it.text.toString().equals(root.context.resources.getString(R.string.simple_renaming), true) -&gt; RENAME_SIMPLE</ID>
    <ID>MaxLineLength:RenameItemsDialog.kt$RenameItemsDialog$val extension = if (fullName.contains(".")) ".${fullName.getFilenameExtension()}" else ""</ID>
    <ID>MaxLineLength:RenamePatternTab.kt$RenamePatternTab$if</ID>
    <ID>MaxLineLength:RenamePatternTab.kt$RenamePatternTab$val newFileName = getNewPath(path, useMediaFileExtension)?.getFilenameFromPath() ?: return@forEachIndexed</ID>
    <ID>MaxLineLength:Resources.kt$fun Resources.getColoredDrawable(drawableId: Int, colorId: Int, alpha: Int = 255)</ID>
    <ID>MaxLineLength:SecurityDialog.kt$SecurityDialog$it.text.toString().equals(root.context.resources.getString(R.string.pattern), true) -&gt; PROTECTION_PATTERN</ID>
    <ID>MaxLineLength:SecurityDialog.kt$SecurityDialog$it.text.toString().equals(root.context.resources.getString(R.string.pin), true) -&gt; PROTECTION_PIN</ID>
    <ID>MaxLineLength:SeekBar.kt$fun</ID>
    <ID>MaxLineLength:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$holder.addView(radioButton, RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT))</ID>
    <ID>MaxLineLength:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$setColors(activity.getProperTextColor(), activity.getProperPrimaryColor(), activity.getProperBackgroundColor())</ID>
    <ID>MaxLineLength:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$val</ID>
    <ID>MaxLineLength:SettingsCheckBoxComponent.kt$private</ID>
    <ID>MaxLineLength:SettingsScaffoldExtensions.kt$darkIcons = scrolledColor.isNotLitWell() &amp;&amp; darkIcons || (LocalTheme.current is Theme.SystemDefaultMaterialYou &amp;&amp; !isSystemInDarkTheme())</ID>
    <ID>MaxLineLength:SettingsScaffoldExtensions.kt$internal</ID>
    <ID>MaxLineLength:SettingsSwitchComponent.kt$private</ID>
    <ID>MaxLineLength:SimpleColumnScaffold.kt$customTopBar(scrolledColor, navigationIconInteractionSource, scrollBehavior, statusBarColor, colorTransitionFraction, contrastColor)</ID>
    <ID>MaxLineLength:SimpleColumnScaffold.kt$customTopBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit</ID>
    <ID>MaxLineLength:SimpleContactsHelper.kt$SimpleContactsHelper$// if there are duplicate contacts with the same name, while the first one has phone numbers 1234 and 4567, second one has only 4567,</ID>
    <ID>MaxLineLength:SimpleContactsHelper.kt$SimpleContactsHelper$fun</ID>
    <ID>MaxLineLength:SimpleContactsHelper.kt$SimpleContactsHelper$if</ID>
    <ID>MaxLineLength:SimpleContactsHelper.kt$SimpleContactsHelper$val contact = SimpleContact(rawId, contactId, fullName, photoUri, ArrayList(), ArrayList(), ArrayList())</ID>
    <ID>MaxLineLength:SimpleLazyListScaffold.kt$customTopBar(scrolledColor, navigationIconInteractionSource, scrollBehavior, statusBarColor, colorTransitionFraction, contrastColor)</ID>
    <ID>MaxLineLength:SimpleLazyListScaffold.kt$customTopBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit</ID>
    <ID>MaxLineLength:SimpleLazyListScaffold.kt$topBar(scrolledColor, navigationIconInteractionSource, scrollBehavior, statusBarColor, colorTransitionFraction, contrastColor)</ID>
    <ID>MaxLineLength:SimpleLazyListScaffold.kt$topBar: @Composable (scrolledColor: Color, navigationInteractionSource: MutableInteractionSource, scrollBehavior: TopAppBarScrollBehavior, statusBarColor: Int, colorTransitionFraction: Float, contrastColor: Color) -&gt; Unit</ID>
    <ID>MaxLineLength:SimpleLazyListScaffold.kt$val (colorTransitionFraction, scrolledColor) = transitionFractionAndScrolledColor(scrollBehavior, contrastColor, darkStatusBarIcons)</ID>
    <ID>MaxLineLength:SimpleListItem.kt$SimpleListItem$data</ID>
    <ID>MaxLineLength:SocialAction.kt$SocialAction</ID>
    <ID>MaxLineLength:StoragePickerDialog.kt$StoragePickerDialog$val layoutParams = RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)</ID>
    <ID>MaxLineLength:String.kt$"${context.baseConfig.OTGTreeUri}/document/${context.baseConfig.OTGPartition}%3A${substring(context.baseConfig.OTGPath.length).replace("/", "%2F")}"</ID>
    <ID>MaxLineLength:String.kt$BitmapFactory.decodeStream(context.contentResolver.openInputStream(context.getAndroidSAFUri(this)), null, options)</ID>
    <ID>MaxLineLength:String.kt$fun</ID>
    <ID>MaxLineLength:String.kt$fun String.isAudioSlow()</ID>
    <ID>MaxLineLength:String.kt$fun String.isImageSlow()</ID>
    <ID>MaxLineLength:String.kt$fun String.isPortrait()</ID>
    <ID>MaxLineLength:String.kt$fun String.isVideoSlow()</ID>
    <ID>MaxLineLength:String.kt$spannableString.setSpan(ForegroundColorSpan(color), result.start(), result.end(), Spannable.SPAN_EXCLUSIVE_INCLUSIVE)</ID>
    <ID>MaxLineLength:String.kt$spannableString.setSpan(ForegroundColorSpan(primaryColor), startIndex, endIndex, Spannable.SPAN_EXCLUSIVE_INCLUSIVE)</ID>
    <ID>MaxLineLength:Theme.kt$Theme.Companion$textColorInt = if (isSPlus()) colorResource(R.color.you_neutral_text_color).toArgb() else (if (isInDarkThemeAndSurfaceIsNotLitWell()) Color.White else Color.Black).toArgb()</ID>
    <ID>MaxLineLength:ThemeExtensions.kt$fun</ID>
    <ID>MaxLineLength:UpgradeToProDialog.kt$UpgradeToProDialog$activity</ID>
    <ID>MaxLineLength:VcfExporter.kt$VcfExporter$val</ID>
    <ID>MaxLineLength:VcfExporter.kt$VcfExporter$val photoByteArray = MediaStore.Images.Media.getBitmap(activity.contentResolver, Uri.parse(contact.thumbnailUri)).getByteArray()</ID>
    <ID>MaxLineLength:View.kt$fun View.performHapticFeedback()</ID>
    <ID>MaxLineLength:Window.kt$decorView.systemUiVisibility = decorView.systemUiVisibility.removeBit(View.SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$.</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$Html.fromHtml(activity.getString(R.string.confirm_storage_access_android_text_specific, humanizedPath))</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$class</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$glide.load(R.drawable.img_write_storage).transition(crossFade).into(sdCardView.writePermissionsDialogImage)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$glide.load(R.drawable.img_write_storage_create_doc_sdk_30).transition(crossFade).into(otgView.writePermissionsDialogOtgImage)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$glide.load(R.drawable.img_write_storage_otg).transition(crossFade).into(otgView.writePermissionsDialogOtgImage)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$glide.load(R.drawable.img_write_storage_sd).transition(crossFade).into(sdCardView.writePermissionsDialogImageSd)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$glide.load(R.drawable.img_write_storage_sdk_30).transition(crossFade).into(otgView.writePermissionsDialogOtgImage)</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$if (writePermissionDialogMode == WritePermissionDialogMode.SdCard) sdCardView.root else otgView.root</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialog$otgView.writePermissionsDialogOtgText.text = Html.fromHtml(activity.getString(R.string.confirm_create_doc_for_new_folder_text))</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$WritePermissionDialogModePreviewParameter$private</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$is WritePermissionDialog.WritePermissionDialogMode.OpenDocumentTreeSDK30</ID>
    <ID>MaxLineLength:WritePermissionDialog.kt$private</ID>
    <ID>NestedBlockDepth:Activity-sdk30.kt$fun BaseSimpleActivity.copySingleFileSdk30(source: FileDirItem, destination: FileDirItem): Boolean</ID>
    <ID>NestedBlockDepth:Activity.kt$fun Activity.setupDialogStuff( view: View, dialog: AlertDialog.Builder, titleId: Int = 0, titleText: String = "", cancelOnTouchOutside: Boolean = true, callback: ((alertDialog: AlertDialog) -&gt; Unit)? = null )</ID>
    <ID>NestedBlockDepth:Activity.kt$fun BaseSimpleActivity.deleteFileBg( fileDirItem: FileDirItem, allowDeleteFolder: Boolean = false, isDeletingMultipleFiles: Boolean, callback: ((wasSuccess: Boolean) -&gt; Unit)? = null, )</ID>
    <ID>NestedBlockDepth:AlphanumericComparator.kt$AlphanumericComparator$fun compare(string1: String, string2: String): Int</ID>
    <ID>NestedBlockDepth:BaseSimpleActivity.kt$BaseSimpleActivity$override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?)</ID>
    <ID>NestedBlockDepth:ContactsHelper.kt$ContactsHelper$private fun parseContactCursor(selection: String, selectionArgs: Array&lt;String&gt;): Contact?</ID>
    <ID>NestedBlockDepth:Context-storage.kt$@RequiresApi(Build.VERSION_CODES.O) fun Context.getAndroidSAFFileItems(path: String, shouldShowHidden: Boolean, getProperFileSize: Boolean = true, callback: (ArrayList&lt;FileDirItem&gt;) -&gt; Unit)</ID>
    <ID>NestedBlockDepth:Context-storage.kt$fun Context.getDirectChildrenCount(rootDocId: String, treeUri: Uri, documentId: String, shouldShowHidden: Boolean): Int</ID>
    <ID>NestedBlockDepth:Context-storage.kt$fun Context.getFolderLastModifieds(folder: String): HashMap&lt;String, Long&gt;</ID>
    <ID>NestedBlockDepth:Context-storage.kt$fun Context.getProperChildrenCount(rootDocId: String, treeUri: Uri, documentId: String, shouldShowHidden: Boolean): Int</ID>
    <ID>NestedBlockDepth:Context-storage.kt$fun Context.getSDCardPath(): String</ID>
    <ID>NestedBlockDepth:Context.kt$@RequiresApi(Build.VERSION_CODES.O) fun Context.queryCursor( uri: Uri, projection: Array&lt;String&gt;, queryArgs: Bundle, showErrors: Boolean = false, callback: (cursor: Cursor) -&gt; Unit )</ID>
    <ID>NestedBlockDepth:Context.kt$fun Context.getDataColumn(uri: Uri, selection: String? = null, selectionArgs: Array&lt;String&gt;? = null): String?</ID>
    <ID>NestedBlockDepth:Context.kt$fun Context.queryCursor( uri: Uri, projection: Array&lt;String&gt;, selection: String? = null, selectionArgs: Array&lt;String&gt;? = null, sortOrder: String? = null, showErrors: Boolean = false, callback: (cursor: Cursor) -&gt; Unit )</ID>
    <ID>NestedBlockDepth:CopyMoveTask.kt$CopyMoveTask$override fun doInBackground(vararg params: Pair&lt;ArrayList&lt;FileDirItem&gt;, String&gt;): Boolean</ID>
    <ID>NestedBlockDepth:ExternalStorageProviderHack.kt$ExternalStorageProviderHack$fun transformQueryResult(rootDocId: String, uri: Uri, cursor: Cursor): Cursor</ID>
    <ID>NestedBlockDepth:File.kt$private fun getDirectoryFileCount(dir: File, countHiddenItems: Boolean): Int</ID>
    <ID>NestedBlockDepth:File.kt$private fun getDirectorySize(dir: File, countHiddenItems: Boolean): Long</ID>
    <ID>NestedBlockDepth:FilepickerItemsAdapter.kt$FilepickerItemsAdapter$private fun setupView(view: ItemFilepickerListBinding, fileDirItem: FileDirItem)</ID>
    <ID>NestedBlockDepth:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$fun getContacts(context: Context, cursor: Cursor?): ArrayList&lt;Contact&gt;</ID>
    <ID>NestedBlockDepth:MyContactsContentProvider.kt$MyContactsContentProvider.Companion$fun getSimpleContacts(context: Context, cursor: Cursor?): ArrayList&lt;SimpleContact&gt;</ID>
    <ID>NestedBlockDepth:MyRecyclerView.kt$MyRecyclerView$override fun dispatchTouchEvent(ev: MotionEvent): Boolean</ID>
    <ID>NestedBlockDepth:MyRecyclerView.kt$MyRecyclerView$override fun onScrollChanged(l: Int, t: Int, oldl: Int, oldt: Int)</ID>
    <ID>NestedBlockDepth:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$private fun alarmClicked(alarmSound: AlarmSound)</ID>
    <ID>NestedBlockDepth:VcfExporter.kt$VcfExporter$fun exportContacts( activity: BaseSimpleActivity, outputStream: OutputStream?, contacts: ArrayList&lt;Contact&gt;, showExportingToast: Boolean, callback: (result: ExportResult) -&gt; Unit )</ID>
    <ID>PackageNaming:AlertDialogState.kt$package org.fossify.commons.compose.alert_dialog</ID>
    <ID>PackageNaming:AlertDialogsExtensions.kt$package org.fossify.commons.compose.alert_dialog</ID>
    <ID>PackageNaming:BottomSheetDialogState.kt$package org.fossify.commons.compose.bottom_sheet</ID>
    <ID>PackageNaming:BottomSheetDialogsExtensions.kt$package org.fossify.commons.compose.bottom_sheet</ID>
    <ID>PackageNaming:SystemUIController.kt$package org.fossify.commons.compose.system_ui_controller</ID>
    <ID>ReturnCount:Activity.kt$fun Activity.getFinalUriFromPath(path: String, applicationId: String): Uri?</ID>
    <ID>ReturnCount:AlphanumericComparator.kt$AlphanumericComparator$fun compare(string1: String, string2: String): Int</ID>
    <ID>ReturnCount:BaseSecurityTab.kt$BaseSecurityTab$private fun getCountdown(): Int</ID>
    <ID>ReturnCount:BaseSimpleActivity.kt$BaseSimpleActivity$override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?)</ID>
    <ID>ReturnCount:ContactsHelper.kt$ContactsHelper$fun createNewGroup(title: String, accountName: String, accountType: String): Group?</ID>
    <ID>ReturnCount:ContactsHelper.kt$ContactsHelper$fun getContactWithId(id: Int, isLocalPrivate: Boolean): Contact?</ID>
    <ID>ReturnCount:ContactsHelper.kt$ContactsHelper$fun insertContact(contact: Contact): Boolean</ID>
    <ID>ReturnCount:ContactsHelper.kt$ContactsHelper$fun updateContact(contact: Contact, photoUpdateStatus: Int): Boolean</ID>
    <ID>ReturnCount:Context-contacts.kt$fun isEncodedContactUri(uri: Uri?): Boolean</ID>
    <ID>ReturnCount:Context-storage.kt$fun Context.createDirectorySync(directory: String): Boolean</ID>
    <ID>ReturnCount:Context-storage.kt$fun Context.getFastDocumentFile(path: String): DocumentFile?</ID>
    <ID>ReturnCount:Context-storage.kt$fun Context.getFileOutputStreamSync(path: String, mimeType: String, parentDocumentFile: DocumentFile? = null): OutputStream?</ID>
    <ID>ReturnCount:Context.kt$@RequiresApi(Build.VERSION_CODES.N) fun Context.saveImageRotation(path: String, degrees: Int): Boolean</ID>
    <ID>ReturnCount:Context.kt$fun Context.getRealPathFromURI(uri: Uri): String?</ID>
    <ID>ReturnCount:CopyMoveTask.kt$CopyMoveTask$override fun doInBackground(vararg params: Pair&lt;ArrayList&lt;FileDirItem&gt;, String&gt;): Boolean</ID>
    <ID>ReturnCount:CopyMoveTask.kt$CopyMoveTask$private fun copyDirectory(source: FileDirItem, destinationPath: String)</ID>
    <ID>ReturnCount:ExternalStorageProviderHack.kt$ExternalStorageProviderHack$fun transformQueryResult(rootDocId: String, uri: Uri, cursor: Cursor): Cursor</ID>
    <ID>ReturnCount:LineColorPickerDialog.kt$LineColorPickerDialog$private fun getColorIndexes(color: Int): Pair&lt;Int, Int&gt;</ID>
    <ID>ReturnCount:LineColorPickerDialog.kt$private fun Context.getColorIndexes(color: Int, defaultColor: Int): Pair&lt;Int, Int&gt;</ID>
    <ID>ReturnCount:MyDialogViewPager.kt$MyDialogViewPager$override fun onTouchEvent(ev: MotionEvent): Boolean</ID>
    <ID>ReturnCount:MyRecyclerView.kt$MyRecyclerView$override fun dispatchTouchEvent(ev: MotionEvent): Boolean</ID>
    <ID>ReturnCount:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter$protected fun toggleItemSelection(select: Boolean, pos: Int, updateTitle: Boolean = true)</ID>
    <ID>ReturnCount:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter$protected fun toggleItemSelection(select: Boolean, pos: Int, updateTitle: Boolean = true)</ID>
    <ID>ReturnCount:RenamePatternTab.kt$RenamePatternTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>ReturnCount:RenamePatternTab.kt$RenamePatternTab$private fun getNewPath(path: String, useMediaFileExtension: Boolean): String?</ID>
    <ID>ReturnCount:RenameSimpleTab.kt$RenameSimpleTab$override fun dialogConfirmed(useMediaFileExtension: Boolean, callback: (success: Boolean) -&gt; Unit)</ID>
    <ID>ReturnCount:SimpleContactsHelper.kt$SimpleContactsHelper$fun getNameFromPhoneNumber(number: String): String</ID>
    <ID>ReturnCount:SimpleContactsHelper.kt$SimpleContactsHelper$fun getPhotoUriFromPhoneNumber(number: String): String</ID>
    <ID>ReturnCount:String.kt$fun String.highlightTextPart(textToHighlight: String, color: Int, highlightAll: Boolean = false, ignoreCharsBetweenDigits: Boolean = false): SpannableString</ID>
    <ID>SerialVersionUIDInSerializableClass:Group.kt$Group : Serializable</ID>
    <ID>SpreadOperator:Context-storage.kt$(paths, *rawSecondaryStorages)</ID>
    <ID>SwallowedException:AboutActivity.kt$AboutActivity$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:AboutActivity.kt$AboutActivity$e: Exception</ID>
    <ID>SwallowedException:Activity.kt$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:Activity.kt$e: Exception</ID>
    <ID>SwallowedException:BaseSimpleActivity.kt$BaseSimpleActivity$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:BaseSimpleActivity.kt$BaseSimpleActivity$e: Exception</ID>
    <ID>SwallowedException:BlockedNumbersExporter.kt$BlockedNumbersExporter$e: Exception</ID>
    <ID>SwallowedException:Context-contacts.kt$e: Exception</ID>
    <ID>SwallowedException:Context-storage.kt$e: Exception</ID>
    <ID>SwallowedException:Context-styling.kt$e: Exception</ID>
    <ID>SwallowedException:Context.kt$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:Context.kt$e: Exception</ID>
    <ID>SwallowedException:Context.kt$e: IllegalStateException</ID>
    <ID>SwallowedException:File.kt$e: Exception</ID>
    <ID>SwallowedException:FileDirItem.kt$FileDirItem$e: Exception</ID>
    <ID>SwallowedException:LocalContactsHelper.kt$LocalContactsHelper$e: OutOfMemoryError</ID>
    <ID>SwallowedException:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:MyTextInputLayout.kt$MyTextInputLayout$e: Exception</ID>
    <ID>SwallowedException:PropertiesDialog.kt$PropertiesDialog$e: Exception</ID>
    <ID>SwallowedException:RenamePatternTab.kt$RenamePatternTab$e: Exception</ID>
    <ID>SwallowedException:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:String.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AboutActivity.kt$AboutActivity$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Activity.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Activity.kt$e: RuntimeException</ID>
    <ID>TooGenericExceptionCaught:Activity.kt$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:BaseSimpleActivity.kt$BaseSimpleActivity$e: Exception</ID>
    <ID>TooGenericExceptionCaught:BlockedNumbersExporter.kt$BlockedNumbersExporter$e: Exception</ID>
    <ID>TooGenericExceptionCaught:BlockedNumbersImporter.kt$BlockedNumbersImporter$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ContactsHelper.kt$ContactsHelper$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context-contacts.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context-storage-sdk30.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context-storage.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context-styling.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:CopyMoveTask.kt$CopyMoveTask$e: Exception</ID>
    <ID>TooGenericExceptionCaught:CreateNewFolderDialog.kt$CreateNewFolderDialog$e: Exception</ID>
    <ID>TooGenericExceptionCaught:File.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FileDirItem.kt$FileDirItem$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity$e: Exception</ID>
    <ID>TooGenericExceptionCaught:MyTextInputLayout.kt$MyTextInputLayout$e: Exception</ID>
    <ID>TooGenericExceptionCaught:PropertiesDialog.kt$PropertiesDialog$e: Exception</ID>
    <ID>TooGenericExceptionCaught:RenamePatternTab.kt$RenamePatternTab$e: Exception</ID>
    <ID>TooGenericExceptionCaught:RenameSimpleTab.kt$RenameSimpleTab$e: Exception</ID>
    <ID>TooGenericExceptionCaught:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$e: Exception</ID>
    <ID>TooGenericExceptionCaught:String.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:VcfExporter.kt$VcfExporter$e: Exception</ID>
    <ID>TooGenericExceptionThrown:AppLockAdapter.kt$AppLockAdapter$throw RuntimeException("Only 3 tabs allowed")</ID>
    <ID>TooGenericExceptionThrown:BottomActionMenuParser.kt$BottomActionMenuParser$throw RuntimeException("Expecting menu, got $tagName")</ID>
    <ID>TooGenericExceptionThrown:LineColorPickerDialog.kt$LineColorPickerDialog$throw RuntimeException("Invalid color id $index")</ID>
    <ID>TooGenericExceptionThrown:LineColorPickerDialog.kt$throw RuntimeException("Invalid color id $index")</ID>
    <ID>TooGenericExceptionThrown:PasswordTypesAdapter.kt$PasswordTypesAdapter$throw RuntimeException("Only 3 tabs allowed")</ID>
    <ID>TooGenericExceptionThrown:RenameAdapter.kt$RenameAdapter$throw RuntimeException("Only 2 tabs allowed")</ID>
    <ID>TooManyFunctions:AboutActivity.kt$AboutActivity : BaseComposeActivity</ID>
    <ID>TooManyFunctions:Activity.kt$org.fossify.commons.extensions.Activity.kt</ID>
    <ID>TooManyFunctions:BaseConfig.kt$BaseConfig</ID>
    <ID>TooManyFunctions:BaseSecurityTab.kt$BaseSecurityTab : ConstraintLayoutSecurityTab</ID>
    <ID>TooManyFunctions:BaseSimpleActivity.kt$BaseSimpleActivity : AppCompatActivity</ID>
    <ID>TooManyFunctions:BottomActionMenuView.kt$BottomActionMenuView : LinearLayout</ID>
    <ID>TooManyFunctions:Breadcrumbs.kt$Breadcrumbs : HorizontalScrollView</ID>
    <ID>TooManyFunctions:ComposeExtensions.kt$org.fossify.commons.compose.extensions.ComposeExtensions.kt</ID>
    <ID>TooManyFunctions:Constants.kt$org.fossify.commons.helpers.Constants.kt</ID>
    <ID>TooManyFunctions:Contact.kt$Contact : Comparable</ID>
    <ID>TooManyFunctions:ContactsHelper.kt$ContactsHelper</ID>
    <ID>TooManyFunctions:Context-contacts.kt$org.fossify.commons.extensions.Context-contacts.kt</ID>
    <ID>TooManyFunctions:Context-storage-sdk30.kt$org.fossify.commons.extensions.Context-storage-sdk30.kt</ID>
    <ID>TooManyFunctions:Context-storage.kt$org.fossify.commons.extensions.Context-storage.kt</ID>
    <ID>TooManyFunctions:Context-styling.kt$org.fossify.commons.extensions.Context-styling.kt</ID>
    <ID>TooManyFunctions:Context.kt$org.fossify.commons.extensions.Context.kt</ID>
    <ID>TooManyFunctions:Converters.kt$Converters</ID>
    <ID>TooManyFunctions:CopyMoveTask.kt$CopyMoveTask : AsyncTask</ID>
    <ID>TooManyFunctions:CustomIntervalPickerDialog.kt$org.fossify.commons.dialogs.CustomIntervalPickerDialog.kt</ID>
    <ID>TooManyFunctions:CustomizationActivity.kt$CustomizationActivity : BaseSimpleActivity</ID>
    <ID>TooManyFunctions:File.kt$org.fossify.commons.extensions.File.kt</ID>
    <ID>TooManyFunctions:FileDirItem.kt$FileDirItem : Comparable</ID>
    <ID>TooManyFunctions:FilePickerDialog.kt$FilePickerDialog : BreadcrumbsListener</ID>
    <ID>TooManyFunctions:FilepickerFavoritesAdapter.kt$FilepickerFavoritesAdapter : MyRecyclerViewAdapter</ID>
    <ID>TooManyFunctions:FilepickerItemsAdapter.kt$FilepickerItemsAdapter : MyRecyclerViewAdapterOnPopupTextUpdate</ID>
    <ID>TooManyFunctions:Int.kt$org.fossify.commons.extensions.Int.kt</ID>
    <ID>TooManyFunctions:LocalContactsHelper.kt$LocalContactsHelper</ID>
    <ID>TooManyFunctions:ManageBlockedNumbersActivity.kt$ManageBlockedNumbersActivity : BaseSimpleActivity</ID>
    <ID>TooManyFunctions:ManageBlockedNumbersScreen.kt$org.fossify.commons.compose.screens.ManageBlockedNumbersScreen.kt</ID>
    <ID>TooManyFunctions:MyRecyclerViewAdapter.kt$MyRecyclerViewAdapter : Adapter</ID>
    <ID>TooManyFunctions:MyRecyclerViewListAdapter.kt$MyRecyclerViewListAdapter&lt;T&gt; : ListAdapter</ID>
    <ID>TooManyFunctions:SimpleContactsHelper.kt$SimpleContactsHelper</ID>
    <ID>TooManyFunctions:String.kt$org.fossify.commons.extensions.String.kt</ID>
    <ID>TooManyFunctions:View.kt$org.fossify.commons.extensions.View.kt</ID>
    <ID>TopLevelPropertyNaming:ChangeDateTimeFormatDialog.kt$private const val timeSample = 1676419200000 // February 15, 2023</ID>
    <ID>UnusedParameter:MyAppCompatCheckbox.kt$MyAppCompatCheckbox$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyAppCompatSpinner.kt$MyAppCompatSpinner$accentColor: Int</ID>
    <ID>UnusedParameter:MyAutoCompleteTextView.kt$MyAutoCompleteTextView$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyButton.kt$MyButton$accentColor: Int</ID>
    <ID>UnusedParameter:MyButton.kt$MyButton$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyCompatRadioButton.kt$MyCompatRadioButton$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyEditText.kt$MyEditText$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyFloatingActionButton.kt$MyFloatingActionButton$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyFloatingActionButton.kt$MyFloatingActionButton$textColor: Int</ID>
    <ID>UnusedParameter:MyMaterialSwitch.kt$MyMaterialSwitch$backgroundColor: Int</ID>
    <ID>UnusedParameter:MySeekBar.kt$MySeekBar$backgroundColor: Int</ID>
    <ID>UnusedParameter:MySeekBar.kt$MySeekBar$textColor: Int</ID>
    <ID>UnusedParameter:MyTextInputLayout.kt$MyTextInputLayout$backgroundColor: Int</ID>
    <ID>UnusedParameter:MyTextView.kt$MyTextView$backgroundColor: Int</ID>
    <ID>UnusedParameter:SimpleColumnScaffold.kt$goBack: () -&gt; Unit</ID>
    <ID>UnusedParameter:WritePermissionDialog.kt$@PreviewParameter(WritePermissionDialogModePreviewParameter::class) mode: WritePermissionDialog.WritePermissionDialogMode</ID>
    <ID>UnusedPrivateMember:AboutScreen.kt$@MyDevices @Composable private fun AboutScreenPreview()</ID>
    <ID>UnusedPrivateMember:ActionMenu.kt$@MyDevices @Composable private fun ActionMenuPreview()</ID>
    <ID>UnusedPrivateMember:AddBlockedNumberDialog.kt$@Composable @MyDevices private fun AddOrEditBlockedNumberAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:AppSideloadedDialog.kt$@Composable @MyDevices private fun AppSideLoadedAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:BottomSheetChooserDialog.kt$@MyDevices @Composable private fun ChooserBottomSheetDialogPreview()</ID>
    <ID>UnusedPrivateMember:CallConfirmationDialog.kt$@Composable @MyDevices private fun CallConfirmationAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ChangeDateTimeFormatDialog.kt$@Composable @MyDevices private fun ChangeDateTimeFormatAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ChangeViewTypeDialog.kt$@MyDevices @Composable private fun ChangeViewTypeAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ColorPickerDialog.kt$@Composable @MyDevices private fun ColorPickerAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ConfirmationAdvancedDialog.kt$@Composable @MyDevices private fun ConfirmationAdvancedAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ConfirmationDialog.kt$@Composable @MyDevices private fun ConfirmationAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:ContributorsScreen.kt$@Composable @MyDevices private fun ContributorsScreenPreview()</ID>
    <ID>UnusedPrivateMember:CreateNewFolderDialog.kt$@MyDevices @Composable private fun CreateNewFolderAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:CustomIntervalPickerDialog.kt$@Composable @MyDevices private fun CustomIntervalPickerAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:DonateDialog.kt$@Composable @MyDevices private fun DonateAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:EnterPasswordDialog.kt$@MyDevices @Composable private fun EnterPasswordAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:FAQScreen.kt$@MyDevices @Composable private fun FAQScreenPreview()</ID>
    <ID>UnusedPrivateMember:FeatureLockedDialog.kt$@Composable @MyDevices private fun FeatureLockedAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:FileConflictDialog.kt$@MyDevices @Composable private fun FileConflictAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:FolderLockingNoticeDialog.kt$@Composable @MyDevices private fun FolderLockingNoticeAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:LicenseScreen.kt$@Composable @MyDevices private fun LicenseScreenPreview()</ID>
    <ID>UnusedPrivateMember:LineColorPickerDialog.kt$@Composable @MyDevices private fun LineColorPickerAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:LinkifyTextComponent.kt$@Composable @MyDevices private fun LinkifyTextComponentPreview()</ID>
    <ID>UnusedPrivateMember:ManageBlockedNumbersScreen.kt$@MyDevices @Composable private fun ManageBlockedNumbersScreenPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isDialer: Boolean)</ID>
    <ID>UnusedPrivateMember:OpenDeviceSettingsDialog.kt$@Composable @MyDevices private fun OpenDeviceSettingsAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:PermissionRequiredDialog.kt$@Composable @MyDevices private fun PermissionRequiredAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:PurchaseThankYouDialog.kt$@Composable @MyDevices private fun PurchaseThankYouAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:RadioButtonDialogComponent.kt$@Composable @MyDevices private fun RadioButtonDialogComponentPreview()</ID>
    <ID>UnusedPrivateMember:RadioGroupDialog.kt$@Composable @MyDevices private fun RadioGroupDialogAlertDialogPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) showOKButton: Boolean)</ID>
    <ID>UnusedPrivateMember:RadioGroupDialogComponent.kt$@Composable @MyDevices private fun RadioGroupDialogComponentPreview()</ID>
    <ID>UnusedPrivateMember:RateStarsDialog.kt$@Composable @MyDevices private fun RateStarsAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:SettingsCheckBoxComponent.kt$@MyDevices @Composable private fun SettingsCheckBoxComponentPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isChecked: Boolean)</ID>
    <ID>UnusedPrivateMember:SettingsDivider.kt$@Composable @MyDevices private fun SettingsHorizontalDividerPreview()</ID>
    <ID>UnusedPrivateMember:SettingsGroup.kt$@MyDevices @Composable private fun SettingsGroupPreview()</ID>
    <ID>UnusedPrivateMember:SettingsLazyGroup.kt$@MyDevices @Composable private fun SettingsLazyGroupPreview()</ID>
    <ID>UnusedPrivateMember:SettingsPreferenceComponent.kt$@MyDevices @Composable private fun SettingsPreferencePreview()</ID>
    <ID>UnusedPrivateMember:SettingsSwitchComponent.kt$@MyDevices @Composable private fun SettingsSwitchComponentPreview(@PreviewParameter(BooleanPreviewParameterProvider::class) isChecked: Boolean)</ID>
    <ID>UnusedPrivateMember:SettingsTitleTextComponent.kt$@MyDevices @Composable private fun SettingsTitleTextComponentPreview()</ID>
    <ID>UnusedPrivateMember:SimpleColumnScaffold.kt$@MyDevices @Composable private fun SimpleColumnScaffoldPreview()</ID>
    <ID>UnusedPrivateMember:SimpleDropDownMenuItem.kt$@MyDevices @Composable private fun SimpleDropDownMenuItemPreview()</ID>
    <ID>UnusedPrivateMember:SimpleLazyListScaffold.kt$@MyDevices @Composable private fun SimpleLazyListScaffoldPreview()</ID>
    <ID>UnusedPrivateMember:SimpleScaffoldTopBar.kt$@Composable @MyDevices private fun SimpleScaffoldTopBarPreview()</ID>
    <ID>UnusedPrivateMember:UpgradeToProDialog.kt$@MyDevices @Composable private fun UpgradeToProAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:WhatsNewDialog.kt$@MyDevices @Composable private fun WhatsNewAlertDialogPreview()</ID>
    <ID>UnusedPrivateMember:WritePermissionDialog.kt$@Composable @MyDevices private fun WritePermissionAlertDialogPreview(@PreviewParameter(WritePermissionDialogModePreviewParameter::class) mode: WritePermissionDialog.WritePermissionDialogMode)</ID>
    <ID>UnusedPrivateProperty:Context-storage.kt$val rawExternalStorage = System.getenv("EXTERNAL_STORAGE")</ID>
    <ID>UnusedPrivateProperty:CustomizationActivity.kt$CustomizationActivity.Companion$private const val THEME_SOLARIZED = 2</ID>
    <ID>UnusedPrivateProperty:String.kt$i</ID>
    <ID>UnusedPrivateProperty:Theme.kt$val configuration = LocalConfiguration.current</ID>
    <ID>UseCheckOrError:MyRecyclerView.kt$MyRecyclerView$throw IllegalStateException("Make sure your adapter makes a call to super.onBindViewHolder(), and doesn't override itemView tags.")</ID>
    <ID>UtilityClassWithPublicConstructor:MyContactsContentProvider.kt$MyContactsContentProvider</ID>
    <ID>VariableNaming:BaseConfig.kt$BaseConfig$var OTGPartition: String get() = prefs.getString(OTG_PARTITION, "")!! set(OTGPartition) = prefs.edit().putString(OTG_PARTITION, OTGPartition).apply()</ID>
    <ID>VariableNaming:BaseConfig.kt$BaseConfig$var OTGPath: String get() = prefs.getString(OTG_REAL_PATH, "")!! set(OTGPath) = prefs.edit().putString(OTG_REAL_PATH, OTGPath).apply()</ID>
    <ID>VariableNaming:BaseConfig.kt$BaseConfig$var OTGTreeUri: String get() = prefs.getString(OTG_TREE_URI, "")!! set(OTGTreeUri) = prefs.edit().putString(OTG_TREE_URI, OTGTreeUri).apply()</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val DELETE_FILE_SDK_30_HANDLER = 300</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val GENERIC_PERM_HANDLER = 100</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val MANAGE_MEDIA_RC = 303</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val RECOVERABLE_SECURITY_HANDLER = 301</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val TRASH_FILE_SDK_30_HANDLER = 304</ID>
    <ID>VariableNaming:BaseSimpleActivity.kt$BaseSimpleActivity$private val UPDATE_FILE_SDK_30_HANDLER = 302</ID>
    <ID>VariableNaming:ContactsHelper.kt$ContactsHelper$private val BATCH_SIZE = 50</ID>
    <ID>VariableNaming:ContactsHelper.kt$ContactsHelper$val IDsString = TextUtils.join(",", relevantGroupIDs)</ID>
    <ID>VariableNaming:ContactsHelper.kt$ContactsHelper$val IM = cursor.getStringValue(CommonDataKinds.Im.DATA) ?: return@queryCursor</ID>
    <ID>VariableNaming:ContactsHelper.kt$ContactsHelper$val IMs = SparseArray&lt;ArrayList&lt;IM&gt;&gt;()</ID>
    <ID>VariableNaming:ContactsHelper.kt$ContactsHelper$val IMs = getIMs()</ID>
    <ID>VariableNaming:Context-storage.kt$val OTGTreeUri = baseConfig.OTGTreeUri</ID>
    <ID>VariableNaming:Context-storage.kt$val SCAN_FILE_MAX_DURATION = 1000L</ID>
    <ID>VariableNaming:Context-storage.kt$val SDpattern = Pattern.compile(SD_OTG_SHORT)</ID>
    <ID>VariableNaming:CopyMoveTask.kt$CopyMoveTask$private val INITIAL_PROGRESS_DELAY = 3000L</ID>
    <ID>VariableNaming:CopyMoveTask.kt$CopyMoveTask$private val PROGRESS_RECHECK_INTERVAL = 500L</ID>
    <ID>VariableNaming:FingerprintTab.kt$FingerprintTab$private val RECHECK_PERIOD = 3000L</ID>
    <ID>VariableNaming:Int.kt$val DARK_FACTOR = factor</ID>
    <ID>VariableNaming:Int.kt$val LIGHT_FACTOR = factor</ID>
    <ID>VariableNaming:LineColorPickerDialog.kt$LineColorPickerDialog$private val DEFAULT_COLOR_VALUE = activity.resources.getColor(R.color.color_primary)</ID>
    <ID>VariableNaming:LineColorPickerDialog.kt$LineColorPickerDialog$private val DEFAULT_PRIMARY_COLOR_INDEX = 9</ID>
    <ID>VariableNaming:LineColorPickerDialog.kt$LineColorPickerDialog$private val DEFAULT_SECONDARY_COLOR_INDEX = 8</ID>
    <ID>VariableNaming:LineColorPickerDialog.kt$LineColorPickerDialog$private val PRIMARY_COLORS_COUNT = 19</ID>
    <ID>VariableNaming:MyRecyclerView.kt$MyRecyclerView$private val AUTO_SCROLL_DELAY = 25L</ID>
    <ID>VariableNaming:MyRecyclerView.kt$MyRecyclerView.GestureListener$private val ZOOM_IN_THRESHOLD = -0.4f</ID>
    <ID>VariableNaming:MyRecyclerView.kt$MyRecyclerView.GestureListener$private val ZOOM_OUT_THRESHOLD = 0.15f</ID>
    <ID>VariableNaming:SelectAlarmSoundDialog.kt$SelectAlarmSoundDialog$private val ADD_NEW_SOUND_ID = -2</ID>
    <ID>VariableNaming:StoragePickerDialog.kt$StoragePickerDialog$private val ID_INTERNAL = 1</ID>
    <ID>VariableNaming:StoragePickerDialog.kt$StoragePickerDialog$private val ID_OTG = 3</ID>
    <ID>VariableNaming:StoragePickerDialog.kt$StoragePickerDialog$private val ID_ROOT = 4</ID>
    <ID>VariableNaming:StoragePickerDialog.kt$StoragePickerDialog$private val ID_SD = 2</ID>
    <ID>WildcardImport:AboutActivity.kt$import android.content.Intent.*</ID>
    <ID>WildcardImport:AboutActivity.kt$import org.fossify.commons.compose.screens.*</ID>
    <ID>WildcardImport:AboutActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:AboutActivity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:ActionMenu.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ActionMenu.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:ActionMenu.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:Activity.kt$import android.content.*</ID>
    <ID>WildcardImport:Activity.kt$import java.io.*</ID>
    <ID>WildcardImport:Activity.kt$import org.fossify.commons.dialogs.*</ID>
    <ID>WildcardImport:Activity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Activity.kt$import org.fossify.commons.models.*</ID>
    <ID>WildcardImport:ActivityExtensions.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:AddBlockedNumberDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:AddBlockedNumberDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:AlertDialogState.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:AppLockActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:AppSideloadedDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:AppSideloadedDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:AppTheme.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:BaseBottomSheetDialogFragment.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:BaseSimpleActivity.kt$import org.fossify.commons.dialogs.*</ID>
    <ID>WildcardImport:BaseSimpleActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:BaseSimpleActivity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:BaseSplashActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:BiometricIdTab.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:BottomActionMenuItemPopup.kt$import android.view.*</ID>
    <ID>WildcardImport:BottomSheetDialogState.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:BottomSheetDialogsExtensions.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:Breadcrumbs.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:CallConfirmationDialog.kt$import androidx.compose.animation.core.*</ID>
    <ID>WildcardImport:CallConfirmationDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:ChangeDateTimeFormatDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ChangeDateTimeFormatDialog.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:ChangeDateTimeFormatDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ChangeDateTimeFormatDialog.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:ChangeViewTypeDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ChangeViewTypeDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ColorPickerDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ColorPickerDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ColorPickerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ColorPickerSquare.kt$import android.graphics.*</ID>
    <ID>WildcardImport:ComposeExtensions.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ConfirmationAdvancedDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:ConfirmationDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:Contact.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:ContactsHelper.kt$import android.content.*</ID>
    <ID>WildcardImport:ContactsHelper.kt$import android.provider.ContactsContract.*</ID>
    <ID>WildcardImport:ContactsHelper.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ContactsHelper.kt$import org.fossify.commons.models.contacts.*</ID>
    <ID>WildcardImport:Context-contacts.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Context-storage.kt$import android.provider.MediaStore.*</ID>
    <ID>WildcardImport:Context-storage.kt$import java.io.*</ID>
    <ID>WildcardImport:Context-storage.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Context-styling.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Context-styling.kt$import org.fossify.commons.views.*</ID>
    <ID>WildcardImport:Context.kt$import android.content.*</ID>
    <ID>WildcardImport:Context.kt$import android.os.*</ID>
    <ID>WildcardImport:Context.kt$import android.provider.MediaStore.*</ID>
    <ID>WildcardImport:Context.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Converters.kt$import org.fossify.commons.models.contacts.*</ID>
    <ID>WildcardImport:CopyMoveTask.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:CreateNewFolderDialog.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:CreateNewFolderDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:CreateNewFolderDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:CreateNewFolderDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:CustomIntervalPickerDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:CustomIntervalPickerDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:CustomIntervalPickerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:CustomizationActivity.kt$import org.fossify.commons.dialogs.*</ID>
    <ID>WildcardImport:CustomizationActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:CustomizationActivity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:DonateDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:DonateDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:DragHandler.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:DynamicTheme.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:EnterPasswordDialog.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:EnterPasswordDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:EnterPasswordDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:EnterPasswordDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ExportBlockedNumbersDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ExportSettingsDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:FAQScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:FeatureLockedDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:FeatureLockedDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:File.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:FileConflictDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:FileConflictDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:FileDirItem.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:FileDirItem.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:FilePickerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:FilepickerItemsAdapter.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:FingerprintTab.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:FolderLockingNoticeDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:LicenseActivity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:LicenseScreen.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:LineColorPickerDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:LineColorPickerDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:LineColorPickerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersActivity.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersActivity.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersActivity.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import org.fossify.commons.compose.extensions.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import org.fossify.commons.compose.lists.*</ID>
    <ID>WildcardImport:ManageBlockedNumbersScreen.kt$import org.fossify.commons.compose.theme.*</ID>
    <ID>WildcardImport:MyRecyclerViewAdapter.kt$import android.view.*</ID>
    <ID>WildcardImport:MyRecyclerViewAdapter.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:MyRecyclerViewListAdapter.kt$import android.view.*</ID>
    <ID>WildcardImport:MyRecyclerViewListAdapter.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:MySearchMenu.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:OpenDeviceSettingsDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:PermissionRequiredDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:PinTab.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:PropertiesDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:PropertiesDialog.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:PurchaseThankYouDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:PurchaseThankYouDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RadioButtonDialogComponent.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:RadioGroupDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:RateStarsDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:RateStarsDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:RateStarsDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RenameDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RenameItemDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RenameItemsDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RenamePatternTab.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:RenameSimpleTab.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SecurityDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SecurityDialog.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:SelectAlarmSoundDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SettingsCheckBoxComponent.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SettingsCheckBoxComponent.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:SettingsGroup.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SettingsLazyGroup.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SettingsScaffoldExtensions.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SettingsScaffoldExtensions.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:SettingsSwitchComponent.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SettingsSwitchComponent.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:SimpleColumnScaffold.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SimpleColumnScaffold.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:SimpleContactsHelper.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SimpleLazyListScaffold.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SimpleLazyListScaffold.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:SimpleListItemAdapter.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SimpleScaffoldTopBar.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:SimpleScaffoldTopBar.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:StoragePickerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:String.kt$import android.text.*</ID>
    <ID>WildcardImport:String.kt$import org.fossify.commons.helpers.*</ID>
    <ID>WildcardImport:Theme.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:Theme.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:UpgradeToProDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:VcfExporter.kt$import ezvcard.property.*</ID>
    <ID>WildcardImport:WhatsNewDialog.kt$import org.fossify.commons.compose.alert_dialog.*</ID>
    <ID>WildcardImport:WritePermissionDialog.kt$import androidx.compose.foundation.layout.*</ID>
  </CurrentIssues>
</SmellBaseline>
